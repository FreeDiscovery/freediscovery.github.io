

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['filenames', 'id']
       => dsid = 93feebcf772b4565

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/93feebcf772b4565

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/93feebcf772b4565
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 7041dff04f6048f5
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 5762c4f17b874e15

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/5762c4f17b874e15
        .. computed in 1.3s
       cluster_id                    cluster_label  cluster_similarity  cluster_size  n_documents
    0           0      enron_development ect group               0.085           938          938
    1           1                 tue outlook team               0.198           253          253
    2           2               thu normal subject               0.235           220          220
    3           3            shall agreement party               0.729            33           33
    4           4           rewrite address server               1.000            56           56
    5           5  ricafrente wed ricafrente_david               0.285           152          152
    6           6                   teneo test ect               0.128           430          430
    7           7               shall party lessee               0.597            52           52
    8           8           confirmation date corp               0.330            74           74
    9           9       mon shackleton_sara normal               0.189           257          257

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 3bb3ecc249b04e39

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/3bb3ecc249b04e39
        .. computed in 2.4s
                                            children  cluster_depth  cluster_id                      cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 7, 9, 13, 25, 29, 31, 45, 49, 65, 86]              0           0                    normal test ect               0.071          2465         2465
    1                                            [2]              1           1      issues enron_development cone               0.622            22           22
    2                                             []              2           2      issues enron_development cone               0.622            22           22
    3                                      [4, 5, 6]              1           3              transaction party ena               0.259           139          139
    4                                             []              2           4                       ena swap rmt               0.517            22           22
    5                                             []              2           5             shackleton load neuner               0.435            22           22
    6                                             []              2           6           transaction party period               0.334            95           95
    7                                            [8]              1           7                    tiger isda want               0.516            21           21
    8                                             []              2           8                    tiger isda want               0.516            21           21
    9                                   [10, 11, 12]              1           9             rewrite address server               0.429           140          140
    10                                            []              2          10                 heard office month               0.349            23           23
    11                                            []              2          11             rewrite address server               0.603            97           97
    12                                            []              2          12                advice update jones               0.423            20           20
    13  [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]              1          13               shall agreement load               0.188           295          295
    14                                            []              2          14        deseret etringer shackleton               0.380            29           29
    15                                            []              2          15                   sat company load               0.410            12           12
    16                                            []              2          16  catalytica confirmation agreement               0.439            15           15
    17                                            []              2          17                tana jones language               0.359            19           19
    18                                            []              2          18             shall agreement lessee               0.497            55           55
    19                                            []              2          19              password use dasovich               0.996             2            2
    20                                            []              2          20         enron_development rate doc               0.294            29           29
    21                                            []              2          21              customer shall energy               0.407            38           38
    22                                            []              2          22           amoco sorenson jefferson               0.573            11           11
    23                                            []              2          23                  kean teneo normal               0.412            58           58
    24                                            []              2          24                 teneo normal power               0.476            27           27
    25                                  [26, 27, 28]              1          25        market foreign transmission               0.217           128          128
    26                                            []              2          26                   pcb account fuel               0.434            19           19
    27                                            []              2          27                   class meter plan               0.312            42           42
    28                                            []              2          28               market trade foreign               0.294            67           67
    29                                          [30]              1          29           list project information               0.699             8            8
    ..                                           ...            ...         ...                                ...                 ...           ...          ...
    67                                            []              2          67       sentence interconnect canada               0.369            28           28
    68                                            []              2          68              stay motion gillaspie               0.357            18           18
    69                                            []              2          69               gillaspie matt email               0.421            15           15
    70                                            []              2          70             nemec subject townsend               0.394            26           26
    71                                            []              2          71                  dead master horse               0.352            49           49
    72                                            []              2          72                   mon outlook team               0.447            12           12
    73                                            []              2          73           message milbank intended               0.386            31           31
    74                                            []              2          74                      price ect day               0.346            29           29
    75                                            []              2          75                   mon tenet normal               0.396            42           42
    76                                            []              2          76             eb3325 meet ricafrente               0.490            36           36
    77                                            []              2          77    office enrononline transmission               0.403            21           21
    78                                            []              2          78                    doc nemec teneo               0.334            43           43
    79                                            []              2          79           bockius compaq following               0.461             9            9
    80                                            []              2          80                      ect ellis hou               0.349            16           16
    81                                            []              2          81    office southern americancentury               0.344            33           33
    82                                            []              2          82                   neuner time know               0.314            17           17
    83                                            []              2          83             team migration outlook               0.322            34           34
    84                                            []              2          84          tiger catalytica guaranty               0.372            16           16
    85                                            []              2          85          attorney library services               0.373            13           13
    86      [87, 88, 89, 90, 91, 92, 93, 94, 95, 96]              1          86                  tenet normal test               0.209           305          305
    87                                            []              2          87                  tenet fri houston               0.370            35           35
    88                                            []              2          88                   thu tenet normal               0.376            31           31
    89                                            []              2          89                      tue tenet oct               0.478            24           24
    90                                            []              2          90               wed tenet conference               0.371            60           60
    91                                            []              2          91                 tue oct ricafrente               0.420            44           44
    92                                            []              2          92                  mon meeting tenet               0.392            31           31
    93                                            []              2          93                    ect room budget               0.333            36           36
    94                                            []              2          94                        ect cat hou               0.767             3            3
    95                                            []              2          95                      fri tenet nov               0.429            26           26
    96                                            []              2          96                      fri tenet fyi               0.510            15           15

    [97 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/3bb3ecc249b04e39
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           11               0.603            97  [{'document_id': 5041, 'similarity': 0.9576836...
    1            6               0.334            95  [{'document_id': 165649, 'similarity': 0.70999...
    2           40               0.349            80  [{'document_id': 154449, 'similarity': 0.70404...
    3           28               0.294            67  [{'document_id': 4624, 'similarity': 0.6065384...
    4           90               0.371            60  [{'document_id': 1768900, 'similarity': 0.6478...
    5           23               0.412            58  [{'document_id': 315844, 'similarity': 0.57967...
    6           18               0.497            55  [{'document_id': 298116, 'similarity': 0.80570...
    7           63               0.374            49  [{'document_id': 5452225, 'similarity': 0.6132...
    8           71               0.352            49  [{'document_id': 1098304, 'similarity': 0.5680...
    9           32               0.334            45  [{'document_id': 7396, 'similarity': 0.6372682...
    10          66               0.330            44  [{'document_id': 583696, 'similarity': 0.67025...
    11          91               0.420            44  [{'document_id': 1893376, 'similarity': 0.7300...
    12          50               0.408            43  [{'document_id': 4631104, 'similarity': 0.7590...
    13          78               0.334            43  [{'document_id': 1585081, 'similarity': 0.5930...
    14          27               0.312            42  [{'document_id': 495616, 'similarity': 0.52880...
    15          75               0.396            42  [{'document_id': 3080025, 'similarity': 0.6425...
    16          62               0.367            41  [{'document_id': 4609609, 'similarity': 0.6519...
    17          21               0.407            38  [{'document_id': 682276, 'similarity': 0.74802...
    18          48               0.423            38  [{'document_id': 3984016, 'similarity': 0.5204...
    19          33               0.348            37  [{'document_id': 108241, 'similarity': 0.53312...
    20          43               0.361            36  [{'document_id': 84681, 'similarity': 0.550436...
    21          46               0.441            36  [{'document_id': 1317904, 'similarity': 0.6398...
    22          76               0.490            36  [{'document_id': 2900209, 'similarity': 0.6277...
    23          93               0.333            36  [{'document_id': 2402500, 'similarity': 0.6159...
    24          38               0.275            35  [{'document_id': 958441, 'similarity': 0.45808...
    25          87               0.370            35  [{'document_id': 5740816, 'similarity': 0.6079...
    26          56               0.278            34  [{'document_id': 3748096, 'similarity': 0.4547...
    27          83               0.322            34  [{'document_id': 5846724, 'similarity': 0.5961...
    28          81               0.344            33  [{'document_id': 1879641, 'similarity': 0.5815...
    29          36               0.329            32  [{'document_id': 277729, 'similarity': 0.52986...
    ..         ...                 ...           ...                                                ...
    33          88               0.376            31  [{'document_id': 1871424, 'similarity': 0.6724...
    34          92               0.392            31  [{'document_id': 2250000, 'similarity': 0.6941...
    35          53               0.402            30  [{'document_id': 1117249, 'similarity': 0.6957...
    36          14               0.380            29  [{'document_id': 82369, 'similarity': 0.660828...
    37          20               0.294            29  [{'document_id': 393129, 'similarity': 0.47142...
    38          74               0.346            29  [{'document_id': 1210000, 'similarity': 0.6578...
    39          42               0.435            28  [{'document_id': 1234321, 'similarity': 0.6459...
    40          51               0.401            28  [{'document_id': 7569, 'similarity': 0.5886687...
    41          67               0.369            28  [{'document_id': 779689, 'similarity': 0.48989...
    42          24               0.476            27  [{'document_id': 351649, 'similarity': 0.65888...
    43          37               0.363            27  [{'document_id': 902500, 'similarity': 0.57483...
    44          70               0.394            26  [{'document_id': 697225, 'similarity': 0.70400...
    45          95               0.429            26  [{'document_id': 3294225, 'similarity': 0.6172...
    46          52               0.335            24  [{'document_id': 1285956, 'similarity': 0.5229...
    47          89               0.478            24  [{'document_id': 3171961, 'similarity': 0.8434...
    48          10               0.349            23  [{'document_id': 14161, 'similarity': 0.508680...
    49           2               0.622            22  [{'document_id': 256, 'similarity': 0.91021167...
    50           4               0.517            22  [{'document_id': 79524, 'similarity': 0.886528...
    51           5               0.435            22  [{'document_id': 62001, 'similarity': 0.693166...
    52          35               0.452            22  [{'document_id': 423801, 'similarity': 0.61114...
    53           8               0.516            21  [{'document_id': 21025, 'similarity': 0.680491...
    54          34               0.516            21  [{'document_id': 99856, 'similarity': 0.781906...
    55          55               0.350            21  [{'document_id': 484416, 'similarity': 0.51430...
    56          77               0.403            21  [{'document_id': 3367225, 'similarity': 0.5822...
    57          12               0.423            20  [{'document_id': 234256, 'similarity': 0.72197...
    58          41               0.391            20  [{'document_id': 1010025, 'similarity': 0.4905...
    59          44               0.379            20  [{'document_id': 974169, 'similarity': 0.57501...
    60          17               0.359            19  [{'document_id': 218089, 'similarity': 0.53047...
    61          26               0.434            19  [{'document_id': 921600, 'similarity': 0.58759...
    62          68               0.357            18  [{'document_id': 743044, 'similarity': 0.55774...

    [63 rows x 4 columns]

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/93feebcf772b4565




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {'dataset_definition': dataset_definition,
               #'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url)

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  11.268 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
