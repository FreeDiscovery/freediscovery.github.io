

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 51a9fedbef7c4591

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/51a9fedbef7c4591

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/51a9fedbef7c4591
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 331c601a7b5a4b70
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 0b584e3145be481c

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/0b584e3145be481c
        .. computed in 1.1s
       cluster_id                    cluster_label  cluster_similarity  cluster_size  n_documents
    0           0            fri subject agreement               0.218           231          231
    1           1               sanders mon normal               0.209           204          204
    2           2        ect hou enron_development               0.353            96           96
    3           3  ricafrente ricafrente_david nov               0.263           160          160
    4           4                    tenet tue oct               0.235           185          185
    5           5   test recipients administrative               0.264           169          169
    6           6           rewrite address server               1.000            56           56
    7           7                 master enron new               0.089           817          817
    8           8                  nov outlook mon               0.206           212          212
    9           9            conference wed normal               0.144           335          335

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 8337a2c0d498411e

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/8337a2c0d498411e
        .. computed in 3.8s
                                                  children  cluster_depth  cluster_id                     cluster_label  cluster_similarity  cluster_size  n_documents
    0    [1, 3, 7, 11, 27, 29, 32, 35, 40, 49, 51, 53, ...              0           0                   normal test ect               0.071          2465         2465
    1                                                  [2]              1           1            rewrite address server               0.816            69           69
    2                                                   []              2           2            rewrite address server               0.816            69           69
    3                                            [4, 5, 6]              1           3            shackleton issues load               0.274            97           97
    4                                                   []              2           4             shackleton load trade               0.384            35           35
    5                                                   []              2           5           shackleton davidson mon               0.489            10           10
    6                                                   []              2           6     issues enron_development cone               0.366            52           52
    7                                           [8, 9, 10]              1           7               jones tana dasovich               0.285            54           54
    8                                                   []              2           8               dasovich jones tana               0.384            24           24
    9                                                   []              2           9                   form jones tana               0.533             5            5
    10                                                  []              2          10                jones tana weather               0.399            25           25
    11   [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2...              1          11                ect hou shackleton               0.125           488          488
    12                                                  []              2          12          amoco jefferson sorenson               0.457            20           20
    13                                                  []              2          13                 deal aquilla muni               0.402            32           32
    14                                                  []              2          14             conference credit mtm               0.355            30           30
    15                                                  []              2          15                     ect hou ellis               0.471            59           59
    16                                                  []              2          16            guaranty dupre systems               0.339            30           30
    17                                                  []              2          17             confirmation ena swap               0.364            54           54
    18                                                  []              2          18          services attorney energy               0.342            39           39
    19                                                  []              2          19                  doc gallup nemec               0.432            24           24
    20                                                  []              2          20                    cat urine odor               0.391            18           18
    21                                                  []              2          21                isda lunch rodolfo               0.367            30           30
    22                                                  []              2          22                 black dupre power               0.414            27           27
    23                                                  []              2          23    internet customers enrononline               0.315            35           35
    24                                                  []              2          24                  tiger harris tue               0.302            57           57
    25                                                  []              2          25                    mtg fri update               0.473            21           21
    26                                                  []              2          26                ect hou translated               0.452            12           12
    27                                                [28]              1          27             mitsubishi tokyo tana               0.603            10           10
    28                                                  []              2          28             mitsubishi tokyo tana               0.603            10           10
    29                                            [30, 31]              1          29                  teneo normal oct               0.528            39           39
    ..                                                 ...            ...         ...                               ...                 ...           ...          ...
    72                                                  []              2          72              stress eb3325 murray               0.403            13           13
    73                                                  []              2          73                     thu tenet oct               0.478            17           17
    74                                                  []              2          74                   mon eb3325 lyco               0.352            29           29
    75                                                  []              2          75                     tenet mon nov               0.350            59           59
    76                                                  []              2          76                meeting office fri               0.372            39           39
    77                                                  []              2          77                  tue tenet normal               0.366            56           56
    78   [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 9...              1          78  enron_development normal subject               0.104           470          470
    79                                                  []              2          79   enron_development committee esa               0.406            42           42
    80                                                  []              2          80                 board isda mexico               0.324            31           31
    81                                                  []              2          81                   project new rcr               0.319            32           32
    82                                                  []              2          82     gillaspie ruppert performance               0.350            41           41
    83                                                  []              2          83                 berkeley haas edu               0.399            25           25
    84                                                  []              2          84                 nemec subject bar               0.405            28           28
    85                                                  []              2          85                  party year check               0.370            25           25
    86                                                  []              2          86               know neuner confirm               0.350            23           23
    87                                                  []              2          87  elbertson norm elbertson_janette               0.334            31           31
    88                                                  []              2          88                   sager meet work               0.298            53           53
    89                                                  []              2          89               message milbank lay               0.362            26           26
    90                                                  []              2          90            keohane diligence days               0.433            13           13
    91                                                  []              2          91         enrononline teneo forster               0.371            30           30
    92                                                  []              2          92          deseret counsel etringer               0.345            24           24
    93                                                  []              2          93           mtg kincannon migration               0.320            46           46
    94                      [95, 96, 97, 98, 99, 100, 101]              1          94       shackleton_sara teneo group               0.165           198          198
    95                                                  []              2          95                market power awais               0.309            46           46
    96                                                  []              2          96            deseret etringer month               0.384            31           31
    97                                                  []              2          97                  teneo test clair               0.332            27           27
    98                                                  []              2          98             list court securities               0.417            18           18
    99                                                  []              2          99                   lon energy boyd               0.325            24           24
    100                                                 []              2         100              training data thanks               0.369            20           20
    101                                                 []              2         101   shackleton_sara shackleton calo               0.457            32           32

    [102 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/8337a2c0d498411e
        .. computed in 0.2s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           36               0.370            78  [{'document_id': 168921, 'similarity': 0.80372...
    1            2               0.816            69  [{'document_id': 5041, 'similarity': 0.9948926...
    2           15               0.471            59  [{'document_id': 11236, 'similarity': 0.807738...
    3           75               0.350            59  [{'document_id': 2334784, 'similarity': 0.6453...
    4           47               0.307            58  [{'document_id': 1100401, 'similarity': 0.5905...
    5           24               0.302            57  [{'document_id': 4596736, 'similarity': 0.6063...
    6           77               0.366            56  [{'document_id': 3455881, 'similarity': 0.6303...
    7           17               0.364            54  [{'document_id': 54756, 'similarity': 0.575812...
    8           38               0.510            53  [{'document_id': 293764, 'similarity': 0.76094...
    9           88               0.298            53  [{'document_id': 1119364, 'similarity': 0.5061...
    10           6               0.366            52  [{'document_id': 784, 'similarity': 0.70775085...
    11          55               0.483            48  [{'document_id': 154449, 'similarity': 0.82780...
    12          93               0.320            46  [{'document_id': 5480281, 'similarity': 0.6779...
    13          95               0.309            46  [{'document_id': 361201, 'similarity': 0.48829...
    14          37               0.391            44  [{'document_id': 4624, 'similarity': 0.6955933...
    15          45               0.329            43  [{'document_id': 2402500, 'similarity': 0.6272...
    16          79               0.406            42  [{'document_id': 4631104, 'similarity': 0.7701...
    17          82               0.350            41  [{'document_id': 756900, 'similarity': 0.59861...
    18          18               0.342            39  [{'document_id': 36481, 'similarity': 0.546270...
    19          76               0.372            39  [{'document_id': 3880900, 'similarity': 0.5736...
    20          71               0.351            38  [{'document_id': 1710864, 'similarity': 0.6391...
    21          34               0.502            37  [{'document_id': 370881, 'similarity': 0.61288...
    22          62               0.442            37  [{'document_id': 3802500, 'similarity': 0.5959...
    23          42               0.306            36  [{'document_id': 2913849, 'similarity': 0.4337...
    24           4               0.384            35  [{'document_id': 62001, 'similarity': 0.565358...
    25          23               0.315            35  [{'document_id': 423801, 'similarity': 0.59543...
    26          68               0.400            34  [{'document_id': 1742400, 'similarity': 0.6391...
    27          70               0.309            34  [{'document_id': 1934881, 'similarity': 0.4817...
    28          13               0.402            32  [{'document_id': 7225, 'similarity': 0.7380441...
    29          31               0.581            32  [{'document_id': 314721, 'similarity': 0.72122...
    ..         ...                 ...           ...                                                ...
    31          81               0.319            32  [{'document_id': 331776, 'similarity': 0.53115...
    32         101               0.457            32  [{'document_id': 4879681, 'similarity': 0.5826...
    33          80               0.324            31  [{'document_id': 202500, 'similarity': 0.62569...
    34          87               0.334            31  [{'document_id': 4473225, 'similarity': 0.5316...
    35          96               0.384            31  [{'document_id': 72900, 'similarity': 0.602544...
    36          14               0.355            30  [{'document_id': 7569, 'similarity': 0.6129018...
    37          16               0.339            30  [{'document_id': 4915089, 'similarity': 0.6140...
    38          21               0.367            30  [{'document_id': 4765489, 'similarity': 0.6615...
    39          91               0.371            30  [{'document_id': 3560769, 'similarity': 0.5849...
    40          57               0.452            29  [{'document_id': 234256, 'similarity': 0.81216...
    41          74               0.352            29  [{'document_id': 3097600, 'similarity': 0.5881...
    42          84               0.405            28  [{'document_id': 697225, 'similarity': 0.65400...
    43          22               0.414            27  [{'document_id': 104329, 'similarity': 0.53579...
    44          39               0.451            27  [{'document_id': 1530169, 'similarity': 0.8398...
    45          58               0.414            27  [{'document_id': 1232100, 'similarity': 0.7250...
    46          97               0.332            27  [{'document_id': 3087049, 'similarity': 0.6220...
    47          89               0.362            26  [{'document_id': 4088484, 'similarity': 0.6573...
    48          10               0.399            25  [{'document_id': 275625, 'similarity': 0.65561...
    49          41               0.406            25  [{'document_id': 910116, 'similarity': 0.56798...
    50          83               0.399            25  [{'document_id': 512656, 'similarity': 0.59524...
    51          85               0.370            25  [{'document_id': 781456, 'similarity': 0.56028...
    52           8               0.384            24  [{'document_id': 324900, 'similarity': 0.60895...
    53          19               0.432            24  [{'document_id': 683929, 'similarity': 0.72283...
    54          92               0.345            24  [{'document_id': 4490161, 'similarity': 0.6781...
    55          99               0.325            24  [{'document_id': 3186225, 'similarity': 0.5436...
    56          43               0.398            23  [{'document_id': 894916, 'similarity': 0.57220...
    57          86               0.350            23  [{'document_id': 1216609, 'similarity': 0.6301...
    58          25               0.473            21  [{'document_id': 5555449, 'similarity': 0.6512...
    59          48               0.432            21  [{'document_id': 1814409, 'similarity': 0.6686...
    60          12               0.457            20  [{'document_id': 1156, 'similarity': 0.7726762...

    [61 rows x 4 columns]

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/51a9fedbef7c4591




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  14.546 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
