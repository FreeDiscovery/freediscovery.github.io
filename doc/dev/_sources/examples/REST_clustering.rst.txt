

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['filenames', 'id']
       => dsid = 97e436025c4b427c

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/97e436025c4b427c

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/97e436025c4b427c
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: ../freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 0.75
         - min_df: 4.0
         - n_features: 30001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: True

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = df680492f3fe469b
      => SVD decomposition with 100 dimensions explaining 53.28 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = e8f84c41f3354094

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/e8f84c41f3354094
        .. computed in 1.6s
       cluster_id                  cluster_label  cluster_similarity  cluster_size  n_documents
    0           0                 jones tana mon               0.360           315          315
    1           1  meeting mon enron_development               0.384           250          250
    2           2           dasovich alias teneo               0.360           292          292
    3           3     energy market transmission               0.467           164          164
    4           4      enron agreement kincannon               0.312           715          715
    5           5                  ect hou clair               0.471           127          127
    6           6         rewrite server address               1.000            56           56
    7           7                  tue oct tenet               0.380           234          234
    8           8                wed eb3325 meet               0.403           194          194
    9           9              sanders thu lunch               0.488           118          118

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 79cc11a2570e43b6

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/79cc11a2570e43b6
        .. computed in 2.7s
                                                 children  cluster_depth  cluster_id                             cluster_label  cluster_similarity  cluster_size  n_documents
    0                               [1, 3, 5, 25, 34, 55]              0           0                              test ect oct               0.294          2465         2465
    1                                                 [2]              1           1                    rewrite server address               0.915            63           63
    2                                                  []              2           2                    rewrite server address               0.915            63           63
    3                                                 [4]              1           3                      tiger guaranty sekse               0.676            27           27
    4                                                  []              2           4                      tiger guaranty sekse               0.676            27           27
    5   [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1...              1           5                            tenet test nov               0.314           937          937
    6                                                  []              2           6                         flynn bailey test               0.437            90           90
    7                                                  []              2           7                       advice dupre update               0.474            59           59
    8                                                  []              2           8                   neuner trade catalytica               0.485            43           43
    9                                                  []              2           9           transaction confirmation period               0.543            47           47
    10                                                 []              2          10                     lunch shackleton calo               0.425            64           64
    11                                                 []              2          11                          tana jones awais               0.559            20           20
    12                                                 []              2          12                           usvi pier gpier               0.469            37           37
    13                                                 []              2          13                              fri nov load               0.500            41           41
    14                                                 []              2          14                             fri ena tenet               0.439            68           68
    15                                                 []              2          15                             tue tenet oct               0.527            44           44
    16                                                 []              2          16                              wed load oct               0.467            59           59
    17                                                 []              2          17                  seminar midland training               0.601            14           14
    18                                                 []              2          18                         haedicke thu test               0.540            67           67
    19                                                 []              2          19                           eb3325 nov meet               0.481            58           58
    20                                                 []              2          20                   midamerican roberts mtg               0.419            38           38
    21                                                 []              2          21                          dasovich tue oct               0.432            50           50
    22                                                 []              2          22                     meeting migration mon               0.457            46           46
    23                                                 []              2          23                      thu tenet ricafrente               0.474            36           36
    24                                                 []              2          24                             tenet mon wed               0.471            56           56
    25                   [26, 27, 28, 29, 30, 31, 32, 33]              1          25                           ect energy kean               0.353           399          399
    26                                                 []              2          26                             ect power hou               0.491            14           14
    27                                                 []              2          27                        kean berkeley haas               0.511            66           66
    28                                                 []              2          28           wed ricafrente_david ricafrente               0.420            38           38
    29                                                 []              2          29                           price ect place               0.473            48           48
    30                                                 []              2          30                    enrononline cini enron               0.502            45           45
    31                                                 []              2          31                       ect shall agreement               0.446            98           98
    32                                                 []              2          32                       gtc master attorney               0.453            45           45
    33                                                 []              2          33                       energy power market               0.605            45           45
    34  [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 4...              1          34                           teneo enron ect               0.311           941          941
    35                                                 []              2          35  enron_development shackleton serralheiro               0.499            50           50
    36                                                 []              2          36                      marcelo lessee shall               0.462            90           90
    37                                                 []              2          37                 ect hou enron_development               0.473            59           59
    38                                                 []              2          38                       nemec ruppert exxon               0.429           109          109
    39                                                 []              2          39                  nicolay ingersoll presto               0.526            41           41
    40                                                 []              2          40              party transaction defaulting               0.474           105          105
    41                                                 []              2          41                    dasovich sampling tana               0.435            63           63
    42                                                 []              2          42                            dead horse lon               0.430            49           49
    43                                                 []              2          43           recipients administrative group               0.484            24           24
    44                                                 []              2          44                          enron tana jones               0.470            55           55
    45                                                 []              2          45   enron_development cone ricafrente_david               0.524            44           44
    46                                                 []              2          46                  kincannon oct downstairs               0.517            33           33
    47                                                 []              2          47                           lay sager teneo               0.460            37           37
    48                                                 []              2          48                    conference legal tenet               0.510            35           35
    49                                                 []              2          49                      ellis library doctor               0.737             3            3
    50                                                 []              2          50                    migration outlook team               0.419            60           60
    51                                                 []              2          51                    deseret etringer teneo               0.609            14           14
    52                                                 []              2          52          teneo shackleton_sara shackleton               0.501            32           32
    53                                                 []              2          53                 teneo fri shackleton_sara               0.704             3            3
    54                                                 []              2          54           teneo recipients administrative               0.573            35           35
    55                                           [56, 57]              1          55                         sanders nov lunch               0.508            98           98
    56                                                 []              2          56                           sanders tue hou               0.639            12           12
    57                                                 []              2          57                         sanders nov lunch               0.509            86           86

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/79cc11a2570e43b6
        .. computed in 0.6s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            0               0.429           109  [{'document_id': 636804, 'similarity': 0.42864...
    1            1               0.474           105  [{'document_id': 167281, 'similarity': 0.47413...
    2            2               0.446            98  [{'document_id': 608400, 'similarity': 0.44642...
    3            3               0.437            90  [{'document_id': 85264, 'similarity': 0.437478...
    4            4               0.462            90  [{'document_id': 99856, 'similarity': 0.462291...
    5            5               0.509            86  [{'document_id': 1413721, 'similarity': 0.5093...
    6            6               0.439            68  [{'document_id': 5308416, 'similarity': 0.4391...
    7            7               0.540            67  [{'document_id': 2913849, 'similarity': 0.5402...
    8            8               0.511            66  [{'document_id': 559504, 'similarity': 0.51134...
    9            9               0.425            64  [{'document_id': 23104, 'similarity': 0.425420...
    10          10               0.915            63  [{'document_id': 5041, 'similarity': 0.9145786...
    11          11               0.435            63  [{'document_id': 1071225, 'similarity': 0.4352...
    12          12               0.419            60  [{'document_id': 5808100, 'similarity': 0.4194...
    13          13               0.474            59  [{'document_id': 227529, 'similarity': 0.47386...
    14          14               0.467            59  [{'document_id': 199809, 'similarity': 0.46682...
    15          15               0.473            59  [{'document_id': 2030625, 'similarity': 0.4725...
    16          16               0.481            58  [{'document_id': 2900209, 'similarity': 0.4807...
    17          17               0.471            56  [{'document_id': 5654884, 'similarity': 0.4707...
    18          18               0.470            55  [{'document_id': 1962801, 'similarity': 0.4697...
    19          19               0.432            50  [{'document_id': 1774224, 'similarity': 0.4316...
    20          20               0.499            50  [{'document_id': 33489, 'similarity': 0.499075...
    21          21               0.430            49  [{'document_id': 3370896, 'similarity': 0.4298...
    22          22               0.473            48  [{'document_id': 553536, 'similarity': 0.47288...
    23          23               0.543            47  [{'document_id': 54756, 'similarity': 0.542952...
    24          24               0.457            46  [{'document_id': 5982916, 'similarity': 0.4565...
    25          25               0.502            45  [{'document_id': 425104, 'similarity': 0.50246...
    26          26               0.453            45  [{'document_id': 3225616, 'similarity': 0.4532...
    27          27               0.605            45  [{'document_id': 207025, 'similarity': 0.60495...
    28          28               0.527            44  [{'document_id': 6031936, 'similarity': 0.5269...
    29          29               0.524            44  [{'document_id': 131769, 'similarity': 0.52411...
    30          30               0.485            43  [{'document_id': 14884, 'similarity': 0.485046...
    31          31               0.500            41  [{'document_id': 528529, 'similarity': 0.49971...
    32          32               0.526            41  [{'document_id': 157609, 'similarity': 0.52567...
    33          33               0.419            38  [{'document_id': 1464100, 'similarity': 0.4190...
    34          34               0.420            38  [{'document_id': 2155024, 'similarity': 0.4198...
    35          35               0.469            37  [{'document_id': 1229881, 'similarity': 0.4693...
    36          36               0.460            37  [{'document_id': 1729225, 'similarity': 0.4597...
    37          37               0.474            36  [{'document_id': 2331729, 'similarity': 0.4742...
    38          38               0.510            35  [{'document_id': 1493284, 'similarity': 0.5096...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/97e436025c4b427c




|


.. code-block:: python


    import os.path
    import numpy as np
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])} \
                                   for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {'dataset_definition': dataset_definition,
               'use_idf': 1, 'n_features': 30001,
               'min_df': 4, 'max_df': 0.75 # filter out unfrequent / too frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url)

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items() \
                                                      if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 100
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print('  => SVD decomposition with {} dimensions explaining {:.2f} % variabilty of the data'.format(
                            n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              #'min_similarity': 0.95,
                              'branching_factor': 20 
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  11.079 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
