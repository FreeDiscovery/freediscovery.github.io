

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['filenames', 'id']
       => dsid = 99bd386fd38f4f18

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/99bd386fd38f4f18

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/99bd386fd38f4f18
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: ../freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 0.75
         - min_df: 4.0
         - n_features: 30001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: True

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = e330bad28aed4a44
      => SVD decomposition with 100 dimensions explaining 53.29 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = c9e64863f86543be

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/c9e64863f86543be
        .. computed in 1.7s
       cluster_id                       cluster_label  cluster_similarity  cluster_size  n_documents
    0           0              migration outlook team               0.353           346          346
    1           1             energy kincannon market               0.430           224          224
    2           2                mon tenet conference               0.398           214          214
    3           3              rewrite server address               1.000            56           56
    4           4     teneo recipients administrative               0.400           230          230
    5           5               shall party agreement               0.573            91           91
    6           6  enron_development shackleton alias               0.330           423          423
    7           7                    tana jones enron               0.352           362          362
    8           8                       ect nemec hou               0.372           281          281
    9           9                haedicke tue meeting               0.376           238          238

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = c7c67241ee044ca5

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/c7c67241ee044ca5
        .. computed in 4.4s
                                                 children  cluster_depth  cluster_id                         cluster_label  cluster_similarity  cluster_size  n_documents
    0                   [1, 5, 7, 12, 19, 30, 34, 38, 46]              0           0                          test ect oct               0.294          2465         2465
    1                                           [2, 3, 4]              1           1  enron_development shackleton deseret               0.407           114          114
    2                                                  []              2           2              sample malowney customer               0.781             8            8
    3                                                  []              2           3    enron_development deseret etringer               0.495            61           61
    4                                                  []              2           4             shackleton south attorney               0.476            45           45
    5                                                 [6]              1           5                rewrite server address               0.658            99           99
    6                                                  []              2           6                rewrite server address               0.658            99           99
    7                                      [8, 9, 10, 11]              1           7                         load nov meet               0.503            65           65
    8                                                  []              2           8                          load nov fri               0.527            45           45
    9                                                  []              2           9                         wed tiger oct               0.648             5            5
    10                                                 []              2          10                    load conf yosemite               0.667             9            9
    11                                                 []              2          11                          thu load oct               0.636             6            6
    12                           [13, 14, 15, 16, 17, 18]              1          12                    market energy rate               0.423           206          206
    13                                                 []              2          13                 budget total customer               0.665            22           22
    14                                                 []              2          14           enrononline enron customers               0.707            10           10
    15                                                 []              2          15          enron_development tax brazil               0.479            51           51
    16                                                 []              2          16                   energy market power               0.551            63           63
    17                                                 []              2          17                      project tva serc               0.541            50           50
    18                                                 []              2          18               dasovich bruno gaillard               0.639            10           10
    19           [20, 21, 22, 23, 24, 25, 26, 27, 28, 29]              1          19                         ect hou nemec               0.332           544          544
    20                                                 []              2          20                       doc sanders fri               0.485            41           41
    21                                                 []              2          21                       nemec doc sheet               0.558            35           35
    22                                                 []              2          22                         ect hou ellis               0.507            94           94
    23                                                 []              2          23                 neuner catalytica mtg               0.507            27           27
    24                                                 []              2          24               party shall transaction               0.504            99           99
    25                                                 []              2          25                  advice update mexico               0.511            45           45
    26                                                 []              2          26                 nemec catalytica bump               0.434            65           65
    27                                                 []              2          27                       lon ect forster               0.512            56           56
    28                                                 []              2          28                      enron tana jones               0.487            40           40
    29                                                 []              2          29                conference legal tenet               0.461            42           42
    ..                                                ...            ...         ...                                   ...                 ...           ...          ...
    36                                                 []              2          36                        law lon simons               0.681             5            5
    37                                                 []              2          37                     meeting nov tenet               0.499            44           44
    38                       [39, 40, 41, 42, 43, 44, 45]              1          38                       wed tenet teneo               0.385           193          193
    39                                                 []              2          39        recipients test administrative               0.574            22           22
    40                                                 []              2          40                         tenet mon nov               0.481            49           49
    41                                                 []              2          41           townsend gtownsend manorisd               0.760            15           15
    42                                                 []              2          42                         wed oct tenet               0.574            22           22
    43                                                 []              2          43                   master trade online               1.000             1            1
    44                                                 []              2          44                         wed tenet oct               0.507            41           41
    45                                                 []              2          45      teneo shackleton_sara recipients               0.547            43           43
    46  [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 5...              1          46            haedicke sanders migration               0.305          1008         1008
    47                                                 []              2          47                     berkeley haas edu               0.450            76           76
    48                                                 []              2          48                   nicolay dupre sager               0.449            70           70
    49                                                 []              2          49                migration outlook team               0.514            40           40
    50                                                 []              2          50                 kean harris brokerage               0.505            57           57
    51                                                 []              2          51                  lessee seminar shall               0.473            23           23
    52                                                 []              2          52                  kincannon hendry mtg               0.404            78           78
    53                                                 []              2          53       haedicke cone enron_development               0.476            96           96
    54                                                 []              2          54       transaction confirmation period               0.547            45           45
    55                                                 []              2          55                       thu tenet lunch               0.474            51           51
    56                                                 []              2          56                      tana jones awais               0.483            40           40
    57                                                 []              2          57        dasovich enron_development gdr               0.505            54           54
    58                                                 []              2          58                 mtg migration outlook               0.477            48           48
    59                                                 []              2          59                      jones tana enron               0.539            32           32
    60                                                 []              2          60                      enron gtc online               0.531            24           24
    61                                                 []              2          61                     sanders lunch nov               0.633            20           20
    62                                                 []              2          62                    sanders dead horse               0.505            53           53
    63                                                 []              2          63                  message milbank mail               0.450            52           52
    64                                                 []              2          64                      lunch lafuze mon               0.488            35           35
    65                                                 []              2          65                    shall marcelo calo               0.424           114          114

    [66 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/c7c67241ee044ca5
        .. computed in 0.6s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            0               0.424           114  [{'document_id': 1577536, 'similarity': 0.4243...
    1            1               0.658            99  [{'document_id': 5041, 'similarity': 0.6583878...
    2            2               0.504            99  [{'document_id': 599076, 'similarity': 0.50375...
    3            3               0.476            96  [{'document_id': 2992900, 'similarity': 0.4761...
    4            4               0.507            94  [{'document_id': 11025, 'similarity': 0.507496...
    5            5               0.412            91  [{'document_id': 724201, 'similarity': 0.41200...
    6            6               0.404            78  [{'document_id': 3254416, 'similarity': 0.4042...
    7            7               0.450            76  [{'document_id': 458329, 'similarity': 0.44983...
    8            8               0.449            70  [{'document_id': 5345344, 'similarity': 0.4492...
    9            9               0.434            65  [{'document_id': 763876, 'similarity': 0.43404...
    10          10               0.551            63  [{'document_id': 207025, 'similarity': 0.55088...
    11          11               0.495            61  [{'document_id': 33124, 'similarity': 0.494565...
    12          12               0.540            59  [{'document_id': 3041536, 'similarity': 0.5395...
    13          13               0.505            57  [{'document_id': 137641, 'similarity': 0.50544...
    14          14               0.512            56  [{'document_id': 1207801, 'similarity': 0.5119...
    15          15               0.505            54  [{'document_id': 446224, 'similarity': 0.50482...
    16          16               0.505            53  [{'document_id': 1317904, 'similarity': 0.5045...
    17          17               0.450            52  [{'document_id': 1336336, 'similarity': 0.4500...
    18          18               0.479            51  [{'document_id': 4624, 'similarity': 0.4787856...
    19          19               0.474            51  [{'document_id': 2347024, 'similarity': 0.4735...
    20          20               0.541            50  [{'document_id': 552049, 'similarity': 0.54090...
    21          21               0.481            49  [{'document_id': 2396304, 'similarity': 0.4809...
    22          22               0.477            48  [{'document_id': 5621641, 'similarity': 0.4768...
    23          23               0.476            45  [{'document_id': 50625, 'similarity': 0.476410...
    24          24               0.527            45  [{'document_id': 289444, 'similarity': 0.52740...
    25          25               0.511            45  [{'document_id': 220900, 'similarity': 0.51124...
    26          26               0.547            45  [{'document_id': 97969, 'similarity': 0.546669...
    27          27               0.499            44  [{'document_id': 2402500, 'similarity': 0.4990...
    28          28               0.547            43  [{'document_id': 3478225, 'similarity': 0.5468...
    29          29               0.461            42  [{'document_id': 1493284, 'similarity': 0.4607...
    30          30               0.485            41  [{'document_id': 1535121, 'similarity': 0.4845...
    31          31               0.507            41  [{'document_id': 2310400, 'similarity': 0.5073...
    32          32               0.487            40  [{'document_id': 1976836, 'similarity': 0.4870...
    33          33               0.514            40  [{'document_id': 5602689, 'similarity': 0.5139...
    34          34               0.483            40  [{'document_id': 265225, 'similarity': 0.48265...
    35          35               0.558            35  [{'document_id': 755161, 'similarity': 0.55783...
    36          36               0.488            35  [{'document_id': 4235364, 'similarity': 0.4884...
    37          37               0.539            32  [{'document_id': 2027776, 'similarity': 0.5386...
    38          38               0.507            27  [{'document_id': 24025, 'similarity': 0.506671...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/99bd386fd38f4f18




|


.. code-block:: python


    import os.path
    import numpy as np
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])} \
                                   for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {'dataset_definition': dataset_definition,
               'use_idf': 1, 'n_features': 30001,
               'min_df': 4, 'max_df': 0.75 # filter out unfrequent / too frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url)

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items() \
                                                      if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 100
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print('  => SVD decomposition with {} dimensions explaining {:.2f} % variabilty of the data'.format(
                            n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              #'min_similarity': 0.95,
                              'branching_factor': 20 
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  13.373 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
