

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 886ec7a1ae504615

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/886ec7a1ae504615

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/886ec7a1ae504615
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: english
         - sublinear_tf: False
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 8fe4b9d2d6f14cb0
      => SVD decomposition with 300 dimensions explaining 87.17 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 52314028e87b4701

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/52314028e87b4701
        .. computed in 1.3s
       cluster_id                       cluster_label  cluster_similarity  cluster_size  n_documents
    0           0  ricafrente ricafrente_david normal               0.242           200          200
    1           1                  tue normal subject               0.175           278          278
    2           2                 normal sanders sent               0.416            88           88
    3           3                thu normal agreement               0.169           343          343
    4           4              rewrite address server               1.000            56           56
    5           5                    tana jones enron               0.077           911          911
    6           6                    teneo test group               0.299           142          142
    7           7                        ect hou test               0.314           172          172
    8           8              outlook team migration               0.318           124          124
    9           9       meet eb3325 enron_development               0.286           151          151

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 786b786128a94efd

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/786b786128a94efd
        .. computed in 2.1s
                                                 children  cluster_depth  cluster_id                         cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 7, 9, 13, 20, 24, 26, 39, 45, 47, 49, 5...              0           0                       normal test ect               0.074          2465         2465
    1                                                 [2]              1           1                     credit shults gtc               0.796             3            3
    2                                                  []              2           2                     credit shults gtc               0.796             3            3
    3                                           [4, 5, 6]              1           3                  shackleton load calo               0.339            75           75
    4                                                  []              2           4            davidson brazil shackleton               0.503            13           13
    5                                                  []              2           5             heard shackleton davidson               0.554             8            8
    6                                                  []              2           6                  shackleton calo load               0.404            54           54
    7                                                 [8]              1           7                rewrite address server               0.592           100          100
    8                                                  []              2           8                rewrite address server               0.592           100          100
    9                                        [10, 11, 12]              1           9                     normal load teneo               0.401            81           81
    10                                                 []              2          10                     load teneo normal               0.468            35           35
    11                                                 []              2          11                       load hunter use               0.560             7            7
    12                                                 []              2          12                       normal oct sent               0.484            39           39
    13                           [14, 15, 16, 17, 18, 19]              1          13               swap tiger confirmation               0.177           181          181
    14                                                 []              2          14                  memo bertone marcelo               0.438            29           29
    15                                                 []              2          15                        ena swap tiger               0.462            30           30
    16                                                 []              2          16             power determination trade               0.369            43           43
    17                                                 []              2          17                   credit dupre sample               0.459            24           24
    18                                                 []              2          18                      deals growth gdp               0.372            21           21
    19                                                 []              2          19           confirmation tiger guaranty               0.322            34           34
    20                                       [21, 22, 23]              1          20          enron_development flynn deal               0.270           115          115
    21                                                 []              2          21          enron_development flynn smud               0.473            39           39
    22                                                 []              2          22         issues cone enron_development               0.390            52           52
    23                                                 []              2          23         enron_development sellers cat               0.377            24           24
    24                                               [25]              1          24                ruppert customer exxon               0.508            34           34
    25                                                 []              2          25                ruppert customer exxon               0.508            34           34
    26   [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]              1          26               sanders test recipients               0.156           396          396
    27                                                 []              2          27                     haedicke test doc               0.345            50           50
    28                                                 []              2          28                      hendry week aven               0.381            37           37
    29                                                 []              2          29                sampling dasovich bret               0.333            29           29
    ..                                                ...            ...         ...                                   ...                 ...           ...          ...
    59                                                 []              2          59                         thu tenet oct               0.324            74           74
    60                                                 []              2          60                        wed tenet conf               0.447            20           20
    61  [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 7...              1          61                    ect normal outlook               0.095           744          744
    62                                                 []              2          62                november alias tozzini               0.311            61           61
    63                                                 []              2          63                   doc edwards section               0.358            22           22
    64                                                 []              2          64          training midamerican midland               0.329            20           20
    65                                                 []              2          65                   shall lessee lessor               0.349            44           44
    66                                                 []              2          66                       nemec doc teneo               0.308            60           60
    67                                                 []              2          67               place financial subject               0.305            47           47
    68                                                 []              2          68            enron clearinghouse report               0.369            33           33
    69                                                 []              2          69                         ect hou ellis               0.331            42           42
    70                                                 []              2          70                         usvi bvi boat               0.369            29           29
    71                                                 []              2          71                       kean mtg normal               0.415            13           13
    72                                                 []              2          72          project information contract               0.400            17           17
    73                                                 []              2          73                     tue tenet message               0.335            55           55
    74                                                 []              2          74                 kincannon budget room               0.323            54           54
    75                                                 []              2          75          energy reference transaction               0.334            33           33
    76                                                 []              2          76              operator party agreement               0.344            41           41
    77                                                 []              2          77                     eb3325 murray ect               0.313            53           53
    78                                                 []              2          78                       rate think cash               0.340            20           20
    79                                                 []              2          79                     corporate rob lay               0.394            11           11
    80                                                 []              2          80                    draft date weather               0.322            27           27
    81                                                 []              2          81                migration outlook team               0.450            62           62
    82                                               [83]              1          82                         tue oct tenet               0.485            44           44
    83                                                 []              2          83                         tue oct tenet               0.485            44           44
    84                                   [85, 86, 87, 88]              1          84  shackleton_sara teneo administrative               0.297            73           73
    85                                                 []              2          85                deseret etringer teneo               0.341            22           22
    86                                                 []              2          86            shackleton_sara teneo peak               0.451             8            8
    87                                                 []              2          87           shackleton_sara teneo group               0.419            27           27
    88                                                 []              2          88   shackleton_sara americancentury nov               0.448            16           16

    [89 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/786b786128a94efd
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            8               0.592           100  [{'document_id': 5041, 'similarity': 0.9462377...
    1           53               0.345            89  [{'document_id': 3549456, 'similarity': 0.6213...
    2           59               0.324            74  [{'document_id': 2601769, 'similarity': 0.5658...
    3           33               0.343            70  [{'document_id': 154449, 'similarity': 0.71673...
    4           42               0.342            68  [{'document_id': 226576, 'similarity': 0.55382...
    5           81               0.450            62  [{'document_id': 5527201, 'similarity': 0.6575...
    6           62               0.311            61  [{'document_id': 122500, 'similarity': 0.60273...
    7           66               0.308            60  [{'document_id': 749956, 'similarity': 0.61152...
    8           40               0.333            55  [{'document_id': 166464, 'similarity': 0.55146...
    9           73               0.335            55  [{'document_id': 3171961, 'similarity': 0.6470...
    10           6               0.404            54  [{'document_id': 12321, 'similarity': 0.604620...
    11          74               0.323            54  [{'document_id': 2509056, 'similarity': 0.5444...
    12          77               0.313            53  [{'document_id': 2768896, 'similarity': 0.5367...
    13          22               0.390            52  [{'document_id': 131769, 'similarity': 0.65143...
    14          27               0.345            50  [{'document_id': 972196, 'similarity': 0.55126...
    15          57               0.392            50  [{'document_id': 2676496, 'similarity': 0.6316...
    16          67               0.305            47  [{'document_id': 1597696, 'similarity': 0.5200...
    17          37               0.440            44  [{'document_id': 1317904, 'similarity': 0.6974...
    18          65               0.349            44  [{'document_id': 672400, 'similarity': 0.72715...
    19          83               0.485            44  [{'document_id': 1893376, 'similarity': 0.7635...
    20          16               0.369            43  [{'document_id': 97969, 'similarity': 0.563124...
    21          69               0.331            42  [{'document_id': 3556996, 'similarity': 0.6571...
    22          76               0.344            41  [{'document_id': 624100, 'similarity': 0.56139...
    23          31               0.427            40  [{'document_id': 362404, 'similarity': 0.73384...
    24          12               0.484            39  [{'document_id': 358801, 'similarity': 0.69368...
    25          21               0.473            39  [{'document_id': 41616, 'similarity': 0.753917...
    26          28               0.381            37  [{'document_id': 3254416, 'similarity': 0.6153...
    27          54               0.363            36  [{'document_id': 1737124, 'similarity': 0.6202...
    28          10               0.468            35  [{'document_id': 846400, 'similarity': 0.60509...
    29          19               0.322            34  [{'document_id': 35344, 'similarity': 0.526019...
    30          25               0.508            34  [{'document_id': 756900, 'similarity': 0.67116...
    31          38               0.474            33  [{'document_id': 3984016, 'similarity': 0.6282...
    32          41               0.384            33  [{'document_id': 202500, 'similarity': 0.61384...
    33          55               0.431            33  [{'document_id': 2316484, 'similarity': 0.7650...
    34          68               0.369            33  [{'document_id': 1123600, 'similarity': 0.6946...
    35          75               0.334            33  [{'document_id': 3132900, 'similarity': 0.7201...
    36          15               0.462            30  [{'document_id': 79524, 'similarity': 0.726720...
    37          14               0.438            29  [{'document_id': 4225, 'similarity': 0.6808811...
    38          29               0.333            29  [{'document_id': 908209, 'similarity': 0.60226...
    39          70               0.369            29  [{'document_id': 3667225, 'similarity': 0.6947...
    40          58               0.377            27  [{'document_id': 1168561, 'similarity': 0.6163...
    41          80               0.322            27  [{'document_id': 788544, 'similarity': 0.46557...
    42          87               0.419            27  [{'document_id': 4601025, 'similarity': 0.6244...
    43          35               0.445            26  [{'document_id': 186624, 'similarity': 0.71852...
    44          44               0.331            25  [{'document_id': 1957201, 'similarity': 0.5310...
    45          17               0.459            24  [{'document_id': 7569, 'similarity': 0.6176682...
    46          23               0.377            24  [{'document_id': 5139289, 'similarity': 0.6326...
    47          56               0.343            24  [{'document_id': 3996001, 'similarity': 0.6107...
    48          32               0.342            23  [{'document_id': 499849, 'similarity': 0.63995...
    49          43               0.483            22  [{'document_id': 1100401, 'similarity': 0.8204...
    50          63               0.358            22  [{'document_id': 466489, 'similarity': 0.46826...
    51          85               0.341            22  [{'document_id': 4941729, 'similarity': 0.5402...
    52          18               0.372            21  [{'document_id': 383161, 'similarity': 0.46289...
    53          52               0.412            21  [{'document_id': 608400, 'similarity': 0.81756...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/886ec7a1ae504615




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  11.062 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
