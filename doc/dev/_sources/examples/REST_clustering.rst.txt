

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = fbf39e347907443c

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/fbf39e347907443c

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/fbf39e347907443c
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 1cb18a3061fd4764
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 24aed71325724729

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/24aed71325724729
        .. computed in 1.2s
       cluster_id                   cluster_label  cluster_similarity  cluster_size  n_documents
    0           0    meet enron_development shall               0.187           219          219
    1           1  test recipients administrative               0.107           635          635
    2           2          rewrite address server               1.000            56           56
    3           3              sanders thu normal               0.156           308          308
    4           4          migration outlook team               0.217           198          198
    5           5           shall party agreement               0.630            43           43
    6           6                     ect hou mon               0.187           253          253
    7           7    normal teneo shackleton_sara               0.297           149          149
    8           8            meeting tenet normal               0.225           217          217
    9           9          transaction isda price               0.139           387          387

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = c13a8feac4ec4ab1

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/c13a8feac4ec4ab1
        .. computed in 2.1s
                                                 children  cluster_depth  cluster_id                          cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 9, 11, 15, 23, 36, 40, 43, 47, 52, 54, 71,...              0           0                        normal test ect               0.071          2465         2465
    1                               [2, 3, 4, 5, 6, 7, 8]              1           1  enron_development test administrative               0.201           221          221
    2                                                  []              2           2          issues cone enron_development               0.403            44           44
    3                                                  []              2           3                 cash collateral credit               0.469            24           24
    4                                                  []              2           4           test enron_development bruno               0.355            29           29
    5                                                  []              2           5        enron_development committee esa               0.452            41           41
    6                                                  []              2           6                     weather jones tana               0.456             7            7
    7                                                  []              2           7                     test teneo nicolay               0.404            41           41
    8                                                  []              2           8         administrative recipients test               0.449            35           35
    9                                                [10]              1           9                 rewrite address server               0.772            73           73
    10                                                 []              2          10                 rewrite address server               0.772            73           73
    11                                       [12, 13, 14]              1          11                      teneo load normal               0.402            95           95
    12                                                 []              2          12                       teneo normal fri               0.501            40           40
    13                                                 []              2          13                   tiger blackline cash               0.791             4            4
    14                                                 []              2          14                        load teneo kean               0.434            51           51
    15                       [16, 17, 18, 19, 20, 21, 22]              1          15             shall shackleton agreement               0.183           268          268
    16                                                 []              2          16                       advice isda cini               0.418            36           36
    17                                                 []              2          17         confirmation terms transaction               0.421            42           42
    18                                                 []              2          18                          calo ena swap               0.343            54           54
    19                                                 []              2          19                     lunch today lafuze               0.475            11           11
    20                                                 []              2          20                    shall lessee lessor               0.617            31           31
    21                                                 []              2          21                  shall agreement jones               0.417            59           59
    22                                                 []              2          22                    shackleton load ect               0.424            35           35
    23   [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]              1          23             party dasovich transaction               0.134           399          399
    24                                                 []              2          24                party transaction price               0.369            79           79
    25                                                 []              2          25                  list november tozzini               0.380            31           31
    26                                                 []              2          26                 sampling berkeley haas               0.367            39           39
    27                                                 []              2          27                     dasovich hyvl corp               0.302            46           46
    28                                                 []              2          28                    think market course               0.389            16           16
    29                                                 []              2          29                 pcb argentina pipeline               0.345            23           23
    ..                                                ...            ...         ...                                    ...                 ...           ...          ...
    66                                                 []              2          66                      haedicke calo fri               0.650             5            5
    67                                                 []              2          67                            wed mtg nov               0.501            21           21
    68                                                 []              2          68                         mtg tenet room               0.503            28           28
    69                                                 []              2          69                          wed tenet oct               0.524            22           22
    70                                                 []              2          70                       tue tenet normal               0.387            38           38
    71                                               [72]              1          71                        kean normal oct               0.634            10           10
    72                                                 []              2          72                        kean normal oct               0.634            10           10
    73  [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 8...              1          73                    eb3325 teneo normal               0.100           603          603
    74                                                 []              2          74               deseret etringer opinion               0.337            47           47
    75                                                 []              2          75         performance management process               0.376            22           22
    76                                                 []              2          76                    online trading memo               0.419            26           26
    77                                                 []              2          77                 subject nemec townsend               0.352            34           34
    78                                                 []              2          78                ellis agreement meeting               0.341            20           20
    79                                                 []              2          79                       nemec doc gallup               0.376            43           43
    80                                                 []              2          80                     dead horse houston               0.416            23           23
    81                                                 []              2          81                     library enron corp               0.288            33           33
    82                                                 []              2          82              haedicke canadian masters               0.353            44           44
    83                                                 []              2          83                 eb3325 meet ricafrente               0.360            69           69
    84                                                 []              2          84                      heard gdr hagerty               0.329            52           52
    85                                                 []              2          85                       trade board time               0.408            24           24
    86                                                 []              2          86                    tiger letter master               0.340            43           43
    87                                                 []              2          87                   tozzini line dernehl               0.332            35           35
    88                                                 []              2          88                products harris trading               0.419            16           16
    89                                                 []              2          89       shackleton_sara teneo shackleton               0.394            21           21
    90                                                 []              2          90                         hendry let new               0.432             6            6
    91                                                 []              2          91                mtg enrononline donovan               0.326            31           31
    92                                                 []              2          92          shackleton_sara guaranty meet               0.388            14           14
    93                                           [94, 95]              1          93                 migration outlook team               0.450            52           52
    94                                                 []              2          94                 outlook migration team               0.476            36           36
    95                                                 []              2          95                     mtg migration team               0.553            16           16

    [96 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/c13a8feac4ec4ab1
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           24               0.369            79  [{'document_id': 168921, 'similarity': 0.79851...
    1           10               0.772            73  [{'document_id': 5041, 'similarity': 0.9938306...
    2           83               0.360            69  [{'document_id': 2869636, 'similarity': 0.5539...
    3           48               0.435            61  [{'document_id': 2030625, 'similarity': 0.8471...
    4           21               0.417            59  [{'document_id': 609961, 'similarity': 0.78725...
    5           55               0.317            57  [{'document_id': 2611456, 'similarity': 0.5056...
    6           18               0.343            54  [{'document_id': 1306449, 'similarity': 0.5562...
    7           84               0.329            52  [{'document_id': 91809, 'similarity': 0.629529...
    8           14               0.434            51  [{'document_id': 246016, 'similarity': 0.59359...
    9           74               0.337            47  [{'document_id': 17689, 'similarity': 0.560541...
    10          27               0.302            46  [{'document_id': 583696, 'similarity': 0.58360...
    11          64               0.450            45  [{'document_id': 3802500, 'similarity': 0.5990...
    12           2               0.403            44  [{'document_id': 131769, 'similarity': 0.74516...
    13          82               0.353            44  [{'document_id': 3470769, 'similarity': 0.4919...
    14          79               0.376            43  [{'document_id': 710649, 'similarity': 0.61609...
    15          86               0.340            43  [{'document_id': 1098304, 'similarity': 0.6935...
    16          17               0.421            42  [{'document_id': 53361, 'similarity': 0.659546...
    17           5               0.452            41  [{'document_id': 33124, 'similarity': 0.659718...
    18           7               0.404            41  [{'document_id': 5764801, 'similarity': 0.7393...
    19          12               0.501            40  [{'document_id': 314721, 'similarity': 0.68783...
    20          26               0.367            39  [{'document_id': 1123600, 'similarity': 0.5723...
    21          70               0.387            38  [{'document_id': 1893376, 'similarity': 0.6772...
    22          16               0.418            36  [{'document_id': 25921, 'similarity': 0.581764...
    23          31               0.399            36  [{'document_id': 552049, 'similarity': 0.64885...
    24          50               0.323            36  [{'document_id': 1404225, 'similarity': 0.5730...
    25          94               0.476            36  [{'document_id': 5875776, 'similarity': 0.6541...
    26           8               0.449            35  [{'document_id': 1132096, 'similarity': 0.8752...
    27          22               0.424            35  [{'document_id': 50625, 'similarity': 0.590144...
    28          32               0.301            35  [{'document_id': 614656, 'similarity': 0.47463...
    29          61               0.413            35  [{'document_id': 6041764, 'similarity': 0.6894...
    ..         ...                 ...           ...                                                ...
    31          49               0.307            34  [{'document_id': 2359296, 'similarity': 0.6385...
    32          60               0.378            34  [{'document_id': 2214144, 'similarity': 0.6513...
    33          77               0.352            34  [{'document_id': 697225, 'similarity': 0.59263...
    34          81               0.288            33  [{'document_id': 5049009, 'similarity': 0.5815...
    35          63               0.404            32  [{'document_id': 1737124, 'similarity': 0.7457...
    36          20               0.617            31  [{'document_id': 1567504, 'similarity': 0.9185...
    37          25               0.380            31  [{'document_id': 4999696, 'similarity': 0.6695...
    38          59               0.424            31  [{'document_id': 1752976, 'similarity': 0.7132...
    39          62               0.418            31  [{'document_id': 2468041, 'similarity': 0.6597...
    40          91               0.326            31  [{'document_id': 5331481, 'similarity': 0.5994...
    41          37               0.384            30  [{'document_id': 36481, 'similarity': 0.631013...
    42           4               0.355            29  [{'document_id': 362404, 'similarity': 0.73065...
    43          30               0.393            29  [{'document_id': 756900, 'similarity': 0.66666...
    44          57               0.415            28  [{'document_id': 1901641, 'similarity': 0.7026...
    45          68               0.503            28  [{'document_id': 16, 'similarity': 0.712157625...
    46          33               0.304            26  [{'document_id': 393129, 'similarity': 0.48897...
    47          76               0.419            26  [{'document_id': 341056, 'similarity': 0.55856...
    48          42               0.406            25  [{'document_id': 1232100, 'similarity': 0.7091...
    49           3               0.469            24  [{'document_id': 7569, 'similarity': 0.5735331...
    50          39               0.429            24  [{'document_id': 4915089, 'similarity': 0.6065...
    51          85               0.408            24  [{'document_id': 44944, 'similarity': 0.714350...
    52          29               0.345            23  [{'document_id': 921600, 'similarity': 0.60830...
    53          34               0.356            23  [{'document_id': 3496900, 'similarity': 0.5296...
    54          80               0.416            23  [{'document_id': 1060900, 'similarity': 0.6764...
    55          69               0.524            22  [{'document_id': 3455881, 'similarity': 0.8196...
    56          75               0.376            22  [{'document_id': 1846881, 'similarity': 0.6803...
    57          51               0.360            21  [{'document_id': 2480625, 'similarity': 0.4952...
    58          67               0.501            21  [{'document_id': 2334784, 'similarity': 0.7956...
    59          89               0.394            21  [{'document_id': 4879681, 'similarity': 0.6034...
    60          56               0.445            20  [{'document_id': 1313316, 'similarity': 0.6345...

    [61 rows x 4 columns]

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/fbf39e347907443c




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.343 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
