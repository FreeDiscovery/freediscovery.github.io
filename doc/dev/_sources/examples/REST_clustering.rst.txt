

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 68e23df99e144a54

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/68e23df99e144a54

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/68e23df99e144a54
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: english
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 4adb6a2853204cd9
      => SVD decomposition with 300 dimensions explaining 87.17 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 667848b733e44b8d

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/667848b733e44b8d
        .. computed in 1.1s
       cluster_id                    cluster_label  cluster_similarity  cluster_size  n_documents
    0           0          shall party transaction               0.418            51           51
    1           1   test administrative recipients               0.338           119          119
    2           2                      ect hou wed               0.247           233          233
    3           3           rewrite address server               1.000            56           56
    4           4  ricafrente ricafrente_david thu               0.318           148          148
    5           5               mon normal meeting               0.239           224          224
    6           6        tue conference shackleton               0.243           199          199
    7           7                   teneo thu test               0.169           352          352
    8           8                     tue ect know               0.232           171          171
    9           9               fri normal subject               0.076           912          912

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = e23d559b632040f1

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/e23d559b632040f1
        .. computed in 2.1s
                                                 children  cluster_depth  cluster_id                            cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 7, 10, 13, 18, 20, 22, 24, 30, 32, 37, 48,...              0           0                          normal test ect               0.074          2465         2465
    1                                     [2, 3, 4, 5, 6]              1           1                             ect hou test               0.266           195          195
    2                                                  []              2           2                            ect hou heard               0.435            85           85
    3                                                  []              2           3                     tiger guaranty heard               0.630             7            7
    4                                                  []              2           4                   deseret etringer tiger               0.431            23           23
    5                                                  []              2           5           test recipients administrative               0.427            73           73
    6                                                  []              2           6                  library item shackleton               0.601             7            7
    7                                              [8, 9]              1           7                        lunch lafuze cini               0.382            34           34
    8                                                  []              2           8                            isda csa want               0.589            11           11
    9                                                  []              2           9                       lunch lafuze today               0.460            23           23
    10                                           [11, 12]              1          10                        advice tana jones               0.364            42           42
    11                                                 []              2          11                     advice update mexico               0.599            15           15
    12                                                 []              2          12                         tana davis jones               0.413            27           27
    13                                   [14, 15, 16, 17]              1          13                           enron ena swap               0.198           125          125
    14                                                 []              2          14                             swap ena rmt               0.479            27           27
    15                                                 []              2          15         online deseret enron_development               0.300            39           39
    16                                                 []              2          16                          san total diego               0.436            24           24
    17                                                 []              2          17                    alias payment natural               0.341            35           35
    18                                               [19]              1          18                  dasovich services alias               0.491            23           23
    19                                                 []              2          19                  dasovich services alias               0.491            23           23
    20                                               [21]              1          20                   rewrite address server               0.569           102          102
    21                                                 []              2          21                   rewrite address server               0.569           102          102
    22                                               [23]              1          22               transaction party floating               0.805            12           12
    23                                                 []              2          23               transaction party floating               0.805            12           12
    24                               [25, 26, 27, 28, 29]              1          24                        test normal teneo               0.298           143          143
    25                                                 []              2          25                      harris test account               0.362            30           30
    26                                                 []              2          26                       tue password ellis               0.468            10           10
    27                                                 []              2          27                        normal test teneo               0.530            23           23
    28                                                 []              2          28                          load kean teneo               0.433            40           40
    29                                                 []              2          29                       sanders test teneo               0.449            40           40
    ..                                                ...            ...         ...                                      ...                 ...           ...          ...
    66                                                 []              2          66            midamerican clearinghouse law               0.353            31           31
    67                                                 []              2          67                           gtc eta letter               0.470            22           22
    68  [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 8...              1          68                 normal migration outlook               0.100           700          700
    69                                                 []              2          69                         jones tana enron               0.323            63           63
    70                                                 []              2          70                        berkeley haas edu               0.318            37           37
    71                                                 []              2          71                       hendry week canada               0.329            32           32
    72                                                 []              2          72                      nemec lessee lessor               0.356            47           47
    73                                                 []              2          73                        gtc online credit               0.470            18           18
    74                                                 []              2          74                      ruppert exxon nemec               0.401            36           36
    75                                                 []              2          75                 enron office derivatives               0.327            38           38
    76                                                 []              2          76        taylor_mark teneo americancentury               0.348            39           39
    77                                                 []              2          77                         usvi stay motion               0.318            39           39
    78                                                 []              2          78                         dead horse shall               0.395            31           31
    79                                                 []              2          79               neuner houston enrononline               0.315            43           43
    80                                                 []              2          80                       sanders mon normal               0.298            56           56
    81                                                 []              2          81                   kincannon lunch normal               0.416            31           31
    82                                                 []              2          82                      lon list restricted               0.446            16           16
    83                                                 []              2          83  enron_development committee serralheiro               0.390            17           17
    84                                                 []              2          84                          teneo hyvl test               0.354            37           37
    85                                                 []              2          85                         doc gallup teneo               0.357            27           27
    86                                                 []              2          86                       mtg migration team               0.349            55           55
    87                                                 []              2          87                   outlook migration team               0.463            38           38
    88                                               [89]              1          88               sending lojo modifications               0.589             6            6
    89                                                 []              2          89               sending lojo modifications               0.589             6            6
    90                               [91, 92, 93, 94, 95]              1          90                        tenet normal test               0.251           189          189
    91                                                 []              2          91                        tenet test normal               0.349            48           48
    92                                                 []              2          92                         tenet wed normal               0.394            34           34
    93                                                 []              2          93                         tenet budget nov               0.351            38           38
    94                                                 []              2          94                            tue tenet oct               0.488            28           28
    95                                                 []              2          95                            tenet thu oct               0.387            41           41

    [96 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/e23d559b632040f1
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           21               0.569           102  [{'document_id': 5041, 'similarity': 0.9649671...
    1            2               0.435            85  [{'document_id': 11025, 'similarity': 0.844960...
    2            5               0.427            73  [{'document_id': 855625, 'similarity': 0.83266...
    3           51               0.375            65  [{'document_id': 61504, 'similarity': 0.562798...
    4           69               0.323            63  [{'document_id': 215296, 'similarity': 0.55454...
    5           49               0.376            56  [{'document_id': 131769, 'similarity': 0.63915...
    6           80               0.298            56  [{'document_id': 3896676, 'similarity': 0.5136...
    7           64               0.386            55  [{'document_id': 5968249, 'similarity': 0.6548...
    8           86               0.349            55  [{'document_id': 5480281, 'similarity': 0.7480...
    9           91               0.349            48  [{'document_id': 3294225, 'similarity': 0.5001...
    10          36               0.460            47  [{'document_id': 2528100, 'similarity': 0.6429...
    11          72               0.356            47  [{'document_id': 1567504, 'similarity': 0.5844...
    12          42               0.314            46  [{'document_id': 627264, 'similarity': 0.72293...
    13          46               0.435            45  [{'document_id': 2778889, 'similarity': 0.7281...
    14          79               0.315            43  [{'document_id': 14884, 'similarity': 0.578310...
    15          95               0.387            41  [{'document_id': 1752976, 'similarity': 0.7307...
    16          28               0.433            40  [{'document_id': 350464, 'similarity': 0.52847...
    17          29               0.449            40  [{'document_id': 1317904, 'similarity': 0.7070...
    18          15               0.300            39  [{'document_id': 72900, 'similarity': 0.527729...
    19          45               0.413            39  [{'document_id': 2676496, 'similarity': 0.6289...
    20          76               0.348            39  [{'document_id': 3500641, 'similarity': 0.6495...
    21          77               0.318            39  [{'document_id': 3667225, 'similarity': 0.6046...
    22          38               0.357            38  [{'document_id': 7569, 'similarity': 0.4914979...
    23          50               0.403            38  [{'document_id': 10404, 'similarity': 0.596298...
    24          54               0.374            38  [{'document_id': 1792921, 'similarity': 0.7185...
    25          75               0.327            38  [{'document_id': 1121481, 'similarity': 0.6891...
    26          87               0.463            38  [{'document_id': 5560164, 'similarity': 0.7116...
    27          93               0.351            38  [{'document_id': 2402500, 'similarity': 0.6554...
    28          70               0.318            37  [{'document_id': 124609, 'similarity': 0.56741...
    29          84               0.354            37  [{'document_id': 6051600, 'similarity': 0.5584...
    30          74               0.401            36  [{'document_id': 1664100, 'similarity': 0.7530...
    31          17               0.341            35  [{'document_id': 1495729, 'similarity': 0.5999...
    32          92               0.394            34  [{'document_id': 2310400, 'similarity': 0.6862...
    33          40               0.425            33  [{'document_id': 5076009, 'similarity': 0.6261...
    34          43               0.358            32  [{'document_id': 910116, 'similarity': 0.51103...
    35          53               0.339            32  [{'document_id': 1404225, 'similarity': 0.5038...
    36          71               0.329            32  [{'document_id': 3775249, 'similarity': 0.5450...
    37          66               0.353            31  [{'document_id': 3621409, 'similarity': 0.4824...
    38          78               0.395            31  [{'document_id': 3115225, 'similarity': 0.6549...
    39          81               0.416            31  [{'document_id': 2862864, 'similarity': 0.7590...
    40          25               0.362            30  [{'document_id': 28561, 'similarity': 0.607240...
    41          41               0.353            28  [{'document_id': 116964, 'similarity': 0.69677...
    42          47               0.324            28  [{'document_id': 1046529, 'similarity': 0.4577...
    43          94               0.488            28  [{'document_id': 3171961, 'similarity': 0.7686...
    44          12               0.413            27  [{'document_id': 1162084, 'similarity': 0.6498...
    45          14               0.479            27  [{'document_id': 79524, 'similarity': 0.796608...
    46          59               0.361            27  [{'document_id': 4000000, 'similarity': 0.5124...
    47          85               0.357            27  [{'document_id': 1535121, 'similarity': 0.5991...
    48          44               0.352            26  [{'document_id': 879844, 'similarity': 0.48749...
    49          52               0.378            25  [{'document_id': 104329, 'similarity': 0.62418...
    50          58               0.427            25  [{'document_id': 617796, 'similarity': 0.75935...
    51          16               0.436            24  [{'document_id': 361201, 'similarity': 0.78347...
    52          56               0.424            24  [{'document_id': 697225, 'similarity': 0.72497...
    53           4               0.431            23  [{'document_id': 17689, 'similarity': 0.526458...
    54           9               0.460            23  [{'document_id': 20164, 'similarity': 0.713252...
    55          19               0.491            23  [{'document_id': 583696, 'similarity': 0.80000...
    56          27               0.530            23  [{'document_id': 358801, 'similarity': 0.68587...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/68e23df99e144a54




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.046 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
