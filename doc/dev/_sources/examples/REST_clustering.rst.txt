

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['filenames', 'id']
       => dsid = 80dcdfba0c614ea5

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/80dcdfba0c614ea5

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/80dcdfba0c614ea5
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: ../freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 0.75
         - min_df: 4.0
         - n_features: 30001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: True

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = c56caa025e4448a3
      => SVD decomposition with 100 dimensions explaining 53.26 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 2552788326d44831

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/2552788326d44831
        .. computed in 1.0s
       cluster_id                 cluster_label  cluster_similarity  cluster_size  n_documents
    0           0                 mon tenet nov               0.377           266          266
    1           1  energy services transmission               0.406           272          272
    2           2             haedicke tue test               0.453           114          114
    3           3        teneo group recipients               0.407           184          184
    4           4           meeting enron nemec               0.331           458          458
    5           5          dasovich party shall               0.342           466          466
    6           6        rewrite server address               1.000            56           56
    7           7        migration outlook team               0.666            64           64
    8           8                  load thu oct               0.336           416          416
    9           9     ect hou enron_development               0.426           169          169

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 7c517405e1844bca

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/7c517405e1844bca
        .. computed in 2.4s
                                                 children  cluster_depth  cluster_id                      cluster_label  cluster_similarity  cluster_size  n_documents
    0                           [1, 3, 7, 13, 20, 26, 43]              0           0                       test ect oct               0.294          2465         2465
    1                                                 [2]              1           1            haedicke thu labanowski               0.607            60           60
    2                                                  []              2           2            haedicke thu labanowski               0.607            60           60
    3                                           [4, 5, 6]              1           3                      load fri test               0.487            66           66
    4                                                  []              2           4               conference legal fri               0.785             2            2
    5                                                  []              2           5                  load oct yosemite               0.518            42           42
    6                                                  []              2           6                       fri load nov               0.544            22           22
    7                                  [8, 9, 10, 11, 12]              1           7               rewrite server shall               0.378           374          374
    8                                                  []              2           8       hendry conference shackleton               0.492            25           25
    9                                                  []              2           9             rewrite server address               0.745            83           83
    10                                                 []              2          10             energy services market               0.522            80           80
    11                                                 []              2          11              shall party agreement               0.456           146          146
    12                                                 []              2          12                      ena rmt enron               0.477            40           40
    13                           [14, 15, 16, 17, 18, 19]              1          13              tana jones recipients               0.362           250          250
    14                                                 []              2          14              flynn shackleton smud               0.470            56           56
    15                                                 []              2          15      enron_development gdr bennett               0.670            25           25
    16                                                 []              2          16    recipients administrative group               0.502            54           54
    17                                                 []              2          17    teneo administrative recipients               0.407            40           40
    18                                                 []              2          18                   tana jones enron               0.527            44           44
    19                                                 []              2          19                       lon ect boyd               0.567            31           31
    20                               [21, 22, 23, 24, 25]              1          20              sanders kean berkeley               0.379           248          248
    21                                                 []              2          21                    kean condor oct               0.522            48           48
    22                                                 []              2          22                  berkeley haas edu               0.588            47           47
    23                                                 []              2          23                   dead horse enron               0.507            25           25
    24                                                 []              2          24                  sanders nov lunch               0.571            79           79
    25                                                 []              2          25                      lay isda poon               0.474            49           49
    26  [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 3...              1          26                  ect migration hou               0.307           997          997
    27                                                 []              2          27           ellis library shackleton               0.439            47           47
    28                                                 []              2          28             cini shackleton credit               0.460            50           50
    29                                                 []              2          29               marcelo tozzini afac               0.560            53           53
    30                                                 []              2          30  enron_development shackleton cone               0.457            92           92
    31                                                 []              2          31            catalytica dupre neuner               0.490            54           54
    32                                                 []              2          32            dasovich bruno gaillard               0.491            85           85
    33                                                 []              2          33                  nemec doc ruppert               0.454           119          119
    34                                                 []              2          34          tiger guaranty shackleton               0.461            55           55
    35                                                 []              2          35                        ect hou lon               0.558            79           79
    36                                                 []              2          36                enron sampling bret               0.511            34           34
    37                                                 []              2          37                  master gtc eb3325               0.442            57           57
    38                                                 []              2          38                   eb3325 meet calo               0.465            51           51
    39                                                 []              2          39                      thu tenet otc               0.476            41           41
    40                                                 []              2          40            deseret etringer harris               0.488            62           62
    41                                                 []              2          41                 trading tax master               0.453            53           53
    42                                                 []              2          42             migration outlook team               0.631            65           65
    43   [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]              1          43  tenet ricafrente ricafrente_david               0.338           470          470
    44                                                 []              2          44               message milbank mail               0.473            38           38
    45                                                 []              2          45               advice update mexico               0.495            43           43
    46                                                 []              2          46                  meeting tenet mon               0.535            43           43
    47                                                 []              2          47    ricafrente ricafrente_david fri               0.493            51           51
    48                                                 []              2          48                      mtg tenet oct               0.486            20           20
    49                                                 []              2          49                     tue tenet usvi               0.464            54           54
    50                                                 []              2          50               mon tenet conference               0.489            27           27
    51                                                 []              2          51         kincannon downstairs lunch               0.582            26           26
    52                                                 []              2          52                     mtg dead horse               0.410            55           55
    53                                                 []              2          53                  meeting nov tenet               0.515            35           35
    54                                                 []              2          54                      wed tenet oct               0.518            47           47
    55                                                 []              2          55                      tenet nov mon               0.556            31           31

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/7c517405e1844bca
        .. computed in 0.6s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            0               0.456           146  [{'document_id': 308025, 'similarity': 0.45649...
    1            1               0.454           119  [{'document_id': 749956, 'similarity': 0.45429...
    2            2               0.457            92  [{'document_id': 900, 'similarity': 0.45668716...
    3            3               0.491            85  [{'document_id': 511225, 'similarity': 0.49099...
    4            4               0.745            83  [{'document_id': 5041, 'similarity': 0.7454467...
    5            5               0.522            80  [{'document_id': 207025, 'similarity': 0.52198...
    6            6               0.571            79  [{'document_id': 3814209, 'similarity': 0.5712...
    7            7               0.558            79  [{'document_id': 2030625, 'similarity': 0.5582...
    8            8               0.631            65  [{'document_id': 5326864, 'similarity': 0.6312...
    9            9               0.488            62  [{'document_id': 30276, 'similarity': 0.488359...
    10          10               0.607            60  [{'document_id': 2518569, 'similarity': 0.6066...
    11          11               0.442            57  [{'document_id': 3243601, 'similarity': 0.4422...
    12          12               0.470            56  [{'document_id': 26896, 'similarity': 0.469898...
    13          13               0.461            55  [{'document_id': 4687225, 'similarity': 0.4608...
    14          14               0.410            55  [{'document_id': 887364, 'similarity': 0.40997...
    15          15               0.502            54  [{'document_id': 255025, 'similarity': 0.50188...
    16          16               0.490            54  [{'document_id': 5071504, 'similarity': 0.4896...
    17          17               0.464            54  [{'document_id': 3651921, 'similarity': 0.4639...
    18          18               0.560            53  [{'document_id': 99856, 'similarity': 0.559665...
    19          19               0.453            53  [{'document_id': 4624, 'similarity': 0.4528910...
    20          20               0.465            51  [{'document_id': 2722500, 'similarity': 0.4652...
    21          21               0.493            51  [{'document_id': 2471184, 'similarity': 0.4931...
    22          22               0.460            50  [{'document_id': 12544, 'similarity': 0.459720...
    23          23               0.474            49  [{'document_id': 1454436, 'similarity': 0.4744...
    24          24               0.522            48  [{'document_id': 5313025, 'similarity': 0.5223...
    25          25               0.588            47  [{'document_id': 403225, 'similarity': 0.58791...
    26          26               0.439            47  [{'document_id': 4579600, 'similarity': 0.4385...
    27          27               0.518            47  [{'document_id': 2196324, 'similarity': 0.5183...
    28          28               0.527            44  [{'document_id': 2093809, 'similarity': 0.5267...
    29          29               0.495            43  [{'document_id': 240100, 'similarity': 0.49500...
    30          30               0.535            43  [{'document_id': 2253001, 'similarity': 0.5348...
    31          31               0.518            42  [{'document_id': 199809, 'similarity': 0.51772...
    32          32               0.476            41  [{'document_id': 1123600, 'similarity': 0.4757...
    33          33               0.477            40  [{'document_id': 79524, 'similarity': 0.477032...
    34          34               0.407            40  [{'document_id': 3583449, 'similarity': 0.4072...
    35          35               0.473            38  [{'document_id': 1404225, 'similarity': 0.4726...
    36          36               0.515            35  [{'document_id': 3549456, 'similarity': 0.5154...
    37          37               0.511            34  [{'document_id': 2076481, 'similarity': 0.5106...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/80dcdfba0c614ea5




|


.. code-block:: python


    import os.path
    import numpy as np
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])} \
                                   for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {'dataset_definition': dataset_definition,
               'use_idf': 1, 'n_features': 30001,
               'min_df': 4, 'max_df': 0.75 # filter out unfrequent / too frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url)

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items() \
                                                      if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 100
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print('  => SVD decomposition with {} dimensions explaining {:.2f} % variabilty of the data'.format(
                            n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              #'min_similarity': 0.95,
                              'branching_factor': 20 
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  7.649 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
