

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = aaf73ede96b04044

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/aaf73ede96b04044

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/aaf73ede96b04044
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = bbd36d212d5e475a
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 87266e9ce9f649af

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/87266e9ce9f649af
        .. computed in 1.2s
       cluster_id               cluster_label  cluster_similarity  cluster_size  n_documents
    0           0              oct normal thu               0.104           620          620
    1           1  enron group administrative               0.119           499          499
    2           2              lunch test wed               0.198           209          209
    3           3               mon nov tenet               0.224           244          244
    4           4           wed normal thanks               0.136           414          414
    5           5           tue normal gallup               0.240           187          187
    6           6      rewrite address server               1.000            56           56
    7           7          shall party lessee               0.537            66           66
    8           8              ect hou master               0.451            72           72
    9           9               fri calo team               0.301            98           98

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 0673873c75c54f55

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/0673873c75c54f55
        .. computed in 2.0s
                                                 children  cluster_depth  cluster_id                       cluster_label  cluster_similarity  cluster_size  n_documents
    0         [1, 3, 5, 7, 9, 12, 14, 24, 26, 46, 56, 70]              0           0                     normal test ect               0.071          2465         2465
    1                                                 [2]              1           1     enron_development committee esa               0.509            31           31
    2                                                  []              2           2     enron_development committee esa               0.509            31           31
    3                                                 [4]              1           3             schedule bailey bertone               0.780             8            8
    4                                                  []              2           4             schedule bailey bertone               0.780             8            8
    5                                                 [6]              1           5             party transaction shall               0.615            36           36
    6                                                  []              2           6             party transaction shall               0.615            36           36
    7                                                 [8]              1           7              rewrite address server               0.773            73           73
    8                                                  []              2           8              rewrite address server               0.773            73           73
    9                                            [10, 11]              1           9                   teneo load normal               0.428            88           88
    10                                                 []              2          10                    teneo normal fri               0.496            56           56
    11                                                 []              2          11                     meet load teneo               0.390            32           32
    12                                               [13]              1          12               heard shackleton memo               0.461            17           17
    13                                                 []              2          13               heard shackleton memo               0.461            17           17
    14               [15, 16, 17, 18, 19, 20, 21, 22, 23]              1          14                  ect shackleton hou               0.155           361          361
    15                                                 []              2          15                  haedicke cash isda               0.402            16           16
    16                                                 []              2          16                  ect hou shackleton               0.384            83           83
    17                                                 []              2          17               lunch shackleton isda               0.373            27           27
    18                                                 []              2          18          transactions foreign annex               0.434            38           38
    19                                                 []              2          19               shackleton dupre test               0.383            31           31
    20                                                 []              2          20                 kean library hendry               0.349            45           45
    21                                                 []              2          21        market electricity commodity               0.392            37           37
    22                                                 []              2          22         calo confirmation available               0.340            45           45
    23                                                 []              2          23           shackleton trade davidson               0.314            39           39
    24                                               [25]              1          24            shall agreement customer               0.558            34           34
    25                                                 []              2          25            shall agreement customer               0.558            34           34
    26  [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 3...              1          26                  mon normal subject               0.106           595          595
    27                                                 []              2          27          kincannon haedicke meeting               0.420            25           25
    28                                                 []              2          28             harris attorney account               0.347            46           46
    29                                                 []              2          29    enron_development brazil tozzini               0.343            57           57
    ..                                                ...            ...         ...                                 ...                 ...           ...          ...
    57                                                 []              2          57                   guaranty swap ena               0.343            51           51
    58                                                 []              2          58                      wed issues nov               0.351            63           63
    59                                                 []              2          59         transactions conference ena               0.418            10           10
    60                                                 []              2          60                       list lay stay               0.323            32           32
    61                                                 []              2          61   ricafrente ricafrente_david draft               0.504            11           11
    62                                                 []              2          62              sanders site deadhorse               0.422            19           19
    63                                                 []              2          63                  sanders normal nov               0.433            51           51
    64                                                 []              2          64              pcb midamerican letter               0.370            26           26
    65                                                 []              2          65      sampling sentence interconnect               0.393            24           24
    66                                                 []              2          66                   party cat control               0.353            25           25
    67                                                 []              2          67    counterparty roberts midamerican               0.315            27           27
    68                                                 []              2          68                 tenet normal office               0.418            27           27
    69                                                 []              2          69             message services energy               0.298            45           45
    70  [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 8...              1          70             tenet normal ricafrente               0.139           497          497
    71                                                 []              2          71            enron clearinghouse corp               0.417            18           18
    72                                                 []              2          72                     ect forster lon               0.341            24           24
    73                                                 []              2          73             master gtc counterparty               0.313            53           53
    74                                                 []              2          74                  sager teneo murray               0.412            15           15
    75                                                 []              2          75                    fri tenet normal               0.349            37           37
    76                                                 []              2          76                     law know thanks               0.412            20           20
    77                                                 []              2          77                    enron jones tana               0.336            18           18
    78                                                 []              2          78                    enron tana jones               0.453            20           20
    79                                                 []              2          79                   meeting tenet fri               0.436            23           23
    80                                                 []              2          80                    budget dead room               0.376            35           35
    81                                                 []              2          81  eb3325 ricafrente ricafrente_david               0.327            70           70
    82                                                 []              2          82                       wed tenet oct               0.400            39           39
    83                                                 []              2          83                conference tue tenet               0.424            18           18
    84                                                 []              2          84                         thu oct mtg               0.496            24           24
    85                                                 []              2          85                    tenet nov normal               0.349            46           46
    86                                                 []              2          86              team migration outlook               0.390            37           37

    [87 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/0673873c75c54f55
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           16               0.384            83  [{'document_id': 11236, 'similarity': 0.777233...
    1            8               0.773            73  [{'document_id': 5041, 'similarity': 0.9922941...
    2           81               0.327            70  [{'document_id': 2499561, 'similarity': 0.6554...
    3           58               0.351            63  [{'document_id': 131769, 'similarity': 0.59708...
    4           29               0.343            57  [{'document_id': 5035536, 'similarity': 0.5723...
    5           10               0.496            56  [{'document_id': 314721, 'similarity': 0.65759...
    6           49               0.441            54  [{'document_id': 298116, 'similarity': 0.85264...
    7           73               0.313            53  [{'document_id': 1052676, 'similarity': 0.5664...
    8           57               0.343            51  [{'document_id': 79524, 'similarity': 0.590447...
    9           63               0.433            51  [{'document_id': 3802500, 'similarity': 0.5724...
    10          28               0.347            46  [{'document_id': 28561, 'similarity': 0.691293...
    11          85               0.349            46  [{'document_id': 3587236, 'similarity': 0.4937...
    12          20               0.349            45  [{'document_id': 145924, 'similarity': 0.65777...
    13          22               0.340            45  [{'document_id': 1306449, 'similarity': 0.6436...
    14          69               0.298            45  [{'document_id': 1404225, 'similarity': 0.5366...
    15          38               0.326            44  [{'document_id': 1119364, 'similarity': 0.6070...
    16          40               0.374            44  [{'document_id': 3097600, 'similarity': 0.7126...
    17          50               0.401            44  [{'document_id': 362404, 'similarity': 0.67416...
    18          36               0.339            43  [{'document_id': 2250000, 'similarity': 0.5999...
    19          23               0.314            39  [{'document_id': 24964, 'similarity': 0.507252...
    20          35               0.322            39  [{'document_id': 1585081, 'similarity': 0.6249...
    21          82               0.400            39  [{'document_id': 1768900, 'similarity': 0.7715...
    22          18               0.434            38  [{'document_id': 4624, 'similarity': 0.7327140...
    23          48               0.384            38  [{'document_id': 855625, 'similarity': 0.70272...
    24          21               0.392            37  [{'document_id': 207025, 'similarity': 0.64944...
    25          52               0.375            37  [{'document_id': 514089, 'similarity': 0.64906...
    26          75               0.349            37  [{'document_id': 1915456, 'similarity': 0.5713...
    27          86               0.390            37  [{'document_id': 5499025, 'similarity': 0.6673...
    28           6               0.615            36  [{'document_id': 165649, 'similarity': 0.90354...
    29          51               0.319            35  [{'document_id': 403225, 'similarity': 0.46351...
    30          80               0.376            35  [{'document_id': 2411809, 'similarity': 0.6494...
    31          25               0.558            34  [{'document_id': 611524, 'similarity': 0.89478...
    32          37               0.466            34  [{'document_id': 1893376, 'similarity': 0.7724...
    33          11               0.390            32  [{'document_id': 263169, 'similarity': 0.59673...
    34          54               0.340            32  [{'document_id': 247009, 'similarity': 0.50177...
    35          60               0.323            32  [{'document_id': 1454436, 'similarity': 0.4808...
    36           2               0.509            31  [{'document_id': 41616, 'similarity': 0.815413...
    37          19               0.383            31  [{'document_id': 67600, 'similarity': 0.583443...
    38          55               0.434            31  [{'document_id': 154449, 'similarity': 0.68724...
    39          44               0.356            30  [{'document_id': 543169, 'similarity': 0.66487...
    40          30               0.326            29  [{'document_id': 1664100, 'similarity': 0.6330...
    41          17               0.373            27  [{'document_id': 8100, 'similarity': 0.5817114...
    42          41               0.332            27  [{'document_id': 1747684, 'similarity': 0.6548...
    43          67               0.315            27  [{'document_id': 792100, 'similarity': 0.47966...
    44          68               0.418            27  [{'document_id': 2178576, 'similarity': 0.6665...
    45          64               0.370            26  [{'document_id': 3254416, 'similarity': 0.4722...
    46          27               0.420            25  [{'document_id': 2611456, 'similarity': 0.7679...
    47          33               0.412            25  [{'document_id': 1597696, 'similarity': 0.6977...
    48          45               0.319            25  [{'document_id': 715716, 'similarity': 0.50033...
    49          66               0.353            25  [{'document_id': 783225, 'similarity': 0.59529...
    50          53               0.354            24  [{'document_id': 434281, 'similarity': 0.57190...
    51          65               0.393            24  [{'document_id': 910116, 'similarity': 0.60612...
    52          72               0.341            24  [{'document_id': 1236544, 'similarity': 0.5522...
    53          84               0.496            24  [{'document_id': 2223081, 'similarity': 0.6699...
    54          31               0.311            23  [{'document_id': 126025, 'similarity': 0.43689...
    55          43               0.351            23  [{'document_id': 4879681, 'similarity': 0.6223...
    56          79               0.436            23  [{'document_id': 3880900, 'similarity': 0.7889...
    57          32               0.468            21  [{'document_id': 1210000, 'similarity': 0.7224...
    58          39               0.372            21  [{'document_id': 1181569, 'similarity': 0.5571...
    59          42               0.383            20  [{'document_id': 3367225, 'similarity': 0.6267...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/aaf73ede96b04044




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.527 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
