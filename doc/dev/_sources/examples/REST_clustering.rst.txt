

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = bf6696942de04897

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/bf6696942de04897

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/bf6696942de04897
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 53797200b00f445b
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 20f8c0b1d3824712

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/20f8c0b1d3824712
        .. computed in 1.2s
       cluster_id                  cluster_label  cluster_similarity  cluster_size  n_documents
    0           0               normal tue tenet               0.208           204          204
    1           1  fri enron_development outlook               0.213           207          207
    2           2                 normal nov fri               0.246           182          182
    3           3            agreement enron new               0.112           583          583
    4           4      test teneo administrative               0.151           349          349
    5           5              mon meeting tenet               0.163           327          327
    6           6                tue normal meet               0.135           382          382
    7           7                  ect hou shall               0.328           117          117
    8           8         rewrite address server               1.000            56           56
    9           9   party transaction defaulting               0.482            58           58

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 91382b3f61714194

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/91382b3f61714194
        .. computed in 2.3s
                                                 children  cluster_depth  cluster_id                    cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 6, 15, 17, 20, 26, 29, 31, 33, 35, 49, ...              0           0                  normal test ect               0.071          2465         2465
    1                                                 [2]              1           1           rewrite address server               0.782            72           72
    2                                                  []              2           2           rewrite address server               0.782            72           72
    3                                              [4, 5]              1           3         shackleton davidson load               0.344            54           54
    4                                                  []              2           4       shackleton davidson brazil               0.363            33           33
    5                                                  []              2           5              shackleton tue load               0.471            21           21
    6                       [7, 8, 9, 10, 11, 12, 13, 14]              1           6  group recipients administrative               0.171           262          262
    7                                                  []              2           7          gtc market transmission               0.321            42           42
    8                                                  []              2           8                  cash jones tana               0.406            15           15
    9                                                  []              2           9           change brokers nicolay               0.503             8            8
    10                                                 []              2          10                 jones tana awais               0.311            36           36
    11                                                 []              2          11              dasovich jones tana               0.339            36           36
    12                                                 []              2          12                 master tana haas               0.266            39           39
    13                                                 []              2          13            test deseret etringer               0.380            34           34
    14                                                 []              2          14   test administrative recipients               0.387            52           52
    15                                               [16]              1          15               tiger sekse bailey               0.767            10           10
    16                                                 []              2          16               tiger sekse bailey               0.767            10           10
    17                                           [18, 19]              1          17                teneo normal load               0.482            72           72
    18                                                 []              2          18                load teneo normal               0.500            36           36
    19                                                 []              2          19                teneo normal meet               0.532            36           36
    20                               [21, 22, 23, 24, 25]              1          20        ect hou enron_development               0.186           262          262
    21                                                 []              2          21                    ect hou heard               0.451            66           66
    22                                                 []              2          22    issues enron_development cone               0.347            58           58
    23                                                 []              2          23         harris account brokerage               0.417            35           35
    24                                                 []              2          24     enron_development credit esa               0.314            68           68
    25                                                 []              2          25      nemec sampling interconnect               0.351            35           35
    26                                           [27, 28]              1          26         shall agreement customer               0.367            70           70
    27                                                 []              2          27         customer shall agreement               0.496            33           33
    28                                                 []              2          28            foreign agreement tax               0.417            37           37
    29                                               [30]              1          29                  deals like list               0.430            17           17
    ..                                                ...            ...         ...                              ...                 ...           ...          ...
    69                                                 []              2          69               cat trading online               0.439            10           10
    70  [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 8...              1          70           outlook team migration               0.109           479          479
    71                                                 []              2          71            services energy ellis               0.368            33           33
    72                                                 []              2          72         gdr confirmation hagerty               0.378            42           42
    73                                                 []              2          73      bar paul_pfeffer bakerbotts               0.338            26           26
    74                                                 []              2          74                  calo day dinner               0.420            25           25
    75                                                 []              2          75          ruppert exxon gillaspie               0.401            33           33
    76                                                 []              2          76            budget room elbertson               0.316            53           53
    77                                                 []              2          77       dead horse americancentury               0.353            35           35
    78                                                 []              2          78           conference month ortiz               0.419            23           23
    79                                                 []              2          79                  thu finance oct               0.406            35           35
    80                                                 []              2          80                 houston calo mtg               0.394            21           21
    81                                                 []              2          81     conference information teneo               0.327            28           28
    82                                                 []              2          82        shackleton_sara class htm               0.429            13           13
    83                                                 []              2          83           sager legal supplement               0.334            19           19
    84                                                 []              2          84           migration outlook team               0.376            36           36
    85                                                 []              2          85            migration outlook mtg               0.418            26           26
    86                                                 []              2          86           team outlook migration               0.447             8            8
    87                                                 []              2          87               mtg pier questions               0.305            23           23
    88           [89, 90, 91, 92, 93, 94, 95, 96, 97, 98]              1          88                tenet normal test               0.157           414          414
    89                                                 []              2          89                    kean swap ena               0.341            60           60
    90                                                 []              2          90        deseret haedicke contract               0.309            41           41
    91                                                 []              2          91                  lay stay motion               0.357            24           24
    92                                                 []              2          92                 tenet fri normal               0.357            56           56
    93                                                 []              2          93                    wed tenet oct               0.344            41           41
    94                                                 []              2          94           eb3325 meet ricafrente               0.430            46           46
    95                                                 []              2          95           conference power taffy               0.374            27           27
    96                                                 []              2          96                meeting tenet mon               0.399            60           60
    97                                                 []              2          97                 mon tenet normal               0.412            38           38
    98                                                 []              2          98                  wed eb3325 meet               0.385            21           21

    [99 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/91382b3f61714194
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           40               0.324            89  [{'document_id': 295936, 'similarity': 0.71317...
    1            2               0.782            72  [{'document_id': 5041, 'similarity': 0.9942045...
    2           24               0.314            68  [{'document_id': 36100, 'similarity': 0.586426...
    3           21               0.451            66  [{'document_id': 2030625, 'similarity': 0.8188...
    4           89               0.341            60  [{'document_id': 53361, 'similarity': 0.512687...
    5           96               0.399            60  [{'document_id': 3052009, 'similarity': 0.5720...
    6           22               0.347            58  [{'document_id': 784, 'similarity': 0.65763212...
    7           92               0.357            56  [{'document_id': 5308416, 'similarity': 0.5909...
    8           76               0.316            53  [{'document_id': 3381921, 'similarity': 0.5474...
    9           14               0.387            52  [{'document_id': 1132096, 'similarity': 0.7540...
    10          68               0.300            48  [{'document_id': 2647129, 'similarity': 0.5898...
    11          59               0.355            46  [{'document_id': 1893376, 'similarity': 0.6035...
    12          94               0.430            46  [{'document_id': 2676496, 'similarity': 0.5959...
    13          37               0.314            45  [{'document_id': 423801, 'similarity': 0.55823...
    14          62               0.543            45  [{'document_id': 165649, 'similarity': 0.88025...
    15           7               0.321            42  [{'document_id': 142884, 'similarity': 0.70862...
    16          72               0.378            42  [{'document_id': 91809, 'similarity': 0.659395...
    17          90               0.309            41  [{'document_id': 5116644, 'similarity': 0.4695...
    18          93               0.344            41  [{'document_id': 5494336, 'similarity': 0.5372...
    19          43               0.315            40  [{'document_id': 1404225, 'similarity': 0.5776...
    20          12               0.266            39  [{'document_id': 3225616, 'similarity': 0.4517...
    21          39               0.375            38  [{'document_id': 514089, 'similarity': 0.70730...
    22          97               0.412            38  [{'document_id': 2399401, 'similarity': 0.7131...
    23          28               0.417            37  [{'document_id': 4624, 'similarity': 0.6668853...
    24          42               0.383            37  [{'document_id': 710649, 'similarity': 0.63567...
    25          10               0.311            36  [{'document_id': 206116, 'similarity': 0.54978...
    26          11               0.339            36  [{'document_id': 583696, 'similarity': 0.65931...
    27          18               0.500            36  [{'document_id': 350464, 'similarity': 0.66930...
    28          19               0.532            36  [{'document_id': 358801, 'similarity': 0.67109...
    29          84               0.376            36  [{'document_id': 5326864, 'similarity': 0.6578...
    30          23               0.417            35  [{'document_id': 30276, 'similarity': 0.692099...
    31          25               0.351            35  [{'document_id': 698896, 'similarity': 0.52019...
    32          44               0.326            35  [{'document_id': 4955076, 'similarity': 0.5621...
    33          46               0.452            35  [{'document_id': 1387684, 'similarity': 0.6302...
    34          77               0.353            35  [{'document_id': 3258025, 'similarity': 0.5949...
    35          79               0.406            35  [{'document_id': 2579236, 'similarity': 0.6738...
    36          13               0.380            34  [{'document_id': 473344, 'similarity': 0.65984...
    37           4               0.363            33  [{'document_id': 32400, 'similarity': 0.638308...
    38          27               0.496            33  [{'document_id': 628849, 'similarity': 0.89401...
    39          71               0.368            33  [{'document_id': 161604, 'similarity': 0.51300...
    40          75               0.401            33  [{'document_id': 1664100, 'similarity': 0.6824...
    41          38               0.358            28  [{'document_id': 67081, 'similarity': 0.594042...
    42          81               0.327            28  [{'document_id': 4460544, 'similarity': 0.5354...
    43          95               0.374            27  [{'document_id': 1493284, 'similarity': 0.5544...
    44          73               0.338            26  [{'document_id': 1640961, 'similarity': 0.5018...
    45          85               0.418            26  [{'document_id': 5480281, 'similarity': 0.7354...
    46          58               0.458            25  [{'document_id': 3171961, 'similarity': 0.8084...
    47          74               0.420            25  [{'document_id': 3783025, 'similarity': 0.7805...
    48          91               0.357            24  [{'document_id': 1454436, 'similarity': 0.5874...
    49          45               0.520            23  [{'document_id': 3802500, 'similarity': 0.6587...
    50          78               0.419            23  [{'document_id': 17956, 'similarity': 0.629863...
    51          87               0.305            23  [{'document_id': 3496900, 'similarity': 0.5309...
    52          47               0.354            22  [{'document_id': 933156, 'similarity': 0.51500...
    53           5               0.471            21  [{'document_id': 65536, 'similarity': 0.671987...
    54          34               0.486            21  [{'document_id': 2992900, 'similarity': 0.5883...
    55          61               0.374            21  [{'document_id': 781456, 'similarity': 0.68407...
    56          80               0.394            21  [{'document_id': 1062961, 'similarity': 0.6342...
    57          98               0.385            21  [{'document_id': 2569609, 'similarity': 0.5296...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/bf6696942de04897




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  11.047 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
