

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['filenames', 'id']
       => dsid = 169d47ffaec34d42

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/169d47ffaec34d42

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/169d47ffaec34d42
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: ../freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 0.75
         - min_df: 4.0
         - n_features: 30001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: True

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = fa53ddffdee14a0d
      => SVD decomposition with 100 dimensions explaining 53.29 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 500bccf79d284dcc

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/500bccf79d284dcc
        .. computed in 1.7s
       cluster_id                       cluster_label  cluster_similarity  cluster_size  n_documents
    0           0                 load shackleton fri               0.331           406          406
    1           1                    ect hou haedicke               0.369           370          370
    2           2               meeting tue migration               0.385           236          236
    3           3              rewrite server address               1.000            56           56
    4           4         thu enron_development lunch               0.361           254          254
    5           5     teneo recipients administrative               0.378           290          290
    6           6                       mtg enron mon               0.366           284          284
    7           7  eb3325 ricafrente ricafrente_david               0.465           125          125
    8           8      party counterparty transaction               0.434           155          155
    9           9                  dasovich cat urine               0.358           289          289

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 5d2c101fb6a94769

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/5d2c101fb6a94769
        .. computed in 2.7s
                                                 children  cluster_depth  cluster_id                       cluster_label  cluster_similarity  cluster_size  n_documents
    0                              [1, 3, 23, 28, 32, 51]              0           0                        test ect oct               0.294          2465         2465
    1                                                 [2]              1           1              rewrite server address               0.987            57           57
    2                                                  []              2           2              rewrite server address               0.987            57           57
    3   [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,...              1           3        tenet test enron_development               0.313           977          977
    4                                                  []              2           4      enron_development cone meeting               0.472            83           83
    5                                                  []              2           5              attorney project south               0.425            51           51
    6                                                  []              2           6          neuner guaranty catalytica               0.542            30           30
    7                                                  []              2           7              marcelo tozzini hendry               0.427           101          101
    8                                                  []              2           8                   tana jones credit               0.502            40           40
    9                                                  []              2           9               calo shackleton teneo               0.431            76           76
    10                                                 []              2          10                 mon migration tenet               0.438            55           55
    11                                                 []              2          11              online kincannon trade               0.401            59           59
    12                                                 []              2          12                   load tue yosemite               0.538            27           27
    13                                                 []              2          13                     ena legal enron               0.448            61           61
    14                                                 []              2          14                    jones tana enron               0.507            72           72
    15                                                 []              2          15                   meeting tenet mon               0.482            46           46
    16                                                 []              2          16                       wed oct tenet               0.562            23           23
    17                                                 []              2          17                       wed nov tenet               0.505            30           30
    18                                                 []              2          18                       mon tenet nov               0.438            45           45
    19                                                 []              2          19                      oct thu brazil               0.510            39           39
    20                                                 []              2          20                    mtg tenet sutton               0.496            62           62
    21                                                 []              2          21                 tenet thu migration               0.496            38           38
    22                                                 []              2          22                         nov fri thu               0.485            39           39
    23                                   [24, 25, 26, 27]              1          23                 nemec haedicke kean               0.383           219          219
    24                                                 []              2          24                   haedicke load thu               0.573            53           53
    25                                                 []              2          25              nemec harris brokerage               0.443            86           86
    26                                                 []              2          26                  kean ruppert exxon               0.560            48           48
    27                                                 []              2          27                    nemec doc gallup               0.657            32           32
    28                                       [29, 30, 31]              1          28                         ect hou lon               0.425           151          151
    29                                                 []              2          29                       ect hou ellis               0.678            45           45
    30                                                 []              2          30                 message ect milbank               0.472            44           44
    31                                                 []              2          31                      ect lon master               0.454            62           62
    32  [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 4...              1          32                eb3325 test dasovich               0.314           979          979
    33                                                 []              2          33               migration eb3325 team               0.417            56           56
    34                                                 []              2          34                   berkeley haas edu               0.533            53           53
    35                                                 []              2          35         shackleton dupre catalytica               0.452            44           44
    36                                                 []              2          36                  advice tana update               0.493            44           44
    37                                                 []              2          37               shall ellis agreement               0.436           113          113
    38                                                 []              2          38             transaction party shall               0.531            90           90
    39                                                 []              2          39                  dasovich hyvl bump               0.460            77           77
    40                                                 []              2          40            dasovich energy customer               0.457            76           76
    41                                                 []              2          41                   mirari law resume               0.681            11           11
    42                                                 []              2          42              tiger nicolay guaranty               0.432            84           84
    43                                                 []              2          43               deseret etringer utah               0.601            36           36
    44                                                 []              2          44                   lunch lafuze dead               0.484            51           51
    45                                                 []              2          45             kincannon lay migration               0.448            33           33
    46                                                 []              2          46  eb3325 ricafrente ricafrente_david               0.515            57           57
    47                                                 []              2          47                    tax foreign rate               0.489            36           36
    48                                                 []              2          48              energy services market               0.556            55           55
    49                                                 []              2          49     teneo recipients administrative               0.478            36           36
    50                                                 []              2          50                     power class tue               0.516            27           27
    51                                           [52, 53]              1          51                   sanders nov lunch               0.555            82           82
    52                                                 []              2          52                 sanders meeting tue               0.498            17           17
    53                                                 []              2          53                   sanders nov lunch               0.597            65           65

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/5d2c101fb6a94769
        .. computed in 0.6s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            0               0.436           113  [{'document_id': 293764, 'similarity': 0.43619...
    1            1               0.427           101  [{'document_id': 99856, 'similarity': 0.427038...
    2            2               0.531            90  [{'document_id': 4946176, 'similarity': 0.5306...
    3            3               0.443            86  [{'document_id': 797449, 'similarity': 0.44265...
    4            4               0.432            84  [{'document_id': 40401, 'similarity': 0.431554...
    5            5               0.472            83  [{'document_id': 625, 'similarity': 0.47213539...
    6            6               0.460            77  [{'document_id': 502681, 'similarity': 0.46044...
    7            7               0.431            76  [{'document_id': 105625, 'similarity': 0.43092...
    8            8               0.457            76  [{'document_id': 583696, 'similarity': 0.45657...
    9            9               0.507            72  [{'document_id': 1993744, 'similarity': 0.5071...
    10          10               0.597            65  [{'document_id': 3814209, 'similarity': 0.5967...
    11          11               0.496            62  [{'document_id': 16, 'similarity': 0.496061827...
    12          12               0.454            62  [{'document_id': 3164841, 'similarity': 0.4538...
    13          13               0.448            61  [{'document_id': 79524, 'similarity': 0.447702...
    14          14               0.401            59  [{'document_id': 1988100, 'similarity': 0.4008...
    15          15               0.987            57  [{'document_id': 5041, 'similarity': 0.9867637...
    16          16               0.515            57  [{'document_id': 2869636, 'similarity': 0.5146...
    17          17               0.417            56  [{'document_id': 2025, 'similarity': 0.4169419...
    18          18               0.438            55  [{'document_id': 3094081, 'similarity': 0.4381...
    19          19               0.556            55  [{'document_id': 393129, 'similarity': 0.55562...
    20          20               0.573            53  [{'document_id': 2992900, 'similarity': 0.5729...
    21          21               0.533            53  [{'document_id': 458329, 'similarity': 0.53343...
    22          22               0.425            51  [{'document_id': 781456, 'similarity': 0.42528...
    23          23               0.484            51  [{'document_id': 3655744, 'similarity': 0.4836...
    24          24               0.560            48  [{'document_id': 758641, 'similarity': 0.56024...
    25          25               0.482            46  [{'document_id': 2253001, 'similarity': 0.4822...
    26          26               0.438            45  [{'document_id': 6041764, 'similarity': 0.4384...
    27          27               0.678            45  [{'document_id': 11025, 'similarity': 0.677966...
    28          28               0.472            44  [{'document_id': 1406596, 'similarity': 0.4720...
    29          29               0.452            44  [{'document_id': 88209, 'similarity': 0.451648...
    30          30               0.493            44  [{'document_id': 226576, 'similarity': 0.49339...
    31          31               0.502            40  [{'document_id': 248004, 'similarity': 0.50172...
    32          32               0.510            39  [{'document_id': 358801, 'similarity': 0.50982...
    33          33               0.485            39  [{'document_id': 508369, 'similarity': 0.48484...
    34          34               0.496            38  [{'document_id': 2241009, 'similarity': 0.4964...
    35          35               0.601            36  [{'document_id': 82944, 'similarity': 0.600528...
    36          36               0.489            36  [{'document_id': 4761, 'similarity': 0.4892433...
    37          37               0.478            36  [{'document_id': 4959529, 'similarity': 0.4783...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/169d47ffaec34d42




|


.. code-block:: python


    import os.path
    import numpy as np
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])} \
                                   for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {'dataset_definition': dataset_definition,
               'use_idf': 1, 'n_features': 30001,
               'min_df': 4, 'max_df': 0.75 # filter out unfrequent / too frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url)

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items() \
                                                      if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 100
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print('  => SVD decomposition with {} dimensions explaining {:.2f} % variabilty of the data'.format(
                            n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              #'min_similarity': 0.95,
                              'branching_factor': 20 
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  9.875 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
