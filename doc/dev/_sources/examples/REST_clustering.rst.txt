

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 3f47d39964624175

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/3f47d39964624175

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/3f47d39964624175
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = e55116ab694e4d11
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = e174944f4e644723

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/e174944f4e644723
        .. computed in 1.2s
       cluster_id                   cluster_label  cluster_similarity  cluster_size  n_documents
    0           0                   thu enron oct               0.134           383          383
    1           1         transaction party price               0.539            53           53
    2           2              meeting oct normal               0.181           301          301
    3           3       ect hou enron_development               0.371            88           88
    4           4                   tue nov shall               0.234           180          180
    5           5          rewrite address server               1.000            56           56
    6           6                fri heard lessee               0.093           765          765
    7           7                power fri normal               0.230           193          193
    8           8  test administrative recipients               0.216           207          207
    9           9                  mon nov normal               0.220           239          239

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = f8bb33daa1a34793

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/f8bb33daa1a34793
        .. computed in 2.3s
                                                 children  cluster_depth  cluster_id                        cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 14, 16, 22, 25, 38, 45, 52, 60, 64, 66,...              0           0                      normal test ect               0.071          2465         2465
    1                                                 [2]              1           1                    memo marcelo mail               0.527            13           13
    2                                                  []              2           2                    memo marcelo mail               0.527            13           13
    3                  [4, 5, 6, 7, 8, 9, 10, 11, 12, 13]              1           3         enron_development shall load               0.170           316          316
    4                                                  []              2           4        confirmation date transaction               0.478            17           17
    5                                                  []              2           5                     amoco ortiz load               0.317            35           35
    6                                                  []              2           6  enron_development shackleton harris               0.383            54           54
    7                                                  []              2           7               company customer shall               0.639             4            4
    8                                                  []              2           8                       tana jones gtc               0.353            36           36
    9                                                  []              2           9                  shall lessee lessor               0.425            47           47
    10                                                 []              2          10           commodity enrononline duke               0.338            36           36
    11                                                 []              2          11                password use dasovich               0.996             2            2
    12                                                 []              2          12              dasovich houston normal               0.526            18           18
    13                                                 []              2          13                     teneo normal fri               0.459            67           67
    14                                               [15]              1          14               rewrite address server               0.613            95           95
    15                                                 []              2          15               rewrite address server               0.613            95           95
    16                               [17, 18, 19, 20, 21]              1          16                  kean market subject               0.169           211          211
    17                                                 []              2          17                   flynn subject smud               0.355            42           42
    18                                                 []              2          18             dupre shackleton systems               0.380            28           28
    19                                                 []              2          19            attorney south authorized               0.421            30           30
    20                                                 []              2          20                kean deseret etringer               0.324            55           55
    21                                                 []              2          21            market transmission power               0.331            56           56
    22                                           [23, 24]              1          22               party transaction test               0.289           127          127
    23                                                 []              2          23              party transaction shall               0.443            60           60
    24                                                 []              2          24       test recipients administrative               0.353            67           67
    25   [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]              1          25                     tenet normal mon               0.175           302          302
    26                                                 []              2          26              translated berkeley hou               0.367            32           32
    27                                                 []              2          27                      meet eb3325 mon               0.363            18           18
    28                                                 []              2          28              transmission hyvl buyer               0.382            17           17
    29                                                 []              2          29               enrononline price user               0.453            12           12
    ..                                                ...            ...         ...                                  ...                 ...           ...          ...
    59                                                 []              2          59           agreement shall compressor               0.352            65           65
    60                                       [61, 62, 63]              1          60                 teneo test elbertson               0.252            69           69
    61                                                 []              2          61              sager murray mccullough               0.377            22           22
    62                                                 []              2          62                  lay laguna bernacik               0.417            14           14
    63                                                 []              2          63                 teneo elbertson test               0.348            33           33
    64                                               [65]              1          64                   conf sutton harris               0.548             5            5
    65                                                 []              2          65                   conf sutton harris               0.548             5            5
    66                                               [67]              1          66                 guaranty dupre black               0.460             8            8
    67                                                 []              2          67                 guaranty dupre black               0.460             8            8
    68  [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 8...              1          68                      ect normal team               0.093           729          729
    69                                                 []              2          69        issues cone enron_development               0.362            56           56
    70                                                 []              2          70                       clair ena swap               0.309            62           62
    71                                                 []              2          71        americancentury brokers ellis               0.326            20           20
    72                                                 []              2          72               kincannon new november               0.387            27           27
    73                                                 []              2          73                        ect hou hodge               0.333            43           43
    74                                                 []              2          74                    dead horse sample               0.298            46           46
    75                                                 []              2          75              trade financial masters               0.321            28           28
    76                                                 []              2          76            sampling norm derivatives               0.387            35           35
    77                                                 []              2          77         performance management taffy               0.341            32           32
    78                                                 []              2          78                  list law restricted               0.322            31           31
    79                                                 []              2          79               party usvi midamerican               0.342            35           35
    80                                                 []              2          80                        calo day room               0.378            36           36
    81                                                 []              2          81  ricafrente ricafrente_david message               0.342            44           44
    82                                                 []              2          82                  advice services gdr               0.350            55           55
    83                                                 []              2          83           shackleton_sara tue normal               0.361            33           33
    84                                                 []              2          84                      tiger serc nerc               0.392            27           27
    85                                                 []              2          85  legal legalanywhere shackleton_sara               0.245            38           38
    86                                                 []              2          86               fri deals counterparty               0.390            21           21
    87                                                 []              2          87               migration outlook team               0.356            30           30
    88                                                 []              2          88               outlook migration team               0.451            30           30

    [89 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/f8bb33daa1a34793
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           15               0.613            95  [{'document_id': 5041, 'similarity': 0.9607808...
    1           13               0.459            67  [{'document_id': 414736, 'similarity': 0.62883...
    2           24               0.353            67  [{'document_id': 154449, 'similarity': 0.77646...
    3           59               0.352            65  [{'document_id': 1503076, 'similarity': 0.7191...
    4           70               0.309            62  [{'document_id': 3790809, 'similarity': 0.5223...
    5           23               0.443            60  [{'document_id': 165649, 'similarity': 0.83923...
    6           21               0.331            56  [{'document_id': 142884, 'similarity': 0.70772...
    7           69               0.362            56  [{'document_id': 131769, 'similarity': 0.66509...
    8           20               0.324            55  [{'document_id': 145924, 'similarity': 0.62653...
    9           82               0.350            55  [{'document_id': 234256, 'similarity': 0.56993...
    10           6               0.383            54  [{'document_id': 33489, 'similarity': 0.655176...
    11          44               0.446            54  [{'document_id': 3802500, 'similarity': 0.6209...
    12          53               0.295            52  [{'document_id': 613089, 'similarity': 0.58899...
    13           9               0.425            47  [{'document_id': 295936, 'similarity': 0.84630...
    14          57               0.312            46  [{'document_id': 5171076, 'similarity': 0.5778...
    15          74               0.298            46  [{'document_id': 1060900, 'similarity': 0.4749...
    16          81               0.342            44  [{'document_id': 2493241, 'similarity': 0.5298...
    17          73               0.333            43  [{'document_id': 4422609, 'similarity': 0.5221...
    18          17               0.355            42  [{'document_id': 4624, 'similarity': 0.5763951...
    19          46               0.347            42  [{'document_id': 2334784, 'similarity': 0.5956...
    20          50               0.382            41  [{'document_id': 1768900, 'similarity': 0.7354...
    21          58               0.385            39  [{'document_id': 1100401, 'similarity': 0.7463...
    22          33               0.353            38  [{'document_id': 2729104, 'similarity': 0.5939...
    23          85               0.245            38  [{'document_id': 1946025, 'similarity': 0.4453...
    24           8               0.353            36  [{'document_id': 277729, 'similarity': 0.50332...
    25          10               0.338            36  [{'document_id': 408321, 'similarity': 0.52272...
    26          51               0.480            36  [{'document_id': 16, 'similarity': 0.744374418...
    27          80               0.378            36  [{'document_id': 1306449, 'similarity': 0.7573...
    28           5               0.317            35  [{'document_id': 14161, 'similarity': 0.556044...
    29          32               0.446            35  [{'document_id': 3052009, 'similarity': 0.5811...
    30          76               0.387            35  [{'document_id': 1117249, 'similarity': 0.6155...
    31          79               0.342            35  [{'document_id': 3651921, 'similarity': 0.6615...
    32          34               0.394            34  [{'document_id': 6041764, 'similarity': 0.6765...
    33          63               0.348            33  [{'document_id': 3500641, 'similarity': 0.6162...
    34          83               0.361            33  [{'document_id': 4351396, 'similarity': 0.6311...
    35          26               0.367            32  [{'document_id': 574564, 'similarity': 0.59661...
    36          77               0.341            32  [{'document_id': 1846881, 'similarity': 0.5345...
    37          31               0.348            31  [{'document_id': 3553225, 'similarity': 0.5529...
    38          55               0.376            31  [{'document_id': 4999696, 'similarity': 0.6259...
    39          78               0.322            31  [{'document_id': 3767481, 'similarity': 0.4693...
    40          19               0.421            30  [{'document_id': 36481, 'similarity': 0.573207...
    41          48               0.387            30  [{'document_id': 1871424, 'similarity': 0.5834...
    42          87               0.356            30  [{'document_id': 5480281, 'similarity': 0.6747...
    43          88               0.451            30  [{'document_id': 5612161, 'similarity': 0.6675...
    44          41               0.346            29  [{'document_id': 2968729, 'similarity': 0.5407...
    45          18               0.380            28  [{'document_id': 3364, 'similarity': 0.5339981...
    46          39               0.369            28  [{'document_id': 62001, 'similarity': 0.620743...
    47          75               0.321            28  [{'document_id': 1162084, 'similarity': 0.5828...
    48          56               0.341            27  [{'document_id': 436921, 'similarity': 0.48141...
    49          72               0.387            27  [{'document_id': 2446096, 'similarity': 0.7131...
    50          84               0.392            27  [{'document_id': 21025, 'similarity': 0.710131...
    51          30               0.381            26  [{'document_id': 2433600, 'similarity': 0.6425...
    52          35               0.435            25  [{'document_id': 2686321, 'similarity': 0.6872...
    53          61               0.377            22  [{'document_id': 2768896, 'similarity': 0.5915...
    54          86               0.390            21  [{'document_id': 313600, 'similarity': 0.57956...
    55          71               0.326            20  [{'document_id': 1943236, 'similarity': 0.5221...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/3f47d39964624175




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.770 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
