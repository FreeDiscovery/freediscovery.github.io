

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 65cd3ff5d5d74a8a

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/65cd3ff5d5d74a8a

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/65cd3ff5d5d74a8a
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 7b34a37f989340b3
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = bec0341278a74e5b

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/bec0341278a74e5b
        .. computed in 1.4s
       cluster_id                   cluster_label  cluster_similarity  cluster_size  n_documents
    0           0           tue gillaspie deseret               0.284            87           87
    1           1               teneo normal load               0.438            88           88
    2           2  test administrative recipients               0.284           138          138
    3           3          rewrite address server               1.000            56           56
    4           4           mtg outlook migration               0.193           200          200
    5           5                 meeting ect thu               0.125           455          455
    6           6               issues sent group               0.090           766          766
    7           7                  wed normal ect               0.171           317          317
    8           8           shall party agreement               0.396           115          115
    9           9               tenet normal test               0.209           243          243

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 2e106628c6ec4fa7

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/2e106628c6ec4fa7
        .. computed in 2.5s
                                                 children  cluster_depth  cluster_id                            cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 6, 10, 12, 21, 24, 27, 29, 31, 33, 35, ...              0           0                          normal test ect               0.071          2465         2465
    1                                                 [2]              1           1                   rewrite address server               0.707            80           80
    2                                                  []              2           2                   rewrite address server               0.707            80           80
    3                                              [4, 5]              1           3                          enron ena jones               0.339            53           53
    4                                                  []              2           4                             ena swap rmt               0.619            17           17
    5                                                  []              2           5                           jones tana gtc               0.389            36           36
    6                                           [7, 8, 9]              1           6        shackleton shackleton_sara advice               0.310            81           81
    7                                                  []              2           7        shackleton_sara shackleton normal               0.522            19           19
    8                                                  []              2           8                     advice update mexico               0.509            23           23
    9                                                  []              2           9                 shackleton load davidson               0.395            39           39
    10                                               [11]              1          10                      calo meet wednesday               0.612            21           21
    11                                                 []              2          11                      calo meet wednesday               0.612            21           21
    12                   [13, 14, 15, 16, 17, 18, 19, 20]              1          12                     shall dasovich teneo               0.181           280          280
    13                                                 []              2          13                   trading changing place               0.439            20           20
    14                                                 []              2          14                      shall lessee lessor               0.438            55           55
    15                                                 []              2          15                          class serc nerc               0.340            38           38
    16                                                 []              2          16                       trading deals date               0.550             8            8
    17                                                 []              2          17        dasovich enron_development hendry               0.279            56           56
    18                                                 []              2          18                       doc gallup sellers               0.292            31           31
    19                                                 []              2          19                     teneo normal subject               0.561            33           33
    20                                                 []              2          20                        load teneo normal               0.498            39           39
    21                                           [22, 23]              1          21                          tana jones cash               0.259            75           75
    22                                                 []              2          22                 cash collateral canadian               0.441            22           22
    23                                                 []              2          23                         tana jones enron               0.304            53           53
    24                                           [25, 26]              1          24  enron_development committee serralheiro               0.330            60           60
    25                                                 []              2          25          enron_development committee esa               0.408            44           44
    26                                                 []              2          26                            isda csa cini               0.471            16           16
    27                                               [28]              1          27                  ruppert exxon gillaspie               0.509            21           21
    28                                                 []              2          28                  ruppert exxon gillaspie               0.509            21           21
    29                                               [30]              1          29                        clair taffy enron               0.445            21           21
    ..                                                ...            ...         ...                                      ...                 ...           ...          ...
    59                                                 []              2          59                         wed tenet normal               0.526            21           21
    60                                                 []              2          60                     tenet conference oct               0.347            42           42
    61                                                 []              2          61                         mon tenet normal               0.390            44           44
    62                                                 []              2          62                        meeting mon tenet               0.580            10           10
    63  [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 7...              1          63                    ect outlook migration               0.106           671          671
    64                                                 []              2          64            issues cone enron_development               0.378            50           50
    65                                                 []              2          65                            ect hou ellis               0.410            72           72
    66                                                 []              2          66                   party kean transaction               0.417            66           66
    67                                                 []              2          67                  date party confirmation               0.455            12           12
    68                                                 []              2          68            americancentury total company               0.382            25           25
    69                                                 []              2          69                    kincannon stay motion               0.337            38           38
    70                                                 []              2          70                     form resume attached               0.283            30           30
    71                                                 []              2          71           enrononline report derivatives               0.357            36           36
    72                                                 []              2          72                      dead project murray               0.347            37           37
    73                                                 []              2          73              credit foreign transactions               0.386            40           40
    74                                                 []              2          74                 deseret etringer opinion               0.432            24           24
    75                                                 []              2          75            houston sentence interconnect               0.377            23           23
    76                                                 []              2          76                     company subject list               0.379            30           30
    77                                                 []              2          77               financial canadian tozzini               0.360            41           41
    78                                                 []              2          78                          alias ellis lay               0.310            24           24
    79                                                 []              2          79                    mtg donovan migration               0.326            44           44
    80                                                 []              2          80                market transmission power               0.419            25           25
    81                                                 []              2          81                       mtg team migration               0.485             6            6
    82                                                 []              2          82                   migration outlook team               0.440            48           48
    83                               [84, 85, 86, 87, 88]              1          83                        eb3325 meet tenet               0.211           164          164
    84                                                 []              2          84                    information lon sager               0.338            27           27
    85                                                 []              2          85                   eb3325 meet ricafrente               0.352            52           52
    86                                                 []              2          86                         thu master tenet               0.423            39           39
    87                                                 []              2          87                           tue eb3325 oct               0.445            29           29
    88                                                 []              2          88                    trading hunter online               0.411            17           17

    [89 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/2e106628c6ec4fa7
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            2               0.707            80  [{'document_id': 5041, 'similarity': 0.9896392...
    1           65               0.410            72  [{'document_id': 11236, 'similarity': 0.816368...
    2           66               0.417            66  [{'document_id': 165649, 'similarity': 0.78931...
    3           34               0.425            62  [{'document_id': 1317904, 'similarity': 0.6325...
    4           17               0.279            56  [{'document_id': 430336, 'similarity': 0.60622...
    5           14               0.438            55  [{'document_id': 298116, 'similarity': 0.85586...
    6           23               0.304            53  [{'document_id': 242064, 'similarity': 0.42014...
    7           85               0.352            52  [{'document_id': 2676496, 'similarity': 0.6279...
    8           64               0.378            50  [{'document_id': 131769, 'similarity': 0.71067...
    9           82               0.440            48  [{'document_id': 5612161, 'similarity': 0.6571...
    10          56               0.404            46  [{'document_id': 3549456, 'similarity': 0.5569...
    11          32               0.517            45  [{'document_id': 609961, 'similarity': 0.87834...
    12          50               0.282            45  [{'document_id': 1951609, 'similarity': 0.5214...
    13          25               0.408            44  [{'document_id': 41616, 'similarity': 0.721181...
    14          51               0.293            44  [{'document_id': 1658944, 'similarity': 0.5053...
    15          61               0.390            44  [{'document_id': 2396304, 'similarity': 0.6577...
    16          79               0.326            44  [{'document_id': 5480281, 'similarity': 0.6382...
    17          40               0.311            43  [{'document_id': 423801, 'similarity': 0.49472...
    18          60               0.347            42  [{'document_id': 2468041, 'similarity': 0.5793...
    19          77               0.360            41  [{'document_id': 5171076, 'similarity': 0.5542...
    20          44               0.320            40  [{'document_id': 362404, 'similarity': 0.63613...
    21          58               0.359            40  [{'document_id': 1737124, 'similarity': 0.6775...
    22          73               0.386            40  [{'document_id': 4624, 'similarity': 0.7303574...
    23           9               0.395            39  [{'document_id': 32400, 'similarity': 0.560447...
    24          20               0.498            39  [{'document_id': 835396, 'similarity': 0.67384...
    25          42               0.400            39  [{'document_id': 2968729, 'similarity': 0.5280...
    26          48               0.388            39  [{'document_id': 77284, 'similarity': 0.678426...
    27          86               0.423            39  [{'document_id': 1752976, 'similarity': 0.5828...
    28          15               0.340            38  [{'document_id': 59049, 'similarity': 0.527606...
    29          36               0.512            38  [{'document_id': 156025, 'similarity': 0.86751...
    30          41               0.289            38  [{'document_id': 1181569, 'similarity': 0.4353...
    31          47               0.364            38  [{'document_id': 27889, 'similarity': 0.700827...
    32          57               0.387            38  [{'document_id': 1827904, 'similarity': 0.5335...
    33          69               0.337            38  [{'document_id': 2647129, 'similarity': 0.6292...
    34          52               0.344            37  [{'document_id': 36481, 'similarity': 0.569861...
    35          72               0.347            37  [{'document_id': 2768896, 'similarity': 0.5696...
    36           5               0.389            36  [{'document_id': 1962801, 'similarity': 0.6010...
    37          43               0.337            36  [{'document_id': 1404225, 'similarity': 0.6115...
    38          71               0.357            36  [{'document_id': 1117249, 'similarity': 0.6348...
    39          49               0.326            35  [{'document_id': 966289, 'similarity': 0.48412...
    40          19               0.561            33  [{'document_id': 358801, 'similarity': 0.70970...
    41          39               0.405            33  [{'document_id': 514089, 'similarity': 0.72021...
    42          53               0.388            33  [{'document_id': 3418801, 'similarity': 0.7823...
    43          18               0.292            31  [{'document_id': 630436, 'similarity': 0.55081...
    44          70               0.283            30  [{'document_id': 1281424, 'similarity': 0.3830...
    45          76               0.379            30  [{'document_id': 697225, 'similarity': 0.62149...
    46          87               0.445            29  [{'document_id': 2725801, 'similarity': 0.6594...
    47          84               0.338            27  [{'document_id': 1225449, 'similarity': 0.5104...
    48          68               0.382            25  [{'document_id': 543169, 'similarity': 0.75844...
    49          80               0.419            25  [{'document_id': 142884, 'similarity': 0.82350...
    50          74               0.432            24  [{'document_id': 72900, 'similarity': 0.725731...
    51          78               0.310            24  [{'document_id': 318096, 'similarity': 0.47986...
    52           8               0.509            23  [{'document_id': 25921, 'similarity': 0.886755...
    53          75               0.377            23  [{'document_id': 776161, 'similarity': 0.58732...
    54          22               0.441            22  [{'document_id': 8649, 'similarity': 0.7270686...
    55          11               0.612            21  [{'document_id': 1075369, 'similarity': 0.7735...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/65cd3ff5d5d74a8a




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  13.851 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
