

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['filenames', 'id']
       => dsid = 7789743d45234a75

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/7789743d45234a75

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/7789743d45234a75
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: ../freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 0.75
         - min_df: 4.0
         - n_features: 30001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: True

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 735a3f765658488b
      => SVD decomposition with 100 dimensions explaining 53.29 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = aa537f080a514ee4

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/aa537f080a514ee4
        .. computed in 1.8s
       cluster_id                     cluster_label  cluster_similarity  cluster_size  n_documents
    0           0                     nov tenet mon               0.392           238          238
    1           1                    energy thu oct               0.342           425          425
    2           2            migration outlook team               0.450           140          140
    3           3              enron ect conference               0.319           679          679
    4           4                   sanders sun oct               0.476           127          127
    5           5  teneo shackleton_sara recipients               0.407           200          200
    6           6            shall agreement lessee               0.594            69           69
    7           7          master enron transaction               0.371           285          285
    8           8        fri enron_development test               0.370           246          246
    9           9            rewrite server address               1.000            56           56

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = a74d59eb11a142a0

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/a74d59eb11a142a0
        .. computed in 2.9s
                                                 children  cluster_depth  cluster_id                         cluster_label  cluster_similarity  cluster_size  n_documents
    0                              [1, 3, 11, 25, 35, 40]              0           0                          test ect oct               0.294          2465         2465
    1                                                 [2]              1           1                rewrite server address               0.777            78           78
    2                                                  []              2           2                rewrite server address               0.777            78           78
    3                              [4, 5, 6, 7, 8, 9, 10]              1           3      shackleton teneo shackleton_sara               0.343           315          315
    4                                                  []              2           4         enron_development cone hendry               0.469            60           60
    5                                                  []              2           5                   ellis advice update               0.499            50           50
    6                                                  []              2           6                   shackleton mon load               0.550            20           20
    7                                                  []              2           7                deseret flynn etringer               0.460            77           77
    8                                                  []              2           8                      dead class horse               0.462            49           49
    9                                                  []              2           9                        mtg gtc letter               0.431            27           27
    10                                                 []              2          10        shackleton tue shackleton_sara               0.511            32           32
    11  [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2...              1          11                      ect haedicke hou               0.328           739          739
    12                                                 []              2          12                migration outlook team               0.442            32           32
    13                                                 []              2          13                    guaranty enron tva               0.453            44           44
    14                                                 []              2          14                shall agreement lessee               0.455           112          112
    15                                                 []              2          15                     tana jones hunter               0.465            48           48
    16                                                 []              2          16                     dasovich tax rate               0.481            67           67
    17                                                 []              2          17                  tiger guaranty sekse               0.507            44           44
    18                                                 []              2          18           nemec townsend paul_pfeffer               0.555            44           44
    19                                                 []              2          19          energy transmission services               0.610            45           45
    20                                                 []              2          20                   berkeley haas alias               0.569            46           46
    21                                                 []              2          21                         ect hou taffy               0.586            72           72
    22                                                 []              2          22               energy market customers               0.545            54           54
    23                                                 []              2          23                 catalytica dupre cini               0.433            68           68
    24                                                 []              2          24               haedicke labanowski nov               0.592            63           63
    25               [26, 27, 28, 29, 30, 31, 32, 33, 34]              1          25                        tenet test wed               0.371           299          299
    26                                                 []              2          26                           tue oct mtg               0.477            45           45
    27                                                 []              2          27                  conference wed legal               0.592             5            5
    28                                                 []              2          28                meeting trading master               0.431            37           37
    29                                                 []              2          29                    load conf yosemite               0.510            22           22
    30                                                 []              2          30                         nov tenet wed               0.506            32           32
    31                                                 []              2          31                         thu oct tenet               0.583            26           26
    32                                                 []              2          32                          nov thu meet               0.569            29           29
    33                                                 []              2          33                          fri nov test               0.494            46           46
    34                                                 []              2          34                         wed tenet oct               0.475            57           57
    35                                   [36, 37, 38, 39]              1          35       recipients administrative group               0.402           166          166
    36                                                 []              2          36                  forster shults davis               0.589            34           34
    37                                                 []              2          37                  marcelo tozzini afac               0.542            20           20
    38                                                 []              2          38                     calo dinner teneo               0.496            43           43
    39                                                 []              2          39        recipients administrative test               0.521            69           69
    40  [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 5...              1          40                 sanders migration mon               0.311           868          868
    41                                                 []              2          41               enrononline trade sager               0.467            38           38
    42                                                 []              2          42                  kean marcelo tozzini               0.482            59           59
    43                                                 []              2          43               transaction party price               0.474           111          111
    44                                                 []              2          44                      tana jones enron               0.513            67           67
    45                                                 []              2          45                      lunch lafuze otc               0.516            43           43
    46                                                 []              2          46                      sanders nov usvi               0.501            94           94
    47                                                 []              2          47                     ruppert exxon ect               0.418            92           92
    48                                                 []              2          48                       eb3325 meet mon               0.528            32           32
    49                                                 []              2          49                  meeting tenet budget               0.486            36           36
    50                                                 []              2          50    ricafrente ricafrente_david eb3325               0.530            55           55
    51                                                 []              2          51                 meeting kincannon ena               0.454            55           55
    52                                                 []              2          52                  conference tenet fri               0.519            20           20
    53                                                 []              2          53  enron_development meeting conference               0.561            38           38
    54                                                 []              2          54                migration outlook team               0.503            87           87
    55                                                 []              2          55                         enron mtg gtc               0.433            41           41

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/a74d59eb11a142a0
        .. computed in 0.6s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            0               0.455           112  [{'document_id': 293764, 'similarity': 0.45546...
    1            1               0.474           111  [{'document_id': 5267025, 'similarity': 0.4739...
    2            2               0.501            94  [{'document_id': 3968064, 'similarity': 0.5013...
    3            3               0.418            92  [{'document_id': 1625625, 'similarity': 0.4175...
    4            4               0.503            87  [{'document_id': 5326864, 'similarity': 0.5033...
    5            5               0.777            78  [{'document_id': 5041, 'similarity': 0.7774041...
    6            6               0.460            77  [{'document_id': 45796, 'similarity': 0.460443...
    7            7               0.586            72  [{'document_id': 11025, 'similarity': 0.585524...
    8            8               0.521            69  [{'document_id': 855625, 'similarity': 0.52058...
    9            9               0.433            68  [{'document_id': 4765489, 'similarity': 0.4333...
    10          10               0.481            67  [{'document_id': 583696, 'similarity': 0.48062...
    11          11               0.513            67  [{'document_id': 1990921, 'similarity': 0.5128...
    12          12               0.592            63  [{'document_id': 2992900, 'similarity': 0.5920...
    13          13               0.469            60  [{'document_id': 4165681, 'similarity': 0.4685...
    14          14               0.482            59  [{'document_id': 99856, 'similarity': 0.481598...
    15          15               0.475            57  [{'document_id': 2313441, 'similarity': 0.4751...
    16          16               0.530            55  [{'document_id': 2471184, 'similarity': 0.5303...
    17          17               0.454            55  [{'document_id': 2647129, 'similarity': 0.4544...
    18          18               0.545            54  [{'document_id': 4884100, 'similarity': 0.5449...
    19          19               0.499            50  [{'document_id': 2024929, 'similarity': 0.4989...
    20          20               0.462            49  [{'document_id': 4866436, 'similarity': 0.4624...
    21          21               0.465            48  [{'document_id': 219024, 'similarity': 0.46451...
    22          22               0.569            46  [{'document_id': 380689, 'similarity': 0.56887...
    23          23               0.494            46  [{'document_id': 2356225, 'similarity': 0.4938...
    24          24               0.610            45  [{'document_id': 207025, 'similarity': 0.61026...
    25          25               0.477            45  [{'document_id': 195364, 'similarity': 0.47749...
    26          26               0.453            44  [{'document_id': 1134225, 'similarity': 0.4529...
    27          27               0.507            44  [{'document_id': 4541161, 'similarity': 0.5070...
    28          28               0.555            44  [{'document_id': 797449, 'similarity': 0.55525...
    29          29               0.496            43  [{'document_id': 3783025, 'similarity': 0.4957...
    30          30               0.516            43  [{'document_id': 4235364, 'similarity': 0.5162...
    31          31               0.433            41  [{'document_id': 1934881, 'similarity': 0.4330...
    32          32               0.467            38  [{'document_id': 3363556, 'similarity': 0.4669...
    33          33               0.561            38  [{'document_id': 37636, 'similarity': 0.561106...
    34          34               0.431            37  [{'document_id': 2119936, 'similarity': 0.4312...
    35          35               0.486            36  [{'document_id': 3052009, 'similarity': 0.4864...
    36          36               0.589            34  [{'document_id': 184041, 'similarity': 0.58875...
    37          37               0.511            32  [{'document_id': 64516, 'similarity': 0.511367...
    38          38               0.442            32  [{'document_id': 466489, 'similarity': 0.44181...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/7789743d45234a75




|


.. code-block:: python


    import os.path
    import numpy as np
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])} \
                                   for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {'dataset_definition': dataset_definition,
               'use_idf': 1, 'n_features': 30001,
               'min_df': 4, 'max_df': 0.75 # filter out unfrequent / too frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url)

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items() \
                                                      if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 100
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print('  => SVD decomposition with {} dimensions explaining {:.2f} % variabilty of the data'.format(
                            n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              #'min_similarity': 0.95,
                              'branching_factor': 20 
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.421 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
