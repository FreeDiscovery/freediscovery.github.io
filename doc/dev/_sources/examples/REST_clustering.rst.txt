

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['filenames', 'id']
       => dsid = 2726ad0e39ce4dc4

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/2726ad0e39ce4dc4

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/2726ad0e39ce4dc4
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: ../freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 0.75
         - min_df: 4.0
         - n_features: 30001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: True

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 52fb013d08654f1c
      => SVD decomposition with 100 dimensions explaining 53.29 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 768089c0683a4929

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/768089c0683a4929
        .. computed in 1.8s
       cluster_id                     cluster_label  cluster_similarity  cluster_size  n_documents
    0           0             shall party agreement               0.526           114          114
    1           1                     ect teneo hou               0.352           383          383
    2           2            rewrite server address               1.000            56           56
    3           3            energy market services               0.488           132          132
    4           4                   sanders nov mon               0.560            90           90
    5           5                     wed tenet oct               0.456           141          141
    6           6                    nemec doc load               0.327           481          481
    7           7                   ect update week               0.338           441          441
    8           8            migration outlook team               0.362           377          377
    9           9  enron dasovich enron_development               0.369           250          250

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 995f34d7e5554b82

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/995f34d7e5554b82
        .. computed in 3.0s
                                                 children  cluster_depth  cluster_id                     cluster_label  cluster_similarity  cluster_size  n_documents
    0                                  [1, 3, 24, 31, 34]              0           0                      test ect oct               0.294          2465         2465
    1                                                 [2]              1           1            rewrite server address               0.781            78           78
    2                                                  []              2           2            rewrite server address               0.781            78           78
    3   [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,...              1           3                   ect nov sanders               0.309          1009         1009
    4                                                  []              2           4     enron_development cone issues               0.585            51           51
    5                                                  []              2           5                   flynn isda smud               0.474            59           59
    6                                                  []              2           6              meeting attorney fri               0.477            31           31
    7                                                  []              2           7            gtc master enrononline               0.437            45           45
    8                                                  []              2           8       dupre catalytica shackleton               0.483            39           39
    9                                                  []              2           9      conference advice shackleton               0.449            47           47
    10                                                 []              2          10  shackleton shackleton_sara teneo               0.516            19           19
    11                                                 []              2          11         dasovich deseret etringer               0.452           102          102
    12                                                 []              2          12           nemec ruppert gillaspie               0.425           113          113
    13                                                 []              2          13          shackleton indices chase               0.468            27           27
    14                                                 []              2          14                     ect hou taffy               0.524            88           88
    15                                                 []              2          15            cat interconnect urine               0.457            46           46
    16                                                 []              2          16                 sanders nov lunch               0.568            64           64
    17                                                 []              2          17                  enron tana jones               0.536            31           31
    18                                                 []              2          18                 meeting mon tenet               0.476            63           63
    19                                                 []              2          19             tenet davidson brazil               0.447            41           41
    20                                                 []              2          20                   bump hyvl yates               0.568            40           40
    21                                                 []              2          21                nov haedicke tenet               0.424            41           41
    22                                                 []              2          22           kincannon ellis library               0.519            33           33
    23                                                 []              2          23                     mtg tenet nov               0.536            29           29
    24                           [25, 26, 27, 28, 29, 30]              1          24            migration outlook team               0.362           206          206
    25                                                 []              2          25      enron_development gdr credit               0.603            26           26
    26                                                 []              2          26                   fri teneo power               0.447            39           39
    27                                                 []              2          27                   gtc online tana               0.593            19           19
    28                                                 []              2          28                     wed oct tenet               0.531            30           30
    29                                                 []              2          29              forster shults teneo               0.515            37           37
    30                                                 []              2          30            migration outlook team               0.499            55           55
    31                                           [32, 33]              1          31                   ena lunch trade               0.429            66           66
    32                                                 []              2          32                      ena rmt swap               0.624            25           25
    33                                                 []              2          33             lunch energy services               0.462            41           41
    34  [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 4...              1          34           test oct administrative               0.310          1106         1106
    35                                                 []              2          35            hendry marcelo tozzini               0.454            97           97
    36                                                 []              2          36                 berkeley haas edu               0.419           100          100
    37                                                 []              2          37                  nemec doc gallup               0.485            46           46
    38                                                 []              2          38                      mon oct lyco               0.491            26           26
    39                                                 []              2          39   recipients administrative group               0.493            49           49
    40                                                 []              2          40                 shall party tiger               0.452           159          159
    41                                                 []              2          41                    enron rcr corp               0.450            54           54
    42                                                 []              2          42   ricafrente_david ricafrente tue               0.483            36           36
    43                                                 []              2          43         haedicke sager labanowski               0.499            59           59
    44                                                 []              2          44              party online trading               0.537            17           17
    45                                                 []              2          45                    lon load awais               0.458            55           55
    46                                                 []              2          46                jones tana lambert               0.532            49           49
    47                                                 []              2          47             sampling message bret               0.530            25           25
    48                                                 []              2          48                       wed mtg oct               0.480            34           34
    49                                                 []              2          49            eb3325 meet ricafrente               0.483            66           66
    50                                                 []              2          50             wed migration outlook               0.459            59           59
    51                                                 []              2          51                      kean tue oct               0.515            48           48
    52                                                 []              2          52               lunch power foreign               0.513            37           37
    53                                                 []              2          53                 amoco bowen dupre               0.463            50           50
    54                                                 []              2          54                     thu oct tenet               0.541            40           40

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/995f34d7e5554b82
        .. computed in 0.6s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            0               0.452           159  [{'document_id': 299209, 'similarity': 0.45151...
    1            1               0.425           113  [{'document_id': 636804, 'similarity': 0.42543...
    2            2               0.452           102  [{'document_id': 583696, 'similarity': 0.45161...
    3            3               0.419           100  [{'document_id': 417316, 'similarity': 0.41924...
    4            4               0.454            97  [{'document_id': 3600, 'similarity': 0.4535738...
    5            5               0.524            88  [{'document_id': 3556996, 'similarity': 0.5238...
    6            6               0.781            78  [{'document_id': 5041, 'similarity': 0.7806846...
    7            7               0.483            66  [{'document_id': 2464900, 'similarity': 0.4834...
    8            8               0.568            64  [{'document_id': 3984016, 'similarity': 0.5677...
    9            9               0.476            63  [{'document_id': 5978025, 'similarity': 0.4764...
    10          10               0.474            59  [{'document_id': 19600, 'similarity': 0.473751...
    11          11               0.499            59  [{'document_id': 2930944, 'similarity': 0.4986...
    12          12               0.459            59  [{'document_id': 5452225, 'similarity': 0.4592...
    13          13               0.499            55  [{'document_id': 5866084, 'similarity': 0.4994...
    14          14               0.458            55  [{'document_id': 1205604, 'similarity': 0.4583...
    15          15               0.450            54  [{'document_id': 664225, 'similarity': 0.45001...
    16          16               0.585            51  [{'document_id': 625, 'similarity': 0.58532184...
    17          17               0.463            50  [{'document_id': 4239481, 'similarity': 0.4631...
    18          18               0.493            49  [{'document_id': 3418801, 'similarity': 0.4927...
    19          19               0.532            49  [{'document_id': 215296, 'similarity': 0.53173...
    20          20               0.515            48  [{'document_id': 5697769, 'similarity': 0.5153...
    21          21               0.449            47  [{'document_id': 26244, 'similarity': 0.449144...
    22          22               0.457            46  [{'document_id': 777924, 'similarity': 0.45696...
    23          23               0.485            46  [{'document_id': 613089, 'similarity': 0.48539...
    24          24               0.437            45  [{'document_id': 3348900, 'similarity': 0.4373...
    25          25               0.447            41  [{'document_id': 2241009, 'similarity': 0.4472...
    26          26               0.424            41  [{'document_id': 2893401, 'similarity': 0.4236...
    27          27               0.462            41  [{'document_id': 160801, 'similarity': 0.46244...
    28          28               0.568            40  [{'document_id': 300304, 'similarity': 0.56827...
    29          29               0.541            40  [{'document_id': 1752976, 'similarity': 0.5406...
    30          30               0.483            39  [{'document_id': 519841, 'similarity': 0.48316...
    31          31               0.447            39  [{'document_id': 373321, 'similarity': 0.44710...
    32          32               0.515            37  [{'document_id': 3678724, 'similarity': 0.5152...
    33          33               0.513            37  [{'document_id': 576081, 'similarity': 0.51301...
    34          34               0.483            36  [{'document_id': 6027025, 'similarity': 0.4828...
    35          35               0.480            34  [{'document_id': 3452164, 'similarity': 0.4802...
    36          36               0.519            33  [{'document_id': 2446096, 'similarity': 0.5194...
    37          37               0.477            31  [{'document_id': 36481, 'similarity': 0.477231...
    38          38               0.536            31  [{'document_id': 2076481, 'similarity': 0.5358...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/2726ad0e39ce4dc4




|


.. code-block:: python


    import os.path
    import numpy as np
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])} \
                                   for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {'dataset_definition': dataset_definition,
               'use_idf': 1, 'n_features': 30001,
               'min_df': 4, 'max_df': 0.75 # filter out unfrequent / too frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url)

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items() \
                                                      if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 100
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print('  => SVD decomposition with {} dimensions explaining {:.2f} % variabilty of the data'.format(
                            n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              #'min_similarity': 0.95,
                              'branching_factor': 20 
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.449 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
