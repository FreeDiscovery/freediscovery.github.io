

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 29a9d8420b7c4f89

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/29a9d8420b7c4f89

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/29a9d8420b7c4f89
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 82194af794c74b92
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 551aa805a26f4b0f

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/551aa805a26f4b0f
        .. computed in 1.3s
       cluster_id                    cluster_label  cluster_similarity  cluster_size  n_documents
    0           0                  thu normal test               0.092           643          643
    1           1                 mtg tenet normal               0.189           239          239
    2           2                   fri tenet test               0.196           222          222
    3           3         shall services agreement               0.387           100          100
    4           4               lunch normal teneo               0.305           140          140
    5           5  ricafrente ricafrente_david wed               0.217           224          224
    6           6           transaction party isda               0.292           129          129
    7           7                  mon normal test               0.208           198          198
    8           8           rewrite address server               1.000            56           56
    9           9                    ect hou group               0.127           514          514

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = e96ca605ca1e4d48

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/e96ca605ca1e4d48
        .. computed in 2.1s
                                                 children  cluster_depth  cluster_id                        cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 8, 10, 18, 20, 22, 27, 32, 34, 36, 38, ...              0           0                      normal test ect               0.071          2465         2465
    1                                                 [2]              1           1               rewrite address server               0.805            70           70
    2                                                  []              2           2               rewrite address server               0.805            70           70
    3                                        [4, 5, 6, 7]              1           3                 shackleton calo test               0.292            82           82
    4                                                  []              2           4                calo shackleton tiger               0.408            32           32
    5                                                  []              2           5                    deal aquilla muni               0.656            13           13
    6                                                  []              2           6                 shackleton test load               0.438            29           29
    7                                                  []              2           7                 meet shackleton load               0.509             8            8
    8                                                 [9]              1           8   enron_development deseret etringer               0.476            35           35
    9                                                  []              2           9   enron_development deseret etringer               0.476            35           35
    10                       [11, 12, 13, 14, 15, 16, 17]              1          10                        ect hou teneo               0.234           204          204
    11                                                 []              2          11                        ect hou ellis               0.406            71           71
    12                                                 []              2          12         kean class enron_development               0.327            32           32
    13                                                 []              2          13                         ena swap rmt               0.665            16           16
    14                                                 []              2          14                      san meter diego               0.441            14           14
    15                                                 []              2          15                        tva ense enna               1.000             1            1
    16                                                 []              2          16                    load teneo normal               0.486            42           42
    17                                                 []              2          17                     oct teneo normal               0.585            28           28
    18                                               [19]              1          18           cash collateral perfection               0.599            13           13
    19                                                 []              2          19           cash collateral perfection               0.599            13           13
    20                                               [21]              1          20          attached compressor include               0.545            10           10
    21                                                 []              2          21          attached compressor include               0.545            10           10
    22                                   [23, 24, 25, 26]              1          22                       jones tana gtc               0.192           160          160
    23                                                 []              2          23                     tax smud foreign               0.383            37           37
    24                                                 []              2          24                   online gtc houston               0.408            19           19
    25                                                 []              2          25                    tana jones master               0.314            54           54
    26                                                 []              2          26                      jones tana isda               0.309            50           50
    27                                   [28, 29, 30, 31]              1          27             shall agreement services               0.246           166          166
    28                                                 []              2          28                        serc bar nerc               0.361            18           18
    29                                                 []              2          29             services energy berkeley               0.434            20           20
    ..                                                ...            ...         ...                                  ...                 ...           ...          ...
    70                                                 []              2          70              transaction party price               0.362            87           87
    71                                                 []              2          71                 trading enron online               0.408            12           12
    72                                                 []              2          72                enron haedicke energy               0.298            33           33
    73                                                 []              2          73         sweet twanda americancentury               0.257            43           43
    74                                                 []              2          74                message sweet milbank               0.466             9            9
    75                                       [76, 77, 78]              1          75   eb3325 ricafrente ricafrente_david               0.339            61           61
    76                                                 []              2          76   ricafrente ricafrente_david eb3325               0.459            38           38
    77                                                 []              2          77                elbertson eb3325 meet               0.462            11           11
    78                                                 []              2          78                       eb3325 tue nov               0.371            12           12
    79  [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 9...              1          79       shackleton_sara team migration               0.101           611          611
    80                                                 []              2          80                  issues cone bertone               0.298            72           72
    81                                                 []              2          81             november tozzini marcelo               0.333            53           53
    82                                                 []              2          82                    heard hendry duke               0.371            28           28
    83                                                 []              2          83       enrononline customers internet               0.364            40           40
    84                                                 []              2          84                 section mexico notes               0.353            19           19
    85                                                 []              2          85            project information draft               0.371            26           26
    86                                                 []              2          86                         lay new data               0.383            16           16
    87                                                 []              2          87                     dead horse power               0.358            34           34
    88                                                 []              2          88               kincannon lunch normal               0.418            29           29
    89                                                 []              2          89                      lon ect forster               0.337            41           41
    90                                                 []              2          90                  dickson bockius eol               0.372            24           24
    91                                                 []              2          91                       kean urine cat               0.291            34           34
    92                                                 []              2          92                     party bump enron               0.312            31           31
    93                                                 []              2          93                   budget room dining               0.395            25           25
    94                                                 []              2          94         ellis update shackleton_sara               0.374            14           14
    95                                                 []              2          95     lunch shackleton_sara authorized               0.409            13           13
    96                                                 []              2          96          shackleton_sara teneo class               0.367            20           20
    97                                                 []              2          97  shackleton_sara guaranty catalytica               0.366            28           28
    98                                                 []              2          98               brazil outlook account               0.455            13           13
    99                                                 []              2          99               migration outlook team               0.437            51           51

    [100 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/e96ca605ca1e4d48
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           70               0.362            87  [{'document_id': 168921, 'similarity': 0.76248...
    1           30               0.338            80  [{'document_id': 298116, 'similarity': 0.74960...
    2           80               0.298            72  [{'document_id': 131769, 'similarity': 0.68033...
    3           11               0.406            71  [{'document_id': 11236, 'similarity': 0.770406...
    4            2               0.805            70  [{'document_id': 5041, 'similarity': 0.9932383...
    5           25               0.314            54  [{'document_id': 1098304, 'similarity': 0.5866...
    6           81               0.333            53  [{'document_id': 3717184, 'similarity': 0.6084...
    7           53               0.302            52  [{'document_id': 1232100, 'similarity': 0.5318...
    8           99               0.437            51  [{'document_id': 5808100, 'similarity': 0.6101...
    9           26               0.309            50  [{'document_id': 277729, 'similarity': 0.49931...
    10          47               0.448            50  [{'document_id': 154449, 'similarity': 0.75954...
    11          31               0.517            48  [{'document_id': 609961, 'similarity': 0.82884...
    12          69               0.382            48  [{'document_id': 27889, 'similarity': 0.566433...
    13          52               0.305            47  [{'document_id': 366025, 'similarity': 0.64628...
    14          73               0.257            43  [{'document_id': 3857296, 'similarity': 0.4436...
    15          16               0.486            42  [{'document_id': 846400, 'similarity': 0.63442...
    16          89               0.337            41  [{'document_id': 3690241, 'similarity': 0.5486...
    17          48               0.453            40  [{'document_id': 3802500, 'similarity': 0.6509...
    18          65               0.361            40  [{'document_id': 1918225, 'similarity': 0.5868...
    19          83               0.364            40  [{'document_id': 2059225, 'similarity': 0.5571...
    20          45               0.382            39  [{'document_id': 1420864, 'similarity': 0.5838...
    21          76               0.459            38  [{'document_id': 2689600, 'similarity': 0.6523...
    22          23               0.383            37  [{'document_id': 4624, 'similarity': 0.6986931...
    23          60               0.373            36  [{'document_id': 2190400, 'similarity': 0.7760...
    24           9               0.476            35  [{'document_id': 33124, 'similarity': 0.732122...
    25          57               0.449            34  [{'document_id': 2169729, 'similarity': 0.7629...
    26          58               0.293            34  [{'document_id': 5354596, 'similarity': 0.4413...
    27          67               0.315            34  [{'document_id': 1399489, 'similarity': 0.5043...
    28          87               0.358            34  [{'document_id': 1060900, 'similarity': 0.5485...
    29          91               0.291            34  [{'document_id': 6002500, 'similarity': 0.5442...
    ..         ...                 ...           ...                                                ...
    31           4               0.408            32  [{'document_id': 12321, 'similarity': 0.785669...
    32          12               0.327            32  [{'document_id': 162409, 'similarity': 0.53456...
    33          61               0.422            32  [{'document_id': 1774224, 'similarity': 0.6169...
    34          92               0.312            31  [{'document_id': 1690000, 'similarity': 0.5966...
    35           6               0.438            29  [{'document_id': 62001, 'similarity': 0.622538...
    36          54               0.431            29  [{'document_id': 2334784, 'similarity': 0.7876...
    37          88               0.418            29  [{'document_id': 2647129, 'similarity': 0.7275...
    38          17               0.585            28  [{'document_id': 358801, 'similarity': 0.77763...
    39          40               0.443            28  [{'document_id': 1664100, 'similarity': 0.7247...
    40          42               0.351            28  [{'document_id': 720801, 'similarity': 0.61516...
    41          56               0.375            28  [{'document_id': 1811716, 'similarity': 0.6079...
    42          63               0.395            28  [{'document_id': 2679769, 'similarity': 0.5585...
    43          82               0.371            28  [{'document_id': 108900, 'similarity': 0.56325...
    44          97               0.366            28  [{'document_id': 5244100, 'similarity': 0.5548...
    45          85               0.371            26  [{'document_id': 331776, 'similarity': 0.52191...
    46          55               0.367            25  [{'document_id': 3740356, 'similarity': 0.5937...
    47          93               0.395            25  [{'document_id': 2405601, 'similarity': 0.7312...
    48          64               0.486            24  [{'document_id': 3455881, 'similarity': 0.7804...
    49          90               0.372            24  [{'document_id': 3732624, 'similarity': 0.5617...
    50          39               0.333            22  [{'document_id': 124609, 'similarity': 0.48544...
    51          66               0.337            22  [{'document_id': 1915456, 'similarity': 0.5602...
    52          41               0.356            21  [{'document_id': 687241, 'similarity': 0.48046...
    53          62               0.321            21  [{'document_id': 2421136, 'similarity': 0.5129...
    54          29               0.434            20  [{'document_id': 160801, 'similarity': 0.69239...
    55          96               0.367            20  [{'document_id': 4879681, 'similarity': 0.5018...
    56          24               0.408            19  [{'document_id': 176400, 'similarity': 0.60668...
    57          33               0.459            19  [{'document_id': 2913849, 'similarity': 0.5599...
    58          37               0.548            19  [{'document_id': 1119364, 'similarity': 0.8725...
    59          84               0.353            19  [{'document_id': 555025, 'similarity': 0.48323...
    60          28               0.361            18  [{'document_id': 152100, 'similarity': 0.50154...

    [61 rows x 4 columns]

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/29a9d8420b7c4f89




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.788 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
