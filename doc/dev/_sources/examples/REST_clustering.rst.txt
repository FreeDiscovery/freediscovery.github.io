

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = e7e42439a3a04b69

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/e7e42439a3a04b69

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/e7e42439a3a04b69
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = fae6c914075c44c5
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 3c35904b3ecc4d97

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/3c35904b3ecc4d97
        .. computed in 1.2s
       cluster_id                    cluster_label  cluster_similarity  cluster_size  n_documents
    0           0      dasovich enrononline brazil               0.213           176          176
    1           1               wed sanders normal               0.192           203          203
    2           2   normal teneo enron_development               0.316           144          144
    3           3                    fri tenet oct               0.181           280          280
    4           4  group administrative recipients               0.077          1107         1107
    5           5                   thu budget mtg               0.242           163          163
    6           6            shall party agreement               0.431           103          103
    7           7                  eb3325 tue meet               0.301           132          132
    8           8           rewrite address server               1.000            56           56
    9           9                   ect hou advice               0.357           101          101

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = f63049a574924d77

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/f63049a574924d77
        .. computed in 2.2s
                                                  children  cluster_depth  cluster_id                       cluster_label  cluster_similarity  cluster_size  n_documents
    0    [1, 3, 10, 14, 21, 28, 30, 33, 40, 45, 50, 52,...              0           0                     normal test ect               0.071          2465         2465
    1                                                  [2]              1           1              rewrite address server               0.670            86           86
    2                                                   []              2           2              rewrite address server               0.670            86           86
    3                                   [4, 5, 6, 7, 8, 9]              1           3                   load jones normal               0.312           127          127
    4                                                   []              2           4                   gtc jones revised               0.487             9            9
    5                                                   []              2           5                 jones tana approved               0.362            30           30
    6                                                   []              2           6            amoco jefferson sorenson               0.555            10           10
    7                                                   []              2           7                   weather stack got               1.000             1            1
    8                                                   []              2           8                      load teneo fri               0.518            45           45
    9                                                   []              2           9                    teneo thu normal               0.496            32           32
    10                                        [11, 12, 13]              1          10                 shackleton ect test               0.268            83           83
    11                                                  []              2          11              cash shackleton sample               0.354            34           34
    12                                                  []              2          12                 shackleton ect corp               0.461            33           33
    13                                                  []              2          13                    class flynn smud               0.425            16           16
    14                            [15, 16, 17, 18, 19, 20]              1          14                      mtg ena budget               0.188           217          217
    15                                                  []              2          15                        ena swap rmt               0.439            30           30
    16                                                  []              2          16                      aven week memo               0.547            10           10
    17                                                  []              2          17                dasovich budget room               0.274            65           65
    18                                                  []              2          18                      urine cat odor               0.322            28           28
    19                                                  []              2          19               mtg migration outlook               0.515            26           26
    20                                                  []              2          20                mtg november tozzini               0.392            58           58
    21                            [22, 23, 24, 25, 26, 27]              1          21                    shall test party               0.196           289          289
    22                                                  []              2          22       enron_development issues cone               0.399            46           46
    23                                                  []              2          23                 brazil library deal               0.374            21           21
    24                                                  []              2          24             party transaction shall               0.448            56           56
    25                                                  []              2          25             nicolay sager ingersoll               0.448            27           27
    26                                                  []              2          26          shall agreement facilities               0.425            72           72
    27                                                  []              2          27                test kean recipients               0.329            67           67
    28                                                [29]              1          28                       usvi bvi pier               0.633            14           14
    29                                                  []              2          29                       usvi bvi pier               0.633            14           14
    ..                                                 ...            ...         ...                                 ...                 ...           ...          ...
    71                                        [72, 73, 74]              1          71              eb3325 meet ricafrente               0.293            97           97
    72                                                  []              2          72                    meet lunch tenet               0.447            14           14
    73                                                  []              2          73             wed houston midamerican               0.297            23           23
    74                                                  []              2          74              eb3325 meet ricafrente               0.426            60           60
    75                                                [76]              1          75                     lunch time fund               0.493             7            7
    76                                                  []              2          76                     lunch time fund               0.493             7            7
    77   [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 8...              1          77    enron_development teneo haedicke               0.097           580          580
    78                                                  []              2          78                   deal aquilla muni               0.385            34           34
    79                                                  []              2          79                   haas berkeley edu               0.386            27           27
    80                                                  []              2          80                    price tiger isda               0.400            33           33
    81                                                  []              2          81  enron_development trade shackleton               0.349            62           62
    82                                                  []              2          82                rcr energy resources               0.357            23           23
    83                                                  []              2          83             subject townsend sounds               0.394            27           27
    84                                                  []              2          84                    list bruns gibbs               0.382            26           26
    85                                                  []              2          85                      nemec bump bar               0.331            39           39
    86                                                  []              2          86              training midland nmoga               0.328            21           21
    87                                                  []              2          87         conference haedicke keohane               0.519             7            7
    88                                                  []              2          88  enrononline performance management               0.327            39           39
    89                                                  []              2          89              migration outlook team               0.280            35           35
    90                                                  []              2          90              thanks nemec deadhorse               0.337            25           25
    91                                                  []              2          91            tiger period transaction               0.353            39           39
    92                                                  []              2          92               message teneo milbank               0.344            35           35
    93                                                  []              2          93                  nemec come ruppert               0.331            21           21
    94                                                  []              2          94             haedicke kincannon serc               0.312            56           56
    95                                                  []              2          95             master eta counterparty               0.424            31           31
    96                                   [97, 98, 99, 100]              1          96    shackleton_sara teneo shackleton               0.271            71           71
    97                                                  []              2          97      teneo language shackleton_sara               0.335            18           18
    98                                                  []              2          98   conference shackleton_sara twanda               0.550             4            4
    99                                                  []              2          99         shackleton_sara teneo class               0.338            18           18
    100                                                 []              2         100    shackleton_sara shackleton teneo               0.431            31           31

    [101 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/f63049a574924d77
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            2               0.670            86  [{'document_id': 5041, 'similarity': 0.9721427...
    1           26               0.425            72  [{'document_id': 680625, 'similarity': 0.68494...
    2           27               0.329            67  [{'document_id': 527076, 'similarity': 0.69097...
    3           17               0.274            65  [{'document_id': 583696, 'similarity': 0.56824...
    4           81               0.349            62  [{'document_id': 4631104, 'similarity': 0.6227...
    5           74               0.426            60  [{'document_id': 2676496, 'similarity': 0.6194...
    6           20               0.392            58  [{'document_id': 16, 'similarity': 0.542831696...
    7           24               0.448            56  [{'document_id': 165649, 'similarity': 0.85007...
    8           94               0.312            56  [{'document_id': 2913849, 'similarity': 0.4666...
    9           62               0.319            53  [{'document_id': 1893376, 'similarity': 0.4931...
    10          34               0.349            50  [{'document_id': 25921, 'similarity': 0.628144...
    11          22               0.399            46  [{'document_id': 256, 'similarity': 0.70216593...
    12          31               0.398            46  [{'document_id': 207025, 'similarity': 0.66862...
    13           8               0.518            45  [{'document_id': 370881, 'similarity': 0.65600...
    14          64               0.328            45  [{'document_id': 3069504, 'similarity': 0.5488...
    15          49               0.384            42  [{'document_id': 4624, 'similarity': 0.7333072...
    16          43               0.273            41  [{'document_id': 1664100, 'similarity': 0.4818...
    17          39               0.426            40  [{'document_id': 1411344, 'similarity': 0.5959...
    18          85               0.331            39  [{'document_id': 1658944, 'similarity': 0.5426...
    19          88               0.327            39  [{'document_id': 423801, 'similarity': 0.61628...
    20          91               0.353            39  [{'document_id': 53361, 'similarity': 0.736968...
    21          41               0.403            38  [{'document_id': 1117249, 'similarity': 0.5358...
    22          68               0.407            36  [{'document_id': 2334784, 'similarity': 0.7268...
    23          89               0.280            35  [{'document_id': 5499025, 'similarity': 0.4980...
    24          92               0.344            35  [{'document_id': 1404225, 'similarity': 0.6365...
    25          11               0.354            34  [{'document_id': 104976, 'similarity': 0.52779...
    26          61               0.337            34  [{'document_id': 1827904, 'similarity': 0.6070...
    27          78               0.385            34  [{'document_id': 7225, 'similarity': 0.7272104...
    28          12               0.461            33  [{'document_id': 90601, 'similarity': 0.681640...
    29          80               0.400            33  [{'document_id': 21025, 'similarity': 0.575708...
    ..         ...                 ...           ...                                                ...
    31          56               0.415            32  [{'document_id': 3783025, 'similarity': 0.7659...
    32          63               0.360            32  [{'document_id': 2598544, 'similarity': 0.6002...
    33          95               0.424            31  [{'document_id': 3326976, 'similarity': 0.7582...
    34         100               0.431            31  [{'document_id': 4787344, 'similarity': 0.6567...
    35           5               0.362            30  [{'document_id': 277729, 'similarity': 0.55440...
    36          15               0.439            30  [{'document_id': 79524, 'similarity': 0.761483...
    37          36               0.382            30  [{'document_id': 7569, 'similarity': 0.5725161...
    38          54               0.377            30  [{'document_id': 1968409, 'similarity': 0.6512...
    39          57               0.373            30  [{'document_id': 683929, 'similarity': 0.76210...
    40          18               0.322            28  [{'document_id': 456976, 'similarity': 0.47905...
    41          25               0.448            27  [{'document_id': 154449, 'similarity': 0.78438...
    42          79               0.386            27  [{'document_id': 463761, 'similarity': 0.62813...
    43          83               0.394            27  [{'document_id': 697225, 'similarity': 0.67715...
    44          19               0.515            26  [{'document_id': 5522500, 'similarity': 0.7013...
    45          84               0.382            26  [{'document_id': 4000000, 'similarity': 0.5009...
    46          46               0.403            25  [{'document_id': 910116, 'similarity': 0.56967...
    47          59               0.373            25  [{'document_id': 956484, 'similarity': 0.63408...
    48          60               0.359            25  [{'document_id': 1267876, 'similarity': 0.4965...
    49          90               0.337            25  [{'document_id': 790321, 'similarity': 0.49333...
    50          42               0.424            24  [{'document_id': 1879641, 'similarity': 0.7291...
    51          47               0.421            24  [{'document_id': 1162084, 'similarity': 0.5374...
    52          66               0.433            24  [{'document_id': 3094081, 'similarity': 0.7036...
    53          48               0.426            23  [{'document_id': 1042441, 'similarity': 0.6568...
    54          73               0.297            23  [{'document_id': 2196324, 'similarity': 0.4695...
    55          82               0.357            23  [{'document_id': 332929, 'similarity': 0.51047...
    56          38               0.515            22  [{'document_id': 3802500, 'similarity': 0.7076...
    57          23               0.374            21  [{'document_id': 67600, 'similarity': 0.527205...
    58          67               0.510            21  [{'document_id': 3455881, 'similarity': 0.7609...
    59          86               0.328            21  [{'document_id': 879844, 'similarity': 0.58056...
    60          93               0.331            21  [{'document_id': 717409, 'similarity': 0.56741...

    [61 rows x 4 columns]

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/e7e42439a3a04b69




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.680 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
