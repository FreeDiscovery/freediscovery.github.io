

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 5464d89491da4e09

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/5464d89491da4e09

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/5464d89491da4e09
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: english
         - sublinear_tf: False
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 3d99c7ca6c7f4f37
      => SVD decomposition with 300 dimensions explaining 87.16 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 0c4a37ffa631453e

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/0c4a37ffa631453e
        .. computed in 1.3s
       cluster_id              cluster_label  cluster_similarity  cluster_size  n_documents
    0           0      test teneo recipients               0.313           159          159
    1           1  ect hou enron_development               0.342           134          134
    2           2     outlook team migration               0.529            63           63
    3           3           normal lunch oct               0.120           501          501
    4           4         eb3325 meet normal               0.278           169          169
    5           5              thu ect enron               0.081           921          921
    6           6        eta master sampling               0.477            29           29
    7           7             normal mon nov               0.234           235          235
    8           8                fri oct mtg               0.249           198          198
    9           9     rewrite address server               1.000            56           56

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 126d3ba87abe4142

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/126d3ba87abe4142
        .. computed in 2.2s
                                                 children  cluster_depth  cluster_id                     cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 5, 7, 10, 17, 19, 25, 37, 39, 41, 53, 6...              0           0                   normal test ect               0.074          2465         2465
    1                                                 [2]              1           1   enron_development committee esa               0.623            27           27
    2                                                  []              2           2   enron_development committee esa               0.623            27           27
    3                                                 [4]              1           3            rewrite address server               0.827            68           68
    4                                                  []              2           4            rewrite address server               0.827            68           68
    5                                                 [6]              1           5                      ena swap rmt               0.479            25           25
    6                                                  []              2           6                      ena swap rmt               0.479            25           25
    7                                              [8, 9]              1           7                      ect hou haas               0.382           102          102
    8                                                  []              2           8                 berkeley haas edu               0.361            30           30
    9                                                  []              2           9                     ect hou ellis               0.498            72           72
    10                           [11, 12, 13, 14, 15, 16]              1          10    test administrative recipients               0.244           187          187
    11                                                 []              2          11                  doc memo bertone               0.446            16           16
    12                                                 []              2          12                 jones tana shults               0.443            20           20
    13                                                 []              2          13                   jones tana load               0.378            24           24
    14                                                 []              2          14             test teneo recipients               0.379            67           67
    15                                                 []              2          15                    tana jones fam               0.402            15           15
    16                                                 []              2          16    test administrative recipients               0.422            45           45
    17                                               [18]              1          17             calo wednesday people               0.595            19           19
    18                                                 []              2          18             calo wednesday people               0.595            19           19
    19                               [20, 21, 22, 23, 24]              1          19                  load test normal               0.265           175          175
    20                                                 []              2          20              shackleton load calo               0.409            14           14
    21                                                 []              2          21              load kean shackleton               0.388            33           33
    22                                                 []              2          22                 load normal teneo               0.448            45           45
    23                                                 []              2          23       sanders conference operator               0.288            49           49
    24                                                 []              2          24                   oct test normal               0.444            34           34
    25       [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]              1          25                     nemec ect doc               0.123           443          443
    26                                                 []              2          26                    gtc online eta               0.375            41           41
    27                                                 []              2          27     enron_development issues cone               0.376            51           51
    28                                                 []              2          28               lessee master shall               0.355            49           49
    29                                                 []              2          29            ruppert exxon customer               0.361            57           57
    ..                                                ...            ...         ...                               ...                 ...           ...          ...
    56                                                 []              2          56   ricafrente_david ricafrente fri               0.441            17           17
    57                                                 []              2          57                    diego san lyco               0.389            16           16
    58                                                 []              2          58             kincannon state lunch               0.352            41           41
    59                                                 []              2          59               dasovich urine odor               0.298            51           51
    60                                                 []              2          60                 stay motion bruns               0.413            13           13
    61                                                 []              2          61                    thu oct normal               0.323            69           69
    62                                                 []              2          62                growth economy new               0.333            25           25
    63                                                 []              2          63                   hyvl bump think               0.339            35           35
    64                                                 []              2          64      deseret etringer enrononline               0.358            41           41
    65                                                 []              2          65                 kean party normal               0.333            24           24
    66                                                 []              2          66              advice update mexico               0.455            26           26
    67                                                 []              2          67            outlook migration team               0.443            46           46
    68                                               [69]              1          68          haedicke operator normal               0.458            35           35
    69                                                 []              2          69          haedicke operator normal               0.458            35           35
    70                                   [71, 72, 73, 74]              1          70                   clair ect awais               0.208           111          111
    71                                                 []              2          71           awais final description               0.385            27           27
    72                                                 []              2          72            list setoff restricted               0.408            16           16
    73                                                 []              2          73           clair registration boyd               0.360            37           37
    74                                                 []              2          74  usvi americancentury midamerican               0.380            31           31
    75           [76, 77, 78, 79, 80, 81, 82, 83, 84, 85]              1          75               normal tenet eb3325               0.149           358          358
    76                                                 []              2          76          harris account brokerage               0.377            45           45
    77                                                 []              2          77              sampling shall owner               0.358            30           30
    78                                                 []              2          78                    budget fri nov               0.393            34           34
    79                                                 []              2          79                mtg pcb conference               0.357            19           19
    80                                                 []              2          80            eb3325 meet ricafrente               0.387            58           58
    81                                                 []              2          81                  tenet normal oct               0.343            52           52
    82                                                 []              2          82              conference tue tenet               0.308            27           27
    83                                                 []              2          83             tue transaction shall               0.356            32           32
    84                                                 []              2          84                sager haedicke mtg               0.409            31           31
    85                                                 []              2          85               sanders room normal               0.299            30           30

    [86 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/126d3ba87abe4142
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            9               0.498            72  [{'document_id': 11236, 'similarity': 0.871043...
    1           61               0.323            69  [{'document_id': 3236401, 'similarity': 0.6585...
    2            4               0.827            68  [{'document_id': 5041, 'similarity': 0.9957160...
    3           14               0.379            67  [{'document_id': 2149156, 'similarity': 0.6831...
    4           80               0.387            58  [{'document_id': 2869636, 'similarity': 0.6086...
    5           29               0.361            57  [{'document_id': 1664100, 'similarity': 0.6008...
    6           54               0.340            55  [{'document_id': 4372281, 'similarity': 0.6196...
    7           42               0.329            53  [{'document_id': 168921, 'similarity': 0.68046...
    8           81               0.343            52  [{'document_id': 2313441, 'similarity': 0.6604...
    9           27               0.376            51  [{'document_id': 4165681, 'similarity': 0.6282...
    10          59               0.298            51  [{'document_id': 583696, 'similarity': 0.62814...
    11          44               0.370            50  [{'document_id': 3549456, 'similarity': 0.6321...
    12          23               0.288            49  [{'document_id': 1317904, 'similarity': 0.5865...
    13          28               0.355            49  [{'document_id': 1567504, 'similarity': 0.6157...
    14          30               0.405            49  [{'document_id': 710649, 'similarity': 0.70807...
    15          55               0.359            49  [{'document_id': 20736, 'similarity': 0.541691...
    16          67               0.443            46  [{'document_id': 5973136, 'similarity': 0.6562...
    17          16               0.422            45  [{'document_id': 1132096, 'similarity': 0.8570...
    18          22               0.448            45  [{'document_id': 370881, 'similarity': 0.60612...
    19          76               0.377            45  [{'document_id': 4596736, 'similarity': 0.6457...
    20          52               0.401            44  [{'document_id': 2253001, 'similarity': 0.6177...
    21          45               0.382            43  [{'document_id': 3587236, 'similarity': 0.6000...
    22          26               0.375            41  [{'document_id': 1052676, 'similarity': 0.5972...
    23          36               0.392            41  [{'document_id': 53824, 'similarity': 0.641776...
    24          58               0.352            41  [{'document_id': 2611456, 'similarity': 0.6243...
    25          64               0.358            41  [{'document_id': 82369, 'similarity': 0.709728...
    26          48               0.431            40  [{'document_id': 2076481, 'similarity': 0.7684...
    27          34               0.328            37  [{'document_id': 1731856, 'similarity': 0.5987...
    28          43               0.344            37  [{'document_id': 116964, 'similarity': 0.51209...
    29          73               0.360            37  [{'document_id': 3150625, 'similarity': 0.5199...
    30          35               0.280            36  [{'document_id': 1547536, 'similarity': 0.4254...
    31          31               0.298            35  [{'document_id': 746496, 'similarity': 0.49571...
    32          63               0.339            35  [{'document_id': 6051600, 'similarity': 0.6831...
    33          69               0.458            35  [{'document_id': 2920681, 'similarity': 0.6628...
    34          24               0.444            34  [{'document_id': 358801, 'similarity': 0.65803...
    35          78               0.393            34  [{'document_id': 2359296, 'similarity': 0.6623...
    36          21               0.388            33  [{'document_id': 147456, 'similarity': 0.59152...
    37          50               0.321            33  [{'document_id': 3254416, 'similarity': 0.5919...
    38          83               0.356            32  [{'document_id': 3136441, 'similarity': 0.6124...
    39          74               0.380            31  [{'document_id': 1234321, 'similarity': 0.6202...
    40          84               0.409            31  [{'document_id': 992016, 'similarity': 0.63490...
    41           8               0.361            30  [{'document_id': 463761, 'similarity': 0.63651...
    42          77               0.358            30  [{'document_id': 297025, 'similarity': 0.56941...
    43          85               0.299            30  [{'document_id': 4060225, 'similarity': 0.4781...
    44          33               0.384            29  [{'document_id': 3204100, 'similarity': 0.5814...
    45          40               0.496            29  [{'document_id': 5607424, 'similarity': 0.7235...
    46           2               0.623            27  [{'document_id': 33124, 'similarity': 0.902034...
    47          51               0.398            27  [{'document_id': 3171961, 'similarity': 0.6762...
    48          71               0.385            27  [{'document_id': 206116, 'similarity': 0.73787...
    49          82               0.308            27  [{'document_id': 1827904, 'similarity': 0.5612...
    50          66               0.455            26  [{'document_id': 234256, 'similarity': 0.80868...
    51           6               0.479            25  [{'document_id': 79524, 'similarity': 0.833830...
    52          62               0.333            25  [{'document_id': 393129, 'similarity': 0.51823...
    53          13               0.378            24  [{'document_id': 215296, 'similarity': 0.60681...
    54          65               0.333            24  [{'document_id': 5313025, 'similarity': 0.5784...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/5464d89491da4e09




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.777 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
