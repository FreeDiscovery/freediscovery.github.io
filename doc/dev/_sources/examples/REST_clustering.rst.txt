

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = d0d9cf55d3224f9a

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/d0d9cf55d3224f9a

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/d0d9cf55d3224f9a
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: english
         - sublinear_tf: False
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = df06e1080de7497a
      => SVD decomposition with 300 dimensions explaining 87.16 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = cd9e37c56e304b64

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/cd9e37c56e304b64
        .. computed in 1.3s
       cluster_id              cluster_label  cluster_similarity  cluster_size  n_documents
    0           0          shults tana jones               0.244           130          130
    1           1     rewrite address server               1.000            56           56
    2           2             tue normal oct               0.246           197          197
    3           3             mon nov normal               0.264           180          180
    4           4               test thu oct               0.188           294          294
    5           5         sanders thu normal               0.224           210          210
    6           6  ect hou enron_development               0.485            83           83
    7           7            gtc test online               0.173           291          291
    8           8             fri oct normal               0.263           167          167
    9           9             enron test fri               0.082           857          857

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 3c8a08ddc61d47ad

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/3c8a08ddc61d47ad
        .. computed in 2.2s
                                                 children  cluster_depth  cluster_id                      cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 5, 14, 16, 20, 24, 34, 43, 45, 51, 60, 80]              0           0                    normal test ect               0.074          2465         2465
    1                                                 [2]              1           1             rewrite address server               0.840            67           67
    2                                                  []              2           2             rewrite address server               0.840            67           67
    3                                                 [4]              1           3         transaction party floating               0.593            19           19
    4                                                  []              2           4         transaction party floating               0.593            19           19
    5                        [6, 7, 8, 9, 10, 11, 12, 13]              1           5             normal test shackleton               0.217           261          261
    6                                                  []              2           6        deseret etringer conference               0.452            22           22
    7                                                  []              2           7                      load meet tue               0.404            39           39
    8                                                  []              2           8             shackleton load neuner               0.327            49           49
    9                                                  []              2           9       dasovich transmission access               0.541            11           11
    10                                                 []              2          10                commission fees use               0.421            11           11
    11                                                 []              2          11                     test fri teneo               0.405            60           60
    12                                                 []              2          12               oct dasovich sanders               0.544            17           17
    13                                                 []              2          13               sanders normal south               0.416            52           52
    14                                               [15]              1          14               advice update mexico               0.585            20           20
    15                                                 []              2          15               advice update mexico               0.585            20           20
    16                                       [17, 18, 19]              1          16   enron_development hendry bertone               0.257           128          128
    17                                                 []              2          17      enron_development issues cone               0.467            34           34
    18                                                 []              2          18       enron_development hendry esa               0.351            61           61
    19                                                 []              2          19                 ena enron attorney               0.447            33           33
    20                                       [21, 22, 23]              1          20     test administrative recipients               0.300           101          101
    21                                                 []              2          21                 tiger isda rodolfo               0.474            25           25
    22                                                 []              2          22              company tva questions               0.459             7            7
    23                                                 []              2          23     test administrative recipients               0.382            69           69
    24               [25, 26, 27, 28, 29, 30, 31, 32, 33]              1          24                   ect hou haedicke               0.148           414          414
    25                                                 []              2          25                  ect credit public               0.430            23           23
    26                                                 []              2          26            haedicke normal edwards               0.410            49           49
    27                                                 []              2          27            ruppert exxon gillaspie               0.342            43           43
    28                                                 []              2          28              shall operator lessee               0.351            49           49
    29                                                 []              2          29                  doc gallup knippa               0.350            40           40
    ..                                                ...            ...         ...                                ...                 ...           ...          ...
    54                                                 []              2          54  conference performance management               0.297            34           34
    55                                                 []              2          55                   mon tenet normal               0.427            41           41
    56                                                 []              2          56             meet eb3325 ricafrente               0.373            48           48
    57                                                 []              2          57                     fri tenet test               0.421            20           20
    58                                                 []              2          58      clearinghouse mexico partners               0.416            12           12
    59                                                 []              2          59                   mon tenet normal               0.339            47           47
    60  [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 7...              1          60             migration outlook team               0.098           620          620
    61                                                 []              2          61                subject charge fuel               0.401            29           29
    62                                                 []              2          62               tax financial brazil               0.324            43           43
    63                                                 []              2          63       determination library period               0.390            35           35
    64                                                 []              2          64               shall reference serc               0.394            36           36
    65                                                 []              2          65         gdr enron_development hyvl               0.427            35           35
    66                                                 []              2          66               cash otc derivatives               0.387            32           32
    67                                                 []              2          67                 alias contract hpl               0.405            20           20
    68                                                 []              2          68        transmission training buyer               0.387            20           20
    69                                                 []              2          69            forster enrononline eta               0.291            55           55
    70                                                 []              2          70             midamerican odor urine               0.270            40           40
    71                                                 []              2          71                    new list eb3325               0.376            14           14
    72                                                 []              2          72                  berkeley haas edu               0.421            14           14
    73                                                 []              2          73              kincannon budget room               0.364            40           40
    74                                                 []              2          74                    thu sanders pcb               0.303            35           35
    75                                                 []              2          75             milbank message market               0.345            29           29
    76                                                 []              2          76        shackleton_sara tiger teneo               0.325            22           22
    77                                                 []              2          77        teneo shackleton_sara group               0.342            24           24
    78                                                 []              2          78                mtg party migration               0.295            57           57
    79                                                 []              2          79             team outlook migration               0.552            40           40
    80                                       [81, 82, 83]              1          80     shackleton_sara teneo canadian               0.276            40           40
    81                                                 []              2          81          class shackleton_sara thu               0.421            11           11
    82                                                 []              2          82      shackleton_sara teneo counsel               0.394            16           16
    83                                                 []              2          83         financial canadian masters               0.465            13           13

    [84 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/3c8a08ddc61d47ad
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           32               0.417            91  [{'document_id': 11236, 'similarity': 0.829127...
    1           23               0.382            69  [{'document_id': 154449, 'similarity': 0.78729...
    2            2               0.840            67  [{'document_id': 5041, 'similarity': 0.9949954...
    3           36               0.306            67  [{'document_id': 9216, 'similarity': 0.5504849...
    4           46               0.367            63  [{'document_id': 3549456, 'similarity': 0.6442...
    5           18               0.351            61  [{'document_id': 33124, 'similarity': 0.684139...
    6           11               0.405            60  [{'document_id': 314721, 'similarity': 0.60260...
    7           78               0.295            57  [{'document_id': 5480281, 'similarity': 0.6150...
    8           69               0.291            55  [{'document_id': 1077444, 'similarity': 0.5045...
    9           13               0.416            52  [{'document_id': 1447209, 'similarity': 0.7455...
    10          33               0.288            50  [{'document_id': 1075369, 'similarity': 0.6346...
    11          49               0.390            50  [{'document_id': 2745649, 'similarity': 0.6806...
    12           8               0.327            49  [{'document_id': 61009, 'similarity': 0.551026...
    13          26               0.410            49  [{'document_id': 2528100, 'similarity': 0.6394...
    14          28               0.351            49  [{'document_id': 1567504, 'similarity': 0.6425...
    15          56               0.373            48  [{'document_id': 2464900, 'similarity': 0.5653...
    16          59               0.339            47  [{'document_id': 5626384, 'similarity': 0.5515...
    17          52               0.420            46  [{'document_id': 145924, 'similarity': 0.64509...
    18          47               0.343            44  [{'document_id': 2328676, 'similarity': 0.6057...
    19          48               0.415            44  [{'document_id': 2499561, 'similarity': 0.6846...
    20          27               0.342            43  [{'document_id': 1664100, 'similarity': 0.7247...
    21          30               0.357            43  [{'document_id': 628849, 'similarity': 0.65215...
    22          62               0.324            43  [{'document_id': 524176, 'similarity': 0.59866...
    23          55               0.427            41  [{'document_id': 3097600, 'similarity': 0.6891...
    24          29               0.350            40  [{'document_id': 613089, 'similarity': 0.74783...
    25          70               0.270            40  [{'document_id': 4116841, 'similarity': 0.4438...
    26          73               0.364            40  [{'document_id': 3010225, 'similarity': 0.6270...
    27          79               0.552            40  [{'document_id': 5973136, 'similarity': 0.7034...
    28           7               0.404            39  [{'document_id': 263169, 'similarity': 0.65990...
    29          35               0.350            39  [{'document_id': 10404, 'similarity': 0.678195...
    30          37               0.406            37  [{'document_id': 179776, 'similarity': 0.52293...
    31          41               0.402            36  [{'document_id': 275625, 'similarity': 0.69063...
    32          64               0.394            36  [{'document_id': 3136441, 'similarity': 0.6321...
    33          63               0.390            35  [{'document_id': 54756, 'similarity': 0.654602...
    34          65               0.427            35  [{'document_id': 91809, 'similarity': 0.724067...
    35          74               0.303            35  [{'document_id': 1155625, 'similarity': 0.4724...
    36          17               0.467            34  [{'document_id': 131769, 'similarity': 0.84568...
    37          54               0.297            34  [{'document_id': 1846881, 'similarity': 0.4559...
    38          19               0.447            33  [{'document_id': 79524, 'similarity': 0.682739...
    39          66               0.387            32  [{'document_id': 1117249, 'similarity': 0.6810...
    40          38               0.407            31  [{'document_id': 1962801, 'similarity': 0.5943...
    41          39               0.355            29  [{'document_id': 910116, 'similarity': 0.57909...
    42          50               0.438            29  [{'document_id': 2223081, 'similarity': 0.6959...
    43          61               0.401            29  [{'document_id': 698896, 'similarity': 0.63941...
    44          75               0.345            29  [{'document_id': 1404225, 'similarity': 0.5996...
    45          42               0.349            27  [{'document_id': 1016064, 'similarity': 0.5655...
    46          31               0.378            26  [{'document_id': 3575881, 'similarity': 0.5855...
    47          21               0.474            25  [{'document_id': 48841, 'similarity': 0.638862...
    48          40               0.306            24  [{'document_id': 3500641, 'similarity': 0.4302...
    49          77               0.342            24  [{'document_id': 4977361, 'similarity': 0.5223...
    50          25               0.430            23  [{'document_id': 7569, 'similarity': 0.5972500...
    51           6               0.452            22  [{'document_id': 17689, 'similarity': 0.737302...
    52          76               0.325            22  [{'document_id': 4549689, 'similarity': 0.4695...
    53          53               0.397            21  [{'document_id': 1210000, 'similarity': 0.6066...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/d0d9cf55d3224f9a




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.502 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
