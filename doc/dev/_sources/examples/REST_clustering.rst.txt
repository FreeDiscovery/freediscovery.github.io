

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['filenames', 'id']
       => dsid = b6b9340c051a436e

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/b6b9340c051a436e

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/b6b9340c051a436e
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: ../freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 0.75
         - min_df: 4.0
         - n_features: 30001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: True

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = d1c7705e545b4315
      => SVD decomposition with 100 dimensions explaining 53.27 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = c3c1407dc1e34e17

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/c3c1407dc1e34e17
        .. computed in 1.8s
       cluster_id               cluster_label  cluster_similarity  cluster_size  n_documents
    0           0     dasovich deseret energy               0.340           530          530
    1           1             mon enron teneo               0.327           597          597
    2           2            wed sanders test               0.372           310          310
    3           3     transaction party price               0.599            75           75
    4           4            thu mtg haedicke               0.405           214          214
    5           5      rewrite server address               1.000            56           56
    6           6            ect hou berkeley               0.393           221          221
    7           7  enron_development gtc cone               0.483            94           94
    8           8                 fri tue oct               0.366           304          304
    9           9      shall lessee agreement               0.618            64           64

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 0831302733c8432d

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/0831302733c8432d
        .. computed in 2.9s
                                                 children  cluster_depth  cluster_id                        cluster_label  cluster_similarity  cluster_size  n_documents
    0                               [1, 3, 9, 13, 28, 34]              0           0                         test ect oct               0.294          2465         2465
    1                                                 [2]              1           1               rewrite server address               0.883            66           66
    2                                                  []              2           2               rewrite server address               0.883            66           66
    3                                     [4, 5, 6, 7, 8]              1           3                    kean energy tiger               0.378           260          260
    4                                                  []              2           4                     kean tiger shall               0.403           120          120
    5                                                  []              2           5                  haedicke tue lessee               0.587             9            9
    6                                                  []              2           6             customer energy services               0.674            19           19
    7                                                  []              2           7           enron_development cini gdr               0.467            57           57
    8                                                  []              2           8                  energy power market               0.560            55           55
    9                                        [10, 11, 12]              1           9                     lon master enron               0.404           136          136
    10                                                 []              2          10                         lon ect boyd               0.574            39           39
    11                                                 []              2          11                     tana jones enron               0.516            45           45
    12                                                 []              2          12              master shackleton enron               0.450            52           52
    13  [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2...              1          13  haedicke enron_development dasovich               0.314           806          806
    14                                                 []              2          14        enron_development cone hendry               0.492            77           77
    15                                                 []              2          15      harris transaction confirmation               0.456            80           80
    16                                                 []              2          16                     flynn smud deals               0.548            37           37
    17                                                 []              2          17                  teneo sager meeting               0.393            51           51
    18                                                 []              2          18                  lessee shall lessor               0.491            65           65
    19                                                 []              2          19              dasovich bruno gaillard               0.485            91           91
    20                                                 []              2          20                 marcelo tozzini afac               0.529            58           58
    21                                                 []              2          21                party transaction ena               0.508            82           82
    22                                                 []              2          22                   haedicke power thu               0.567            53           53
    23                                                 []              2          23                     jones tana enron               0.531            35           35
    24                                                 []              2          24                   nicolay sager usvi               0.479            53           53
    25                                                 []              2          25     ricafrente ricafrente_david muni               0.494            38           38
    26                                                 []              2          26               migration outlook team               0.461            63           63
    27                                                 []              2          27                    sager eb3325 meet               0.489            23           23
    28                               [29, 30, 31, 32, 33]              1          28                         load thu oct               0.391           211          211
    29                                                 []              2          29          deseret etringer shackleton               0.561            38           38
    30                                                 []              2          30                       thu tenet test               0.570            35           35
    31                                                 []              2          31                    load tue yosemite               0.507            35           35
    32                                                 []              2          32                        fri load test               0.523            50           50
    33                                                 []              2          33                          mon wed oct               0.469            53           53
    34  [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 4...              1          34                    ect sanders tenet               0.310           986          986
    35                                                 []              2          35                        ect hou ellis               0.555            78           78
    36                                                 []              2          36                    berkeley haas edu               0.507            62           62
    37                                                 []              2          37                  clair cash canadian               0.464            53           53
    38                                                 []              2          38                  ruppert exxon nemec               0.549            45           45
    39                                                 []              2          39      recipients administrative group               0.526            31           31
    40                                                 []              2          40              meeting attorney budget               0.451            49           49
    41                                                 []              2          41                     jones tana legal               0.940             2            2
    42                                                 []              2          42               nemec doc nemec_gerald               0.532            70           70
    43                                                 []              2          43                      dead calo horse               0.420            59           59
    44                                                 []              2          44                    bump hyvl message               0.466            63           63
    45                                                 []              2          45                        wed tenet tue               0.415            61           61
    46                                                 []              2          46                      mon lunch tenet               0.448            30           30
    47                                                 []              2          47                      hendry duke fri               0.504            25           25
    48                                                 []              2          48                       mtg tue eb3325               0.433            70           70
    49                                                 []              2          49                        mon tenet mtg               0.491            62           62
    50                                                 []              2          50                    tana jones advice               0.450            73           73
    51                                                 []              2          51                    canada energy fin               0.868             6            6
    52                                                 []              2          52                    sanders lunch nov               0.567            31           31
    53                                                 []              2          53                  sanders tue meeting               0.564            58           58
    54                                                 []              2          54                    kincannon tue cat               0.422            58           58

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/0831302733c8432d
        .. computed in 0.6s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            0               0.403           120  [{'document_id': 622521, 'similarity': 0.40276...
    1            1               0.485            91  [{'document_id': 511225, 'similarity': 0.48500...
    2            2               0.508            82  [{'document_id': 165649, 'similarity': 0.50790...
    3            3               0.456            80  [{'document_id': 97969, 'similarity': 0.455927...
    4            4               0.555            78  [{'document_id': 13456, 'similarity': 0.555247...
    5            5               0.492            77  [{'document_id': 900, 'similarity': 0.49239984...
    6            6               0.450            73  [{'document_id': 235225, 'similarity': 0.45026...
    7            7               0.532            70  [{'document_id': 753424, 'similarity': 0.53246...
    8            8               0.433            70  [{'document_id': 5880625, 'similarity': 0.4327...
    9            9               0.883            66  [{'document_id': 5041, 'similarity': 0.8833547...
    10          10               0.491            65  [{'document_id': 1567504, 'similarity': 0.4909...
    11          11               0.461            63  [{'document_id': 5414929, 'similarity': 0.4609...
    12          12               0.466            63  [{'document_id': 6056521, 'similarity': 0.4664...
    13          13               0.507            62  [{'document_id': 363609, 'similarity': 0.50748...
    14          14               0.491            62  [{'document_id': 3407716, 'similarity': 0.4911...
    15          15               0.415            61  [{'document_id': 2289169, 'similarity': 0.4152...
    16          16               0.420            59  [{'document_id': 4624, 'similarity': 0.4197910...
    17          17               0.529            58  [{'document_id': 4293184, 'similarity': 0.5290...
    18          18               0.564            58  [{'document_id': 3984016, 'similarity': 0.5643...
    19          19               0.422            58  [{'document_id': 2712609, 'similarity': 0.4223...
    20          20               0.467            57  [{'document_id': 91809, 'similarity': 0.466676...
    21          21               0.560            55  [{'document_id': 207025, 'similarity': 0.55974...
    22          22               0.567            53  [{'document_id': 2913849, 'similarity': 0.5667...
    23          23               0.479            53  [{'document_id': 3655744, 'similarity': 0.4786...
    24          24               0.469            53  [{'document_id': 322624, 'similarity': 0.46926...
    25          25               0.464            53  [{'document_id': 3196944, 'similarity': 0.4637...
    26          26               0.450            52  [{'document_id': 2111209, 'similarity': 0.4495...
    27          27               0.393            51  [{'document_id': 1739761, 'similarity': 0.3930...
    28          28               0.523            50  [{'document_id': 373321, 'similarity': 0.52255...
    29          29               0.451            49  [{'document_id': 2411809, 'similarity': 0.4509...
    30          30               0.516            45  [{'document_id': 1976836, 'similarity': 0.5155...
    31          31               0.549            45  [{'document_id': 717409, 'similarity': 0.54908...
    32          32               0.574            39  [{'document_id': 1207801, 'similarity': 0.5743...
    33          33               0.494            38  [{'document_id': 7396, 'similarity': 0.4935094...
    34          34               0.561            38  [{'document_id': 12769, 'similarity': 0.561439...
    35          35               0.548            37  [{'document_id': 128164, 'similarity': 0.54838...
    36          36               0.531            35  [{'document_id': 215296, 'similarity': 0.53140...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/b6b9340c051a436e




|


.. code-block:: python


    import os.path
    import numpy as np
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])} \
                                   for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {'dataset_definition': dataset_definition,
               'use_idf': 1, 'n_features': 30001,
               'min_df': 4, 'max_df': 0.75 # filter out unfrequent / too frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url)

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items() \
                                                      if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 100
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print('  => SVD decomposition with {} dimensions explaining {:.2f} % variabilty of the data'.format(
                            n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              #'min_similarity': 0.95,
                              'branching_factor': 20 
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.491 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
