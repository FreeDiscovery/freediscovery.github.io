

.. _sphx_glr_engine_examples_cluster.py:


Clustering
==========

Cluster documents into clusters



.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL







0. Load the example dataset
---------------------------



.. code-block:: python


    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]





.. rst-class:: sphx-glr-script-out

 Out::

    GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset


1. Feature extraction (non hashed)
----------------------------------
1.a Load dataset and initalize feature extraction



.. code-block:: python


    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    res = requests.post(url).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))






.. rst-class:: sphx-glr-script-out

 Out::

    POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 94d97aa543d94ea4


1.b Run feature extraction



.. code-block:: python


    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})






.. rst-class:: sphx-glr-script-out

 Out::

    POST http://localhost:5001/api/v0/feature-extraction/94d97aa543d94ea4


2. Calculate LSI
----------------



.. code-block:: python


    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))





.. rst-class:: sphx-glr-script-out

 Out::

    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = d8180c19416b4bef
      => SVD decomposition with 300 dimensions explaining 87.16 % variabilty of the data


3. Document Clustering (LSI + K-Means)
--------------------------------------



.. code-block:: python


    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))





.. rst-class:: sphx-glr-script-out

 Out::

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 51c1865ea657497b


3.b. Computing cluster labels



.. code-block:: python


    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))






.. rst-class:: sphx-glr-script-out

 Out::

    GET http://localhost:5001/api/v0/clustering/k-mean/51c1865ea657497b
        .. computed in 1.0s
       cluster_id               cluster_label  cluster_similarity  cluster_size  n_documents
    0           0              isda ena party               0.190           157          157
    1           1              fri oct normal               0.254           183          183
    2           2              test wed teneo               0.237           220          220
    3           3      rewrite address server               1.000            56           56
    4           4             eb3325 tue meet               0.254           178          178
    5           5       conference normal oct               0.218           231          231
    6           6               ect hou ellis               0.525            74           74
    7           7                 mtg mon nov               0.282           153          153
    8           8             thu normal test               0.251           184          184
    9           9  group enron administrative               0.075          1029         1029


4. Document Clustering (LSI + Birch Clustering)
-----------------------------------------------



.. code-block:: python


    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))





.. rst-class:: sphx-glr-script-out

 Out::

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 7feaa66398ee4e22


4.b. Computing cluster labels



.. code-block:: python


    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))





.. rst-class:: sphx-glr-script-out

 Out::

    GET http://localhost:5001/api/v0/clustering/birch/7feaa66398ee4e22
        .. computed in 1.7s
                                                 children  cluster_depth  cluster_id                        cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 13, 25, 27, 30, 43, 45, 47, 51, 53, 63,...              0           0                      normal test ect               0.074          2465         2465
    1                                                 [2]              1           1                    deal aquilla muni               0.684            17           17
    2                                                  []              2           2                    deal aquilla muni               0.684            17           17
    3                      [4, 5, 6, 7, 8, 9, 10, 11, 12]              1           3       test shackleton administrative               0.187           258          258
    4                                                  []              2           4                    rate group public               0.255            36           36
    5                                                  []              2           5             deseret etringer counsel               0.537            22           22
    6                                                  []              2           6               shackleton load normal               0.396            47           47
    7                                                  []              2           7               calo shackleton dinner               0.673            16           16
    8                                                  []              2           8             sample financial trading               0.395            18           18
    9                                                  []              2           9                      jones tana load               0.404            32           32
    10                                                 []              2          10                     nemec doc gallup               0.458            16           16
    11                                                 []              2          11           services commission energy               0.391            14           14
    12                                                 []              2          12       test recipients administrative               0.446            57           57
    13       [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]              1          13                  rewrite address ect               0.219           372          372
    14                                                 []              2          14        issues cone enron_development               0.470            26           26
    15                                                 []              2          15               rewrite address server               0.531           114          114
    16                                                 []              2          16                      memo week clair               0.337            24           24
    17                                                 []              2          17          attorney confirmation south               0.446            11           11
    18                                                 []              2          18                 ena transaction kean               0.394            43           43
    19                                                 []              2          19                       ect hou london               0.380            39           39
    20                                                 []              2          20                   tiger bailey sekse               0.487            14           14
    21                                                 []              2          21                  test bruno gaillard               0.563            15           15
    22                                                 []              2          22                      meet load teneo               0.535            13           13
    23                                                 []              2          23                    normal test teneo               0.445            46           46
    24                                                 []              2          24                      load teneo test               0.494            27           27
    25                                               [26]              1          25             amoco jefferson sorenson               0.556            15           15
    26                                                 []              2          26             amoco jefferson sorenson               0.556            15           15
    27                                           [28, 29]              1          27                   sanders normal nov               0.481            63           63
    28                                                 []              2          28                   sanders normal nov               0.493            54           54
    29                                                 []              2          29               sanders fri conference               0.578             9            9
    ..                                                ...            ...         ...                                  ...                 ...           ...          ...
    62                                                 []              2          62                        wed nov tenet               0.390            38           38
    63                                           [64, 65]              1          63                        tue tenet thu               0.290           107          107
    64                                                 []              2          64                     thu tenet normal               0.325            68           68
    65                                                 []              2          65                        tue oct tenet               0.471            39           39
    66  [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 7...              1          66       enron_development teneo normal               0.102           687          687
    67                                                 []              2          67  enron_development advice catalytica               0.337            77           77
    68                                                 []              2          68               ruppert operator exxon               0.355            52           52
    69                                                 []              2          69                      teneo test date               0.352            47           47
    70                                                 []              2          70            products weather internet               0.387            22           22
    71                                                 []              2          71        enron_development gdr hagerty               0.394            32           32
    72                                                 []              2          72           trade inflation investment               0.414            18           18
    73                                                 []              2          73                   bump doc agreement               0.356            45           45
    74                                                 []              2          74                 boyd hunter language               0.366            27           27
    75                                                 []              2          75         sampling americancentury rcr               0.320            36           36
    76                                                 []              2          76                 houston dickson calo               0.352            29           29
    77                                                 []              2          77            attorney fri transactions               0.344            21           21
    78                                                 []              2          78                     neuner wed teneo               0.293            32           32
    79                                                 []              2          79                  haedicke normal nov               0.413            42           42
    80                                                 []              2          80            teneo taylor_mark bockius               0.334            32           32
    81                                                 []              2          81              registration legal cftc               0.364            14           14
    82                                                 []              2          82                        fri tenet mtg               0.374            26           26
    83                                                 []              2          83                     lunch otc energy               0.308            48           48
    84                                                 []              2          84             market teneo electricity               0.359            20           20
    85                                                 []              2          85                houston shipper nemec               0.444            21           21
    86                                                 []              2          86               migration outlook team               0.459            46           46
    87                                   [88, 89, 90, 91]              1          87          shackleton_sara teneo group               0.230            82           82
    88                                                 []              2          88                        doc isda cini               0.397            33           33
    89                                                 []              2          89                  account stay motion               0.395            15           15
    90                                                 []              2          90          laryngitis diligence review               0.434            10           10
    91                                                 []              2          91          shackleton_sara teneo tiger               0.360            24           24

    [92 rows x 7 columns]


5. Optimal sampling (LSI + Birch Clustering)
--------------------------------------------



.. code-block:: python

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))





.. rst-class:: sphx-glr-script-out

 Out::

    GET http://localhost:5001/api/v0/clustering/birch/7feaa66398ee4e22
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           15               0.531           114  [{'document_id': 5041, 'similarity': 0.9245882...
    1           67               0.337            77  [{'document_id': 33124, 'similarity': 0.594356...
    2           41               0.309            76  [{'document_id': 2735716, 'similarity': 0.5962...
    3           64               0.325            68  [{'document_id': 3587236, 'similarity': 0.6634...
    4           39               0.325            60  [{'document_id': 2402500, 'similarity': 0.6318...
    5           12               0.446            57  [{'document_id': 855625, 'similarity': 0.88858...
    6           28               0.493            54  [{'document_id': 3802500, 'similarity': 0.5989...
    7           60               0.345            54  [{'document_id': 3171961, 'similarity': 0.6304...
    8           68               0.355            52  [{'document_id': 1664100, 'similarity': 0.6798...
    9           33               0.337            50  [{'document_id': 714025, 'similarity': 0.62037...
    10          35               0.336            50  [{'document_id': 4990756, 'similarity': 0.5743...
    11          83               0.308            48  [{'document_id': 1119364, 'similarity': 0.5790...
    12           6               0.396            47  [{'document_id': 61504, 'similarity': 0.640083...
    13          69               0.352            47  [{'document_id': 2149156, 'similarity': 0.7265...
    14          23               0.445            46  [{'document_id': 358801, 'similarity': 0.66319...
    15          86               0.459            46  [{'document_id': 5527201, 'similarity': 0.6800...
    16          73               0.356            45  [{'document_id': 300304, 'similarity': 0.64720...
    17          18               0.394            43  [{'document_id': 79524, 'similarity': 0.603813...
    18          79               0.413            42  [{'document_id': 2992900, 'similarity': 0.6323...
    19          31               0.296            41  [{'document_id': 2809, 'similarity': 0.4766740...
    20          19               0.380            39  [{'document_id': 4422609, 'similarity': 0.7943...
    21          65               0.471            39  [{'document_id': 1893376, 'similarity': 0.7655...
    22          32               0.366            38  [{'document_id': 627264, 'similarity': 0.73297...
    23          62               0.390            38  [{'document_id': 2334784, 'similarity': 0.7788...
    24           4               0.255            36  [{'document_id': 1168561, 'similarity': 0.3576...
    25          38               0.311            36  [{'document_id': 1232100, 'similarity': 0.4595...
    26          75               0.320            36  [{'document_id': 910116, 'similarity': 0.51148...
    27          56               0.481            34  [{'document_id': 6041764, 'similarity': 0.7041...
    28          34               0.351            33  [{'document_id': 1100401, 'similarity': 0.6933...
    29          88               0.397            33  [{'document_id': 4765489, 'similarity': 0.5323...
    30           9               0.404            32  [{'document_id': 215296, 'similarity': 0.58934...
    31          71               0.394            32  [{'document_id': 91809, 'similarity': 0.806330...
    32          78               0.293            32  [{'document_id': 3663396, 'similarity': 0.4763...
    33          80               0.334            32  [{'document_id': 3378244, 'similarity': 0.6113...
    34          40               0.408            30  [{'document_id': 3359889, 'similarity': 0.6664...
    35          48               0.381            30  [{'document_id': 504100, 'similarity': 0.57251...
    36          37               0.401            29  [{'document_id': 3164841, 'similarity': 0.5582...
    37          76               0.352            29  [{'document_id': 3279721, 'similarity': 0.5513...
    38          49               0.348            28  [{'document_id': 1962801, 'similarity': 0.6525...
    39          59               0.368            28  [{'document_id': 2468041, 'similarity': 0.5644...
    40          24               0.494            27  [{'document_id': 835396, 'similarity': 0.65802...
    41          50               0.443            27  [{'document_id': 2076481, 'similarity': 0.8140...
    42          74               0.366            27  [{'document_id': 1032256, 'similarity': 0.5915...
    43          14               0.470            26  [{'document_id': 289, 'similarity': 0.85353300...
    44          82               0.374            26  [{'document_id': 5788836, 'similarity': 0.6740...
    45          16               0.337            24  [{'document_id': 16900, 'similarity': 0.457269...
    46          55               0.372            24  [{'document_id': 4494400, 'similarity': 0.6840...
    47          91               0.360            24  [{'document_id': 4622500, 'similarity': 0.4755...
    48          36               0.368            23  [{'document_id': 874225, 'similarity': 0.48114...
    49          57               0.384            23  [{'document_id': 2524921, 'similarity': 0.6179...
    50           5               0.537            22  [{'document_id': 17689, 'similarity': 0.804906...
    51          70               0.387            22  [{'document_id': 1129969, 'similarity': 0.6836...
    52          52               0.498            21  [{'document_id': 3118756, 'similarity': 0.7570...
    53          61               0.489            21  [{'document_id': 2307361, 'similarity': 0.7566...
    54          77               0.344            21  [{'document_id': 4652649, 'similarity': 0.5300...
    55          85               0.444            21  [{'document_id': 652864, 'similarity': 0.69850...
    56          84               0.359            20  [{'document_id': 142884, 'similarity': 0.59510...
    57           8               0.395            18  [{'document_id': 125316, 'similarity': 0.60864...
    58          58               0.448            18  [{'document_id': 2669956, 'similarity': 0.7132...
    59          72               0.414            18  [{'document_id': 44100, 'similarity': 0.658200...


5. Delete the extracted features



.. code-block:: python


    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    requests.delete(url)






**Total running time of the script:** ( 0 minutes  8.873 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: cluster.py <cluster.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: cluster.ipynb <cluster.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
