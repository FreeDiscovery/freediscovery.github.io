

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 9c8fddab730c4d61

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/9c8fddab730c4d61

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/9c8fddab730c4d61
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = c81c03a82b684212
      => SVD decomposition with 300 dimensions explaining 90.00 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = f1d11ad391184341

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/f1d11ad391184341
        .. computed in 1.4s
       cluster_id                     cluster_label  cluster_similarity  cluster_size  n_documents
    0           0          meeting confirmation fri               0.227           204          204
    1           1            rewrite address server               1.000            56           56
    2           2                  tenet normal mon               0.254           189          189
    3           3                     ect shall hou               0.275           150          150
    4           4          energy customer services               0.111           575          575
    5           5  enron_development issues bertone               0.406            65           65
    6           6                     tue oct lunch               0.245           146          146
    7           7                   meet eb3325 tue               0.294           133          133
    8           8              conference thu enron               0.212           221          221
    9           9                  teneo test group               0.091           726          726

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 875d35aa32ff4ecf

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/875d35aa32ff4ecf
        .. computed in 2.3s
                                                 children  cluster_depth  cluster_id                      cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 5, 8, 17, 22, 30, 33, 35, 37, 39, 49, 6...              0           0                    normal test ect               0.071          2465         2465
    1                                                 [2]              1           1                    thanks cini esa               0.723             4            4
    2                                                  []              2           2                    thanks cini esa               0.723             4            4
    3                                                 [4]              1           3             rewrite address server               0.763            74           74
    4                                                  []              2           4             rewrite address server               0.763            74           74
    5                                              [6, 7]              1           5                     jones tana gtc               0.315            60           60
    6                                                  []              2           6                 jones tana counsel               0.550            11           11
    7                                                  []              2           7                     jones tana gtc               0.339            49           49
    8                     [9, 10, 11, 12, 13, 14, 15, 16]              1           8        transaction test recipients               0.142           384          384
    9                                                  []              2           9    enron recipients administrative               0.316            66           66
    10                                                 []              2          10               advice update mexico               0.280            67           67
    11                                                 []              2          11                   flynn smud trade               0.356            39           39
    12                                                 []              2          12            party transaction price               0.361            83           83
    13                                                 []              2          13           dasovich kincannon notes               0.311            44           44
    14                                                 []              2          14                    nemec pcb sheet               0.333            34           34
    15                                                 []              2          15                test bruno gaillard               0.409            28           28
    16                                                 []              2          16                  trade stay motion               0.324            23           23
    17                                   [18, 19, 20, 21]              1          17                   teneo normal ena               0.361           102          102
    18                                                 []              2          18                      ena load swap               0.363            42           42
    19                                                 []              2          19             services energy update               0.708             3            3
    20                                                 []              2          20                      teneo oct fri               0.548            31           31
    21                                                 []              2          21              normal teneo dasovich               0.492            26           26
    22                       [23, 24, 25, 26, 27, 28, 29]              1          22                 ect hou shackleton               0.204           217          217
    23                                                 []              2          23          shackleton clair expenses               0.418            15           15
    24                                                 []              2          24           attorney lunch following               0.423            26           26
    25                                                 []              2          25     shackleton shackleton_sara mon               0.429            27           27
    26                                                 []              2          26                budget total office               0.424            19           19
    27                                                 []              2          27    market electricity transmission               0.347            56           56
    28                                                 []              2          28                ect hou transaction               0.512            58           58
    29                                                 []              2          29               shackleton load test               0.406            16           16
    ..                                                ...            ...         ...                                ...                 ...           ...          ...
    57                                                 []              2          57  elbertson elbertson_janette sager               0.437            19           19
    58                                                 []              2          58                      thu oct tenet               0.364            48           48
    59                                                 []              2          59                       mtg rob fund               0.405            11           11
    60                                                 []              2          60                      tue oct tenet               0.407            29           29
    61                                                 []              2          61              wed tenet midamerican               0.332            43           43
    62                                                 []              2          62             eb3325 meet ricafrente               0.367            62           62
    63                                                 []              2          63    ricafrente_david ricafrente wed               0.335            38           38
    64                                                 []              2          64                      mon tenet nov               0.362            51           51
    65                                                 []              2          65                lon ect information               0.360            29           29
    66                                                 []              2          66             outlook team migration               0.388            25           25
    67                                                 []              2          67                     tenet fri team               0.366            36           36
    68                                                 []              2          68                   murray thu tenet               0.399            23           23
    69  [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 8...              1          69   enron_development mtg conference               0.121           474          474
    70                                                 []              2          70                calo account harris               0.363            53           53
    71                                                 []              2          71                issues trading cone               0.313            67           67
    72                                                 []              2          72    enron_development committee gdr               0.368            56           56
    73                                                 []              2          73       performance management davis               0.324            42           42
    74                                                 []              2          74                    mtg meet update               0.361            30           30
    75                                                 []              2          75              houston attached calo               0.400            19           19
    76                                                 []              2          76                haedicke normal nov               0.374            42           42
    77                                                 []              2          77                   clair enron mail               0.409            11           11
    78                                                 []              2          78                    dead horse load               0.399            22           22
    79                                                 []              2          79                  tax services rate               0.387            10           10
    80                                                 []              2          80             master credit talisman               0.414            12           12
    81                                                 []              2          81                  mtg wed migration               0.381            44           44
    82                                                 []              2          82  conference shackleton_sara resume               0.316            37           37
    83                                                 []              2          83                       mtg wed room               0.295            29           29
    84                                           [85, 86]              1          84               meeting tenet office               0.352            64           64
    85                                                 []              2          85     enrononline internet customers               0.488            16           16
    86                                                 []              2          86                  meeting tenet mon               0.421            48           48

    [87 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/875d35aa32ff4ecf
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           12               0.361            83  [{'document_id': 165649, 'similarity': 0.76681...
    1            4               0.763            74  [{'document_id': 5041, 'similarity': 0.9913515...
    2           10               0.280            67  [{'document_id': 227529, 'similarity': 0.57153...
    3           71               0.313            67  [{'document_id': 131769, 'similarity': 0.67960...
    4            9               0.316            66  [{'document_id': 154449, 'similarity': 0.60755...
    5           55               0.301            63  [{'document_id': 137641, 'similarity': 0.59459...
    6           62               0.367            62  [{'document_id': 2496400, 'similarity': 0.5766...
    7           28               0.512            58  [{'document_id': 2030625, 'similarity': 0.8069...
    8           31               0.475            58  [{'document_id': 298116, 'similarity': 0.80600...
    9           27               0.347            56  [{'document_id': 207025, 'similarity': 0.61847...
    10          72               0.368            56  [{'document_id': 36100, 'similarity': 0.653855...
    11          70               0.363            53  [{'document_id': 4596736, 'similarity': 0.5528...
    12          64               0.362            51  [{'document_id': 2396304, 'similarity': 0.6087...
    13           7               0.339            49  [{'document_id': 1937664, 'similarity': 0.5452...
    14          44               0.330            48  [{'document_id': 683929, 'similarity': 0.59809...
    15          58               0.364            48  [{'document_id': 1752976, 'similarity': 0.6359...
    16          86               0.421            48  [{'document_id': 2822400, 'similarity': 0.5633...
    17          13               0.311            44  [{'document_id': 538756, 'similarity': 0.58466...
    18          81               0.381            44  [{'document_id': 5480281, 'similarity': 0.7226...
    19          61               0.332            43  [{'document_id': 1768900, 'similarity': 0.6654...
    20          18               0.363            42  [{'document_id': 79524, 'similarity': 0.659060...
    21          50               0.293            42  [{'document_id': 6051600, 'similarity': 0.4822...
    22          56               0.351            42  [{'document_id': 1232100, 'similarity': 0.5730...
    23          73               0.324            42  [{'document_id': 186624, 'similarity': 0.48915...
    24          76               0.374            42  [{'document_id': 2913849, 'similarity': 0.5580...
    25          11               0.356            39  [{'document_id': 10201, 'similarity': 0.535185...
    26          40               0.286            39  [{'document_id': 71824, 'similarity': 0.524683...
    27          47               0.453            39  [{'document_id': 3802500, 'similarity': 0.6202...
    28          32               0.421            38  [{'document_id': 627264, 'similarity': 0.78188...
    29          63               0.335            38  [{'document_id': 2890000, 'similarity': 0.5886...
    30          51               0.323            37  [{'document_id': 7569, 'similarity': 0.5476574...
    31          82               0.316            37  [{'document_id': 4840000, 'similarity': 0.5649...
    32          67               0.366            36  [{'document_id': 3090564, 'similarity': 0.5217...
    33          14               0.333            34  [{'document_id': 921600, 'similarity': 0.40590...
    34          54               0.337            33  [{'document_id': 3062500, 'similarity': 0.5111...
    35          20               0.548            31  [{'document_id': 314721, 'similarity': 0.71842...
    36          45               0.440            30  [{'document_id': 756900, 'similarity': 0.61875...
    37          74               0.361            30  [{'document_id': 5373124, 'similarity': 0.5605...
    38          52               0.312            29  [{'document_id': 6007401, 'similarity': 0.4366...
    39          60               0.407            29  [{'document_id': 1893376, 'similarity': 0.7016...
    40          65               0.360            29  [{'document_id': 3690241, 'similarity': 0.5454...
    41          83               0.295            29  [{'document_id': 1004004, 'similarity': 0.4766...
    42          15               0.409            28  [{'document_id': 362404, 'similarity': 0.71127...
    43          25               0.429            27  [{'document_id': 61504, 'similarity': 0.622244...
    44          21               0.492            26  [{'document_id': 351649, 'similarity': 0.69068...
    45          24               0.423            26  [{'document_id': 36481, 'similarity': 0.599400...
    46          36               0.469            25  [{'document_id': 1100401, 'similarity': 0.8323...
    47          42               0.389            25  [{'document_id': 206116, 'similarity': 0.66385...
    48          53               0.382            25  [{'document_id': 900601, 'similarity': 0.62317...
    49          66               0.388            25  [{'document_id': 5363856, 'similarity': 0.6951...
    50          16               0.324            23  [{'document_id': 2111209, 'similarity': 0.5737...
    51          38               0.488            23  [{'document_id': 1121481, 'similarity': 0.8247...
    52          68               0.399            23  [{'document_id': 2782224, 'similarity': 0.5486...
    53          78               0.399            22  [{'document_id': 1060900, 'similarity': 0.7361...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/9c8fddab730c4d61




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  15.772 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
