

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 42d3544833d14cbb

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/42d3544833d14cbb

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/42d3544833d14cbb
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 4d49cdcb6fc541ee
      => SVD decomposition with 300 dimensions explaining 90.01 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 417868f6be19493c

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/417868f6be19493c
        .. computed in 1.3s
       cluster_id           cluster_label  cluster_similarity  cluster_size  n_documents
    0           0  dasovich normal master               0.136           361          361
    1           1           tue oct tenet               0.227           219          219
    2           2             ect thu hou               0.299           159          159
    3           3        fri tenet normal               0.267           156          156
    4           4   shall party agreement               0.511            73           73
    5           5         meeting mon nov               0.204           221          221
    6           6   tana jones recipients               0.087           757          757
    7           7  rewrite address server               1.000            56           56
    8           8        teneo test group               0.153           318          318
    9           9  energy customer market               0.251           145          145

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 20af4d700c6d424f

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/20af4d700c6d424f
        .. computed in 2.1s
                                                 children  cluster_depth  cluster_id                         cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 5, 8, 10, 13, 26, 29, 31, 34, 48, 53, 6...              0           0                       normal test ect               0.071          2465         2465
    1                                                 [2]              1           1                rewrite address server               0.717            79           79
    2                                                  []              2           2                rewrite address server               0.717            79           79
    3                                                 [4]              1           3               changing place approved               0.744             7            7
    4                                                  []              2           4               changing place approved               0.744             7            7
    5                                              [6, 7]              1           5                    shackleton ena rmt               0.360            49           49
    6                                                  []              2           6                  shackleton load test               0.462            27           27
    7                                                  []              2           7                        ena swap enron               0.539            22           22
    8                                                 [9]              1           8                 total budget attached               0.639            11           11
    9                                                  []              2           9                 total budget attached               0.639            11           11
    10                                           [11, 12]              1          10                     teneo normal load               0.488            68           68
    11                                                 []              2          11                       load teneo meet               0.504            32           32
    12                                                 []              2          12                      teneo normal oct               0.569            36           36
    13   [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]              1          13                         ect hou jones               0.140           374          374
    14                                                 []              2          14                   trade neuner credit               0.426            24           24
    15                                                 []              2          15                     advice online gtc               0.411            30           30
    16                                                 []              2          16                tana jones performance               0.359            25           25
    17                                                 []              2          17                       tana jones isda               0.393            30           30
    18                                                 []              2          18                      jones tana enron               0.322            37           37
    19                                                 []              2          19                  kean services energy               0.407            34           34
    20                                                 []              2          20                     alias project rcr               0.357            26           26
    21                                                 []              2          21                    dasovich serc nerc               0.386            34           34
    22                                                 []              2          22                  class business power               0.415            20           20
    23                                                 []              2          23                     haas berkeley edu               0.410            19           19
    24                                                 []              2          24                         ect hou ellis               0.485            61           61
    25                                                 []              2          25               master eta counterparty               0.373            34           34
    26                                           [27, 28]              1          26                 agreement shall party               0.390            69           69
    27                                                 []              2          27           sampling interconnect amoco               0.386            24           24
    28                                                 []              2          28              shall agreement customer               0.541            45           45
    29                                               [30]              1          29  enron_development attorney committee               0.544            29           29
    ..                                                ...            ...         ...                                   ...                 ...           ...          ...
    66                                                 []              2          66                         mtg wed tenet               0.367            58           58
    67                                               [68]              1          67                      party nemec data               0.507            13           13
    68                                                 []              2          68                      party nemec data               0.507            13           13
    69  [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 8...              1          69                      wed normal tiger               0.119           444          444
    70                                                 []              2          70                   harris tiger bailey               0.348            44           44
    71                                                 []              2          71                     memo marcelo sent               0.368            29           29
    72                                                 []              2          72      counterparty tiger determination               0.342            46           46
    73                                                 []              2          73       enron_development guaranty duke               0.370            31           31
    74                                                 []              2          74           november training inflation               0.359            35           35
    75                                                 []              2          75              enrononline meter laguna               0.375            27           27
    76                                                 []              2          76          market customers electricity               0.448            30           30
    77                                                 []              2          77                 wed outlook migration               0.382            42           42
    78                                                 []              2          78                      stay lay dickson               0.334            24           24
    79                                                 []              2          79                  kincannon week power               0.338            42           42
    80                                                 []              2          80         houston shackleton_sara teneo               0.330            22           22
    81                                                 []              2          81                     party date sample               0.298            47           47
    82                                                 []              2          82              tax foreign transactions               0.493            25           25
    83                                               [84]              1          83                     pcb pipeline fuel               0.471            13           13
    84                                                 []              2          84                     pcb pipeline fuel               0.471            13           13
    85           [86, 87, 88, 89, 90, 91, 92, 93, 94, 95]              1          85                    shall party lessee               0.147           328          328
    86                                                 []              2          86              dupre catalytica systems               0.437            20           20
    87                                                 []              2          87               shall party transaction               0.351            96           96
    88                                                 []              2          88               murray elbertson eb3325               0.431            26           26
    89                                                 []              2          89       taylor_mark forster information               0.376            20           20
    90                                                 []              2          90                    dead horse tozzini               0.375            39           39
    91                                                 []              2          91       budget midamerican transactions               0.411            11           11
    92                                                 []              2          92             kitchen boyd registration               0.433            21           21
    93                                                 []              2          93          calo catalytica confirmation               0.418            37           37
    94                                                 []              2          94                      ticker daily lon               0.318            24           24
    95                                                 []              2          95                        nemec doc bump               0.352            34           34

    [96 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/20af4d700c6d424f
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           87               0.351            96  [{'document_id': 299209, 'similarity': 0.67612...
    1            2               0.717            79  [{'document_id': 5041, 'similarity': 0.9880154...
    2           24               0.485            61  [{'document_id': 11025, 'similarity': 0.825248...
    3           66               0.367            58  [{'document_id': 16, 'similarity': 0.537484177...
    4           41               0.383            55  [{'document_id': 154449, 'similarity': 0.80006...
    5           35               0.386            50  [{'document_id': 131769, 'similarity': 0.69097...
    6           81               0.298            47  [{'document_id': 116964, 'similarity': 0.58023...
    7           63               0.338            46  [{'document_id': 1493284, 'similarity': 0.6079...
    8           72               0.342            46  [{'document_id': 53361, 'similarity': 0.693762...
    9           28               0.541            45  [{'document_id': 609961, 'similarity': 0.84833...
    10          57               0.354            45  [{'document_id': 3171961, 'similarity': 0.6503...
    11          70               0.348            44  [{'document_id': 4596736, 'similarity': 0.6956...
    12          40               0.375            43  [{'document_id': 3470769, 'similarity': 0.5082...
    13          51               0.344            43  [{'document_id': 3080025, 'similarity': 0.6134...
    14          77               0.382            42  [{'document_id': 5499025, 'similarity': 0.6875...
    15          79               0.338            42  [{'document_id': 2449225, 'similarity': 0.5649...
    16          90               0.375            39  [{'document_id': 5476, 'similarity': 0.5492175...
    17          18               0.322            37  [{'document_id': 211600, 'similarity': 0.52078...
    18          93               0.418            37  [{'document_id': 3783025, 'similarity': 0.6516...
    19          12               0.569            36  [{'document_id': 358801, 'similarity': 0.69766...
    20          32               0.401            36  [{'document_id': 534361, 'similarity': 0.65528...
    21          65               0.354            36  [{'document_id': 1893376, 'similarity': 0.6632...
    22          42               0.354            35  [{'document_id': 1119364, 'similarity': 0.7172...
    23          58               0.417            35  [{'document_id': 3407716, 'similarity': 0.6312...
    24          59               0.313            35  [{'document_id': 3936256, 'similarity': 0.5579...
    25          74               0.359            35  [{'document_id': 514089, 'similarity': 0.68737...
    26          19               0.407            34  [{'document_id': 5564881, 'similarity': 0.7131...
    27          21               0.386            34  [{'document_id': 583696, 'similarity': 0.71619...
    28          25               0.373            34  [{'document_id': 1100401, 'similarity': 0.7252...
    29          95               0.352            34  [{'document_id': 753424, 'similarity': 0.58121...
    ..         ...                 ...           ...                                                ...
    33          37               0.418            32  [{'document_id': 91809, 'similarity': 0.796179...
    34          73               0.370            31  [{'document_id': 104329, 'similarity': 0.52359...
    35          15               0.411            30  [{'document_id': 234256, 'similarity': 0.72568...
    36          17               0.393            30  [{'document_id': 275625, 'similarity': 0.55483...
    37          76               0.448            30  [{'document_id': 142884, 'similarity': 0.69939...
    38          30               0.544            29  [{'document_id': 41616, 'similarity': 0.813895...
    39          39               0.418            29  [{'document_id': 1664100, 'similarity': 0.6338...
    40          54               0.410            29  [{'document_id': 4765489, 'similarity': 0.7284...
    41          71               0.368            29  [{'document_id': 4309776, 'similarity': 0.5649...
    42          46               0.457            28  [{'document_id': 4028049, 'similarity': 0.6659...
    43          50               0.436            28  [{'document_id': 2725801, 'similarity': 0.6553...
    44           6               0.462            27  [{'document_id': 51529, 'similarity': 0.655804...
    45          75               0.375            27  [{'document_id': 3367225, 'similarity': 0.5670...
    46          20               0.357            26  [{'document_id': 331776, 'similarity': 0.53015...
    47          55               0.390            26  [{'document_id': 697225, 'similarity': 0.70705...
    48          88               0.431            26  [{'document_id': 2765569, 'similarity': 0.6848...
    49          16               0.359            25  [{'document_id': 1151329, 'similarity': 0.5492...
    50          49               0.477            25  [{'document_id': 2223081, 'similarity': 0.6896...
    51          64               0.445            25  [{'document_id': 1229881, 'similarity': 0.7834...
    52          82               0.493            25  [{'document_id': 4624, 'similarity': 0.8583231...
    53          14               0.426            24  [{'document_id': 7569, 'similarity': 0.5879117...
    54          27               0.386            24  [{'document_id': 910116, 'similarity': 0.61170...
    55          78               0.334            24  [{'document_id': 4116841, 'similarity': 0.4988...
    56          94               0.318            24  [{'document_id': 1223236, 'similarity': 0.5213...
    57          47               0.461            23  [{'document_id': 3802500, 'similarity': 0.7123...
    58          56               0.374            23  [{'document_id': 2371600, 'similarity': 0.5704...
    59           7               0.539            22  [{'document_id': 79524, 'similarity': 0.852607...
    60          80               0.330            22  [{'document_id': 3261636, 'similarity': 0.5933...
    61          36               0.430            21  [{'document_id': 169, 'similarity': 0.60787840...
    62          92               0.433            21  [{'document_id': 3553225, 'similarity': 0.6121...

    [63 rows x 4 columns]

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/42d3544833d14cbb




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.955 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
