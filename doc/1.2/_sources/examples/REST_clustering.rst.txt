

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = e05b7a0df3244b90

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/e05b7a0df3244b90

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/e05b7a0df3244b90
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: english
         - sublinear_tf: False
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 7a2e4c63483d4b7d
      => SVD decomposition with 300 dimensions explaining 87.16 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = b4ad8936f47b4d9c

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/b4ad8936f47b4d9c
        .. computed in 1.2s
       cluster_id                   cluster_label  cluster_similarity  cluster_size  n_documents
    0           0       flynn normal counterparty               0.205           204          204
    1           1                tue lunch normal               0.258           180          180
    2           2          rewrite address server               1.000            56           56
    3           3                  teneo test thu               0.085           921          921
    4           4      haedicke conference update               0.170           241          241
    5           5                  ect hou lessee               0.478            82           82
    6           6  test recipients administrative               0.233           200          200
    7           7                 fri normal test               0.271           188          188
    8           8          outlook migration team               0.228           220          220
    9           9  enron_development mon schedule               0.226           173          173

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = e0ba88b22dbe459b

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/e0ba88b22dbe459b
        .. computed in 2.1s
                                                 children  cluster_depth  cluster_id                       cluster_label  cluster_similarity  cluster_size  n_documents
    0                    [1, 3, 5, 7, 25, 45, 47, 64, 74]              0           0                     normal test ect               0.074          2465         2465
    1                                                 [2]              1           1     enron_development committee esa               0.641            23           23
    2                                                  []              2           2     enron_development committee esa               0.641            23           23
    3                                                 [4]              1           3              rewrite address server               0.746            76           76
    4                                                  []              2           4              rewrite address server               0.746            76           76
    5                                                 [6]              1           5    catalytica attorney confirmation               0.547            23           23
    6                                                  []              2           6    catalytica attorney confirmation               0.547            23           23
    7   [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,...              1           7                   normal tana jones               0.145           479          479
    8                                                  []              2           8                advice update mexico               0.531            25           25
    9                                                  []              2           9         harris shackleton brokerage               0.369            36           36
    10                                                 []              2          10          shackleton_sara tana jones               0.322            30           30
    11                                                 []              2          11                     kean owner load               0.393            43           43
    12                                                 []              2          12             services deseret energy               0.386            32           32
    13                                                 []              2          13                   jones tana shults               0.397            34           34
    14                                                 []              2          14                      serc nerc said               0.526            12           12
    15                                                 []              2          15                      hyvl mail memo               0.428            24           24
    16                                                 []              2          16               month published table               0.322            28           28
    17                                                 []              2          17                 ruppert exxon nemec               1.000             1            1
    18                                                 []              2          18                     form jones tana               0.472            10           10
    19                                                 []              2          19                     load normal fri               0.475            19           19
    20                                                 []              2          20              business internet week               1.000             1            1
    21                                                 []              2          21                   normal teneo test               0.445            55           55
    22                                                 []              2          22                 test bruno gaillard               0.514            21           21
    23                                                 []              2          23                    jones tana enron               0.376            44           44
    24                                                 []              2          24             sanders normal dasovich               0.417            64           64
    25  [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 3...              1          25                  mon normal subject               0.121           543          543
    26                                                 []              2          26                nicolay southern doc               0.380            28           28
    27                                                 []              2          27                  tiger bailey sekse               0.486            19           19
    28                                                 []              2          28               shackleton south load               0.404            32           32
    29                                                 []              2          29               lessee shall operator               0.488            30           30
    ..                                                ...            ...         ...                                 ...                 ...           ...          ...
    58                                                 []              2          58       issues enron_development cone               0.345            54           54
    59                                                 []              2          59                weather master teneo               0.286            29           29
    60                                                 []              2          60                     nemec doc teneo               0.413            34           34
    61                                                 []              2          61                       wed tenet nov               0.345            49           49
    62                                                 []              2          62                  mtg migration team               0.327            50           50
    63                                                 []              2          63               electricity says cent               0.417            10           10
    64               [65, 66, 67, 68, 69, 70, 71, 72, 73]              1          64               test group recipients               0.164           322          322
    65                                                 []              2          65         enron_development heard gdr               0.398            42           42
    66                                                 []              2          66               deseret duke etringer               0.447            19           19
    67                                                 []              2          67                    test teneo alias               0.351            52           52
    68                                                 []              2          68                  haedicke test load               0.418            23           23
    69                                                 []              2          69            november tozzini marcelo               0.397            39           39
    70                                                 []              2          70                eta gtc counterparty               0.302            42           42
    71                                                 []              2          71                     lon master list               0.324            19           19
    72                                                 []              2          72                    dead enron horse               0.277            52           52
    73                                                 []              2          73         nicolay test administrative               0.534            34           34
    74  [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 8...              1          74             tenet normal ricafrente               0.167           418          418
    75                                                 []              2          75                      fri tenet team               0.329            62           62
    76                                                 []              2          76                        swap ena rmt               0.509            25           25
    77                                                 []              2          77                  budget room dining               0.342            35           35
    78                                                 []              2          78                       thu mtg enron               0.330            31           31
    79                                                 []              2          79                    wed tenet normal               0.356            46           46
    80                                                 []              2          80                    lunch neuner tue               0.310            47           47
    81                                                 []              2          81             conference tenet center               0.404            31           31
    82                                                 []              2          82                 fri fund ricafrente               0.543             8            8
    83                                                 []              2          83    ricafrente_david ricafrente meet               0.673             5            5
    84                                                 []              2          84                       thu nov tenet               0.395            34           34
    85                                                 []              2          85                     eb3325 meet tue               0.448            27           27
    86                                                 []              2          86                       tue tenet oct               0.534            23           23
    87                                                 []              2          87  ricafrente ricafrente_david normal               0.482            44           44

    [88 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/e0ba88b22dbe459b
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            4               0.746            76  [{'document_id': 5041, 'similarity': 0.9872819...
    1           54               0.552            65  [{'document_id': 2030625, 'similarity': 0.9037...
    2           24               0.417            64  [{'document_id': 3802500, 'similarity': 0.6373...
    3           75               0.329            62  [{'document_id': 3936256, 'similarity': 0.5604...
    4           21               0.445            55  [{'document_id': 358801, 'similarity': 0.60544...
    5           58               0.345            54  [{'document_id': 4165681, 'similarity': 0.6529...
    6           67               0.351            52  [{'document_id': 2149156, 'similarity': 0.6653...
    7           72               0.277            52  [{'document_id': 1157776, 'similarity': 0.4835...
    8           62               0.327            50  [{'document_id': 5480281, 'similarity': 0.7652...
    9           51               0.371            49  [{'document_id': 168921, 'similarity': 0.62655...
    10          61               0.345            49  [{'document_id': 2334784, 'similarity': 0.6801...
    11          80               0.310            47  [{'document_id': 14884, 'similarity': 0.484630...
    12          79               0.356            46  [{'document_id': 3455881, 'similarity': 0.6219...
    13          23               0.376            44  [{'document_id': 242064, 'similarity': 0.54790...
    14          42               0.312            44  [{'document_id': 4644025, 'similarity': 0.5109...
    15          87               0.482            44  [{'document_id': 2778889, 'similarity': 0.7378...
    16          11               0.393            43  [{'document_id': 162409, 'similarity': 0.73744...
    17          30               0.336            42  [{'document_id': 2446096, 'similarity': 0.7100...
    18          65               0.398            42  [{'document_id': 77284, 'similarity': 0.709562...
    19          70               0.302            42  [{'document_id': 1100401, 'similarity': 0.6316...
    20          33               0.400            40  [{'document_id': 1664100, 'similarity': 0.6789...
    21          49               0.354            39  [{'document_id': 1117249, 'similarity': 0.6199...
    22          69               0.397            39  [{'document_id': 119716, 'similarity': 0.80462...
    23          50               0.376            38  [{'document_id': 10201, 'similarity': 0.608052...
    24           9               0.369            36  [{'document_id': 31684, 'similarity': 0.745752...
    25          41               0.422            35  [{'document_id': 3783025, 'similarity': 0.5545...
    26          52               0.333            35  [{'document_id': 746496, 'similarity': 0.46296...
    27          77               0.342            35  [{'document_id': 2402500, 'similarity': 0.7753...
    28          13               0.397            34  [{'document_id': 276676, 'similarity': 0.59419...
    29          60               0.413            34  [{'document_id': 749956, 'similarity': 0.63579...
    30          73               0.534            34  [{'document_id': 156025, 'similarity': 0.92948...
    31          84               0.395            34  [{'document_id': 3587236, 'similarity': 0.7554...
    32          12               0.386            32  [{'document_id': 17424, 'similarity': 0.543016...
    33          28               0.404            32  [{'document_id': 50625, 'similarity': 0.683090...
    34          39               0.470            32  [{'document_id': 3097600, 'similarity': 0.7152...
    35          34               0.327            31  [{'document_id': 3254416, 'similarity': 0.5527...
    36          78               0.330            31  [{'document_id': 1934881, 'similarity': 0.5020...
    37          81               0.404            31  [{'document_id': 25, 'similarity': 0.731929587...
    38          10               0.322            30  [{'document_id': 198916, 'similarity': 0.58147...
    39          29               0.488            30  [{'document_id': 1615441, 'similarity': 0.7404...
    40          36               0.426            29  [{'document_id': 5978025, 'similarity': 0.6811...
    41          37               0.438            29  [{'document_id': 2250000, 'similarity': 0.6762...
    42          43               0.428            29  [{'document_id': 609961, 'similarity': 0.78716...
    43          48               0.454            29  [{'document_id': 97969, 'similarity': 0.688039...
    44          53               0.298            29  [{'document_id': 4726276, 'similarity': 0.5759...
    45          59               0.286            29  [{'document_id': 3286969, 'similarity': 0.4482...
    46          16               0.322            28  [{'document_id': 13924, 'similarity': 0.675611...
    47          26               0.380            28  [{'document_id': 2845969, 'similarity': 0.5839...
    48          44               0.445            28  [{'document_id': 3523129, 'similarity': 0.7123...
    49          57               0.439            28  [{'document_id': 3575881, 'similarity': 0.7184...
    50          31               0.315            27  [{'document_id': 879844, 'similarity': 0.45687...
    51          85               0.448            27  [{'document_id': 2579236, 'similarity': 0.6647...
    52           8               0.531            25  [{'document_id': 234256, 'similarity': 0.79673...
    53          76               0.509            25  [{'document_id': 79524, 'similarity': 0.782744...
    54          15               0.428            24  [{'document_id': 6051600, 'similarity': 0.7071...
    55           2               0.641            23  [{'document_id': 33124, 'similarity': 0.933202...
    56           6               0.547            23  [{'document_id': 6724, 'similarity': 0.6766807...
    57          40               0.281            23  [{'document_id': 3305124, 'similarity': 0.4195...
    58          68               0.418            23  [{'document_id': 998001, 'similarity': 0.65759...
    59          86               0.534            23  [{'document_id': 1887876, 'similarity': 0.7586...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/e05b7a0df3244b90




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.958 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
