

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = cde77605edea47e7

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/cde77605edea47e7

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/cde77605edea47e7
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: english
         - sublinear_tf: False
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 383bcacb26784f27
      => SVD decomposition with 300 dimensions explaining 87.16 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 20ff4e78c2cd44bd

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/20ff4e78c2cd44bd
        .. computed in 1.4s
       cluster_id                    cluster_label  cluster_similarity  cluster_size  n_documents
    0           0   enron_development shall lessee               0.414            58           58
    1           1           rewrite address server               1.000            56           56
    2           2                    ect hou shall               0.424            97           97
    3           3  ricafrente ricafrente_david mon               0.367           118          118
    4           4            test teneo recipients               0.285           176          176
    5           5                   fri oct normal               0.293           165          165
    6           6           thu shackleton subject               0.079           938          938
    7           7              wed haedicke normal               0.149           393          393
    8           8                 tenet tue normal               0.240           247          247
    9           9                 enron tana jones               0.191           217          217

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = fd8da1a1e6214702

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/fd8da1a1e6214702
        .. computed in 2.3s
                                                 children  cluster_depth  cluster_id                       cluster_label  cluster_similarity  cluster_size  n_documents
    0   [1, 3, 5, 7, 9, 13, 23, 25, 33, 37, 39, 45, 47...              0           0                     normal test ect               0.074          2465         2465
    1                                                 [2]              1           1     management performance password               0.947             4            4
    2                                                  []              2           2     management performance password               0.947             4            4
    3                                                 [4]              1           3              trade online investing               0.626             9            9
    4                                                  []              2           4              trade online investing               0.626             9            9
    5                                                 [6]              1           5           company officer signature               0.746             3            3
    6                                                  []              2           6           company officer signature               0.746             3            3
    7                                                 [8]              1           7          transaction floating party               0.480            28           28
    8                                                  []              2           8          transaction floating party               0.480            28           28
    9                                        [10, 11, 12]              1           9              lessee services lessor               0.222           104          104
    10                                                 []              2          10                    deal isda hendry               0.362            34           34
    11                                                 []              2          11                services energy date               0.452            25           25
    12                                                 []              2          12                 lessee shall lessor               0.357            45           45
    13               [14, 15, 16, 17, 18, 19, 20, 21, 22]              1          13                    normal load test               0.209           271          271
    14                                                 []              2          14                shackleton load test               0.537             9            9
    15                                                 []              2          15            harris account brokerage               0.443            29           29
    16                                                 []              2          16                  kean guaranty load               0.382            25           25
    17                                                 []              2          17                 tue shackleton cini               0.367            16           16
    18                                                 []              2          18                   load teneo normal               0.454            39           39
    19                                                 []              2          19                  odor deseret urine               0.295            27           27
    20                                                 []              2          20                   normal test teneo               0.498            44           44
    21                                                 []              2          21                sanders class normal               0.415            48           48
    22                                                 []              2          22    shackleton shackleton_sara south               0.438            34           34
    23                                               [24]              1          23              rewrite address server               0.472           133          133
    24                                                 []              2          24              rewrite address server               0.472           133          133
    25                       [26, 27, 28, 29, 30, 31, 32]              1          25      test recipients administrative               0.213           228          228
    26                                                 []              2          26             credit counterparty mtm               0.387            26           26
    27                                                 []              2          27                     jones tana load               0.432            33           33
    28                                                 []              2          28                    tana jones awais               0.453            17           17
    29                                                 []              2          29                 isda agreement poon               0.393            13           13
    ..                                                ...            ...         ...                                 ...                 ...           ...          ...
    61                                                 []              2          61                     nemec doc sheet               0.392            27           27
    62                                                 []              2          62               haedicke sweet twanda               0.342            24           24
    63                                                 []              2          63           bockius teneo taylor_mark               0.382            15           15
    64                                                 []              2          64                   dickson ect hodge               0.396            24           24
    65                                                 []              2          65             otc working derivatives               0.330            37           37
    66                                                 []              2          66                account teneo brazil               0.365            20           20
    67                                                 []              2          67  enrononline americancentury letter               0.326            26           26
    68                                                 []              2          68                 teneo dupre forster               0.301            33           33
    69                                                 []              2          69         shackleton_sara teneo class               0.349            20           20
    70                                                 []              2          70              outlook migration team               0.466            53           53
    71                           [72, 73, 74, 75, 76, 77]              1          71                  eb3325 meet normal               0.189           259          259
    72                                                 []              2          72                     alias thu legal               0.326            37           37
    73                                                 []              2          73                     shall enron ect               0.305            41           41
    74                                                 []              2          74             financial murray eb3325               0.330            43           43
    75                                                 []              2          75              eb3325 meet ricafrente               0.465            52           52
    76                                                 []              2          76                      oct wed normal               0.346            54           54
    77                                                 []              2          77                       tenet tue oct               0.379            32           32
    78   [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]              1          78                tenet normal meeting               0.167           390          390
    79                                                 []              2          79           performance contract year               0.282            29           29
    80                                                 []              2          80                 haedicke think long               0.402            19           19
    81                                                 []              2          81              pier doubleclick gpier               0.520             7            7
    82                                                 []              2          82                     wed nov milbank               0.369            48           48
    83                                                 []              2          83                    tenet fri normal               0.372            44           44
    84                                                 []              2          84                   meeting tenet mon               0.407            48           48
    85                                                 []              2          85             kincannon lunch meeting               0.430            28           28
    86                                                 []              2          86                    mon tenet normal               0.383            52           52
    87                                                 []              2          87         sanders normal counterparty               0.362            32           32
    88                                                 []              2          88                    tue tenet normal               0.406            39           39
    89                                                 []              2          89                        lay mtg room               0.639             3            3
    90                                                 []              2          90                    mtg tenet normal               0.478            41           41

    [91 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/fd8da1a1e6214702
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           24               0.472           133  [{'document_id': 5041, 'similarity': 0.8910995...
    1           55               0.290            89  [{'document_id': 3717184, 'similarity': 0.4400...
    2           30               0.336            65  [{'document_id': 534361, 'similarity': 0.70341...
    3           54               0.383            56  [{'document_id': 33124, 'similarity': 0.726441...
    4           31               0.383            54  [{'document_id': 156025, 'similarity': 0.85298...
    5           53               0.341            54  [{'document_id': 1664100, 'similarity': 0.5993...
    6           58               0.313            54  [{'document_id': 749956, 'similarity': 0.56504...
    7           76               0.346            54  [{'document_id': 2313441, 'similarity': 0.6264...
    8           44               0.346            53  [{'document_id': 3025, 'similarity': 0.5909158...
    9           70               0.466            53  [{'document_id': 5527201, 'similarity': 0.7477...
    10          34               0.389            52  [{'document_id': 784, 'similarity': 0.65295441...
    11          75               0.465            52  [{'document_id': 2676496, 'similarity': 0.6379...
    12          86               0.383            52  [{'document_id': 3097600, 'similarity': 0.6910...
    13          56               0.321            51  [{'document_id': 583696, 'similarity': 0.65216...
    14          40               0.380            49  [{'document_id': 1306449, 'similarity': 0.6182...
    15          21               0.415            48  [{'document_id': 1418481, 'similarity': 0.6475...
    16          82               0.369            48  [{'document_id': 1703025, 'similarity': 0.7158...
    17          84               0.407            48  [{'document_id': 2604996, 'similarity': 0.7046...
    18          12               0.357            45  [{'document_id': 672400, 'similarity': 0.68249...
    19          20               0.498            44  [{'document_id': 358801, 'similarity': 0.65645...
    20          83               0.372            44  [{'document_id': 3587236, 'similarity': 0.5254...
    21          74               0.330            43  [{'document_id': 2765569, 'similarity': 0.5577...
    22          73               0.305            41  [{'document_id': 3132900, 'similarity': 0.6466...
    23          90               0.478            41  [{'document_id': 1817104, 'similarity': 0.6488...
    24          18               0.454            39  [{'document_id': 370881, 'similarity': 0.60377...
    25          36               0.356            39  [{'document_id': 3326976, 'similarity': 0.5557...
    26          49               0.465            39  [{'document_id': 2076481, 'similarity': 0.7276...
    27          88               0.406            39  [{'document_id': 1827904, 'similarity': 0.6331...
    28          65               0.330            37  [{'document_id': 1119364, 'similarity': 0.6955...
    29          72               0.326            37  [{'document_id': 5740816, 'similarity': 0.5836...
    30          60               0.337            36  [{'document_id': 1042441, 'similarity': 0.5251...
    31          10               0.362            34  [{'document_id': 108241, 'similarity': 0.49034...
    32          22               0.438            34  [{'document_id': 4601025, 'similarity': 0.6444...
    33          27               0.432            33  [{'document_id': 277729, 'similarity': 0.62278...
    34          68               0.301            33  [{'document_id': 3594816, 'similarity': 0.5046...
    35          77               0.379            32  [{'document_id': 1758276, 'similarity': 0.7204...
    36          87               0.362            32  [{'document_id': 4048144, 'similarity': 0.5872...
    37          15               0.443            29  [{'document_id': 29584, 'similarity': 0.815267...
    38          35               0.394            29  [{'document_id': 1520289, 'similarity': 0.6153...
    39          79               0.282            29  [{'document_id': 1803649, 'similarity': 0.4840...
    40           8               0.480            28  [{'document_id': 168921, 'similarity': 0.81686...
    41          85               0.430            28  [{'document_id': 2611456, 'similarity': 0.7943...
    42          19               0.295            27  [{'document_id': 12769, 'similarity': 0.524396...
    43          57               0.334            27  [{'document_id': 544644, 'similarity': 0.67216...
    44          61               0.392            27  [{'document_id': 1612900, 'similarity': 0.5794...
    45          26               0.387            26  [{'document_id': 7569, 'similarity': 0.6899123...
    46          67               0.326            26  [{'document_id': 3579664, 'similarity': 0.4967...
    47          11               0.452            25  [{'document_id': 116281, 'similarity': 0.61192...
    48          16               0.382            25  [{'document_id': 137641, 'similarity': 0.61328...
    49          59               0.416            25  [{'document_id': 3164841, 'similarity': 0.6593...
    50          62               0.342            24  [{'document_id': 2537649, 'similarity': 0.6493...
    51          64               0.396            24  [{'document_id': 3621409, 'similarity': 0.5610...
    52          38               0.446            23  [{'document_id': 625681, 'similarity': 0.78233...
    53          43               0.524            22  [{'document_id': 627264, 'similarity': 0.87025...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/cde77605edea47e7




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  11.027 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
