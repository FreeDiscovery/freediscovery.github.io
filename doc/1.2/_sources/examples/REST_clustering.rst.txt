

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['id']
       => dsid = 379f5105c5394de6

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/379f5105c5394de6

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/379f5105c5394de6
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: /home/ubuntu/freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 1.0
         - min_df: 0.0
         - n_features: 100001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - parse_email_headers: False
         - stop_words: english
         - sublinear_tf: False
         - use_hashing: False
         - use_idf: False

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 26157f49feba4d06
      => SVD decomposition with 300 dimensions explaining 87.17 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = 7a85b1dcb59a445c

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/7a85b1dcb59a445c
        .. computed in 1.3s
       cluster_id                   cluster_label  cluster_similarity  cluster_size  n_documents
    0           0           flynn subject deseret               0.203           178          178
    1           1                  teneo test thu               0.254           185          185
    2           2          rewrite address server               1.000            56           56
    3           3  enron enron_development normal               0.074          1055         1055
    4           4        haedicke transaction ect               0.228           156          156
    5           5                  tue oct normal               0.295           137          137
    6           6                  ect hou normal               0.290           179          179
    7           7                  normal wed oct               0.316           139          139
    8           8                nov normal tenet               0.269           174          174
    9           9  test recipients administrative               0.236           206          206

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = f11d82a2952947ad

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/f11d82a2952947ad
        .. computed in 2.2s
                                                 children  cluster_depth  cluster_id                     cluster_label  cluster_similarity  cluster_size  n_documents
    0    [1, 3, 5, 7, 14, 16, 23, 28, 39, 44, 48, 63, 65]              0           0                   normal test ect               0.074          2465         2465
    1                                                 [2]              1           1   enron_development committee esa               0.581            29           29
    2                                                  []              2           2   enron_development committee esa               0.581            29           29
    3                                                 [4]              1           3        sample agreements malowney               0.837             7            7
    4                                                  []              2           4        sample agreements malowney               0.837             7            7
    5                                                 [6]              1           5                deals trading list               0.641             7            7
    6                                                  []              2           6                deals trading list               0.641             7            7
    7                              [8, 9, 10, 11, 12, 13]              1           7            kean tiger transaction               0.177           214          214
    8                                                  []              2           8              tiger bailey foreign               0.373            33           33
    9                                                  []              2           9            hendry tozzini marcelo               0.372            57           57
    10                                                 []              2          10            attorney south outside               0.664            12           12
    11                                                 []              2          11              kean transaction ena               0.392            59           59
    12                                                 []              2          12              dasovich deseret san               0.315            27           27
    13                                                 []              2          13              tiger guaranty party               0.366            26           26
    14                                               [15]              1          14            rewrite address server               0.675            87           87
    15                                                 []              2          15            rewrite address server               0.675            87           87
    16                           [17, 18, 19, 20, 21, 22]              1          16               normal sanders load               0.239           230          230
    17                                                 []              2          17  shackleton shackleton_sara class               0.317            58           58
    18                                                 []              2          18          services shackleton risk               0.384            19           19
    19                                                 []              2          19                   load fri normal               0.462            44           44
    20                                                 []              2          20              load meet shackleton               0.432            27           27
    21                                                 []              2          21                 normal neuner oct               0.387            43           43
    22                                                 []              2          22              sanders lunch normal               0.533            39           39
    23                                   [24, 25, 26, 27]              1          23       teneo flynn shackleton_sara               0.245            94           94
    24                                                 []              2          24          harris account brokerage               0.474            26           26
    25                                                 []              2          25                flynn smud deseret               0.410            33           33
    26                                                 []              2          26       power shackleton_sara class               0.418            11           11
    27                                                 []              2          27                  teneo group test               0.360            24           24
    28           [29, 30, 31, 32, 33, 34, 35, 36, 37, 38]              1          28              haedicke shall nemec               0.130           408          408
    29                                                 []              2          29             lessee shall customer               0.285            67           67
    ..                                                ...            ...         ...                               ...                 ...           ...          ...
    55                                                 []              2          55                     tenet mon oct               0.450            36           36
    56                                                 []              2          56                  tenet normal wed               0.332            84           84
    57                                                 []              2          57                  enron tana jones               0.319            39           39
    58                                                 []              2          58                 wed project bowen               0.561             9            9
    59                                                 []              2          59                     tue tenet oct               0.410            38           38
    60                                                 []              2          60                 tenet meeting mon               0.421            42           42
    61                                                 []              2          61                     thu tenet oct               0.426            25           25
    62                                                 []              2          62                     fri tenet oct               0.367            55           55
    63                                               [64]              1          63            enrononline user trade               0.508            11           11
    64                                                 []              2          64            enrononline user trade               0.508            11           11
    65  [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 7...              1          65              ect eb3325 migration               0.106           583          583
    66                                                 []              2          66              advice update mexico               0.368            48           48
    67                                                 []              2          67         transmission memo company               0.469            10           10
    68                                                 []              2          68           dasovich project energy               0.287            33           33
    69                                                 []              2          69         training midland document               0.404            16           16
    70                                                 []              2          70               sampling site enron               0.348            32           32
    71                                                 []              2          71                  dead clair horse               0.350            37           37
    72                                                 []              2          72                     ect hou ellis               0.478            24           24
    73                                                 []              2          73            letter midamerican law               0.278            39           39
    74                                                 []              2          74                    lon ect master               0.369            31           31
    75                                                 []              2          75                   hyvl bump enron               0.367            31           31
    76                                                 []              2          76             eb3325 meet kincannon               0.368            70           70
    77                                                 []              2          77               serc approved place               0.434            19           19
    78                                                 []              2          78              list message mexican               0.409             9            9
    79                                                 []              2          79       teneo taylor_mark argentina               0.357            20           20
    80                                                 []              2          80               test bruno gaillard               0.415            28           28
    81                                                 []              2          81           dasovich normal control               0.375            24           24
    82                                                 []              2          82      americancentury trade master               0.348            17           17
    83                                                 []              2          83               sweet twanda letter               0.325            27           27
    84                                                 []              2          84            migration outlook team               0.370            68           68

    [85 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/f11d82a2952947ad
        .. computed in 0.1s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0           15               0.675            87  [{'document_id': 5041, 'similarity': 0.9538680...
    1           56               0.332            84  [{'document_id': 2334784, 'similarity': 0.5848...
    2           76               0.368            70  [{'document_id': 3041536, 'similarity': 0.5653...
    3           37               0.302            68  [{'document_id': 1664100, 'similarity': 0.5500...
    4           84               0.370            68  [{'document_id': 5480281, 'similarity': 0.6554...
    5           29               0.285            67  [{'document_id': 760384, 'similarity': 0.54804...
    6           11               0.392            59  [{'document_id': 5564881, 'similarity': 0.5303...
    7           17               0.317            58  [{'document_id': 28900, 'similarity': 0.492414...
    8            9               0.372            57  [{'document_id': 99225, 'similarity': 0.628748...
    9           49               0.359            57  [{'document_id': 131769, 'similarity': 0.58721...
    10          62               0.367            55  [{'document_id': 3294225, 'similarity': 0.6805...
    11          30               0.337            53  [{'document_id': 710649, 'similarity': 0.62775...
    12          35               0.326            49  [{'document_id': 956484, 'similarity': 0.57214...
    13          43               0.494            48  [{'document_id': 855625, 'similarity': 0.90173...
    14          66               0.368            48  [{'document_id': 227529, 'similarity': 0.59466...
    15          41               0.391            46  [{'document_id': 215296, 'similarity': 0.63283...
    16          36               0.452            45  [{'document_id': 2920681, 'similarity': 0.6469...
    17          19               0.462            44  [{'document_id': 370881, 'similarity': 0.64397...
    18          50               0.383            44  [{'document_id': 2353156, 'similarity': 0.6524...
    19          21               0.387            43  [{'document_id': 351649, 'similarity': 0.65785...
    20          53               0.327            43  [{'document_id': 1168561, 'similarity': 0.5040...
    21          60               0.421            42  [{'document_id': 6041764, 'similarity': 0.7147...
    22          22               0.533            39  [{'document_id': 1317904, 'similarity': 0.6835...
    23          57               0.319            39  [{'document_id': 2128681, 'similarity': 0.5661...
    24          73               0.278            39  [{'document_id': 1324801, 'similarity': 0.3972...
    25          59               0.410            38  [{'document_id': 1737124, 'similarity': 0.6843...
    26          71               0.350            37  [{'document_id': 1042441, 'similarity': 0.4928...
    27          54               0.348            36  [{'document_id': 543169, 'similarity': 0.65381...
    28          55               0.450            36  [{'document_id': 3080025, 'similarity': 0.6444...
    29          31               0.400            34  [{'document_id': 680625, 'similarity': 0.60289...
    30          46               0.459            34  [{'document_id': 91809, 'similarity': 0.732443...
    31           8               0.373            33  [{'document_id': 20736, 'similarity': 0.596539...
    32          25               0.410            33  [{'document_id': 10404, 'similarity': 0.673500...
    33          45               0.416            33  [{'document_id': 6724, 'similarity': 0.5838774...
    34          68               0.287            33  [{'document_id': 331776, 'similarity': 0.44859...
    35          70               0.348            32  [{'document_id': 900601, 'similarity': 0.52136...
    36          74               0.369            31  [{'document_id': 3164841, 'similarity': 0.6595...
    37          75               0.367            31  [{'document_id': 6051600, 'similarity': 0.6611...
    38          32               0.326            30  [{'document_id': 434281, 'similarity': 0.49375...
    39           2               0.581            29  [{'document_id': 33124, 'similarity': 0.901820...
    40          38               0.319            29  [{'document_id': 3798601, 'similarity': 0.4964...
    41          42               0.391            29  [{'document_id': 4959529, 'similarity': 0.8073...
    42          80               0.415            28  [{'document_id': 362404, 'similarity': 0.74408...
    43          12               0.315            27  [{'document_id': 82944, 'similarity': 0.458617...
    44          20               0.432            27  [{'document_id': 64516, 'similarity': 0.707618...
    45          83               0.325            27  [{'document_id': 1437601, 'similarity': 0.5740...
    46          13               0.366            26  [{'document_id': 35344, 'similarity': 0.636264...
    47          24               0.474            26  [{'document_id': 4596736, 'similarity': 0.8933...
    48          52               0.393            26  [{'document_id': 1710864, 'similarity': 0.6986...
    49          40               0.353            25  [{'document_id': 341056, 'similarity': 0.46087...
    50          47               0.426            25  [{'document_id': 1117249, 'similarity': 0.7904...
    51          61               0.426            25  [{'document_id': 2232036, 'similarity': 0.6654...
    52          27               0.360            24  [{'document_id': 4622500, 'similarity': 0.5493...
    53          72               0.478            24  [{'document_id': 4422609, 'similarity': 0.8451...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/379f5105c5394de6




|


.. code-block:: python


    import os.path
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])}
                          for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {  # 'min_df': 4, 'max_df': 0.75  # filter out (too)/(un)frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url, json={'dataset_definition': dataset_definition})

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items()
                     if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 300
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print(('  => SVD decomposition with {} dimensions '
           'explaining {:.2f} % variabilty of the data')
          .format(n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              'min_similarity': 0.7,
                              'branching_factor': 20,
                              'max_tree_depth': 2,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  10.883 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
