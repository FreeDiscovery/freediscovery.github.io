

.. _sphx_glr_examples_REST_clustering.py:


Clustering Example [REST API]
-----------------------------

Cluster documents into clusters





.. rst-class:: sphx-glr-script-out

 Out::

    0. Load the example dataset
     GET http://localhost:5001/api/v0/example-dataset/treclegal09_2k_subset

    1.a Load dataset and initalize feature extraction
     POST http://localhost:5001/api/v0/feature-extraction
       => received ['filenames', 'id']
       => dsid = 00df424e16144355

    1.b Run feature extraction
     POST http://localhost:5001/api/v0/feature-extraction/00df424e16144355

    1.d. check the parameters of the extracted features
     GET http://localhost:5001/api/v0/feature-extraction/00df424e16144355
         - analyzer: word
         - binary: False
         - chunk_size: 5000
         - data_dir: ../freediscovery_shared/treclegal09_2k_subset/data/jobRun_4/XML_EXPORT_CONTENT/text_9
         - max_df: 0.75
         - min_df: 4.0
         - n_features: 30001
         - n_jobs: 1
         - n_samples: 2465
         - n_samples_processed: 2465
         - ngram_range: [1, 1]
         - norm: l2
         - stop_words: None
         - sublinear_tf: True
         - use_hashing: False
         - use_idf: True

    2. Calculate LSI
    POST http://localhost:5001/api/v0/lsi/
      => LSI model id = 589c1a4074544f8f
      => SVD decomposition with 100 dimensions explaining 53.28 % variabilty of the data

    3.a. Document clustering (LSI + K-means)
     POST http://localhost:5001/api/v0/clustering/k-mean/
         => model id = e37693ec5a5744f5

    3.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/k-mean/e37693ec5a5744f5
        .. computed in 1.6s
       cluster_id            cluster_label  cluster_similarity  cluster_size  n_documents
    0           0            ect hou teneo               0.331           536          536
    1           1     haedicke meeting oct               0.391           238          238
    2           2   dasovich berkeley haas               0.385           337          337
    3           3             fri oct test               0.356           336          336
    4           4            wed nov lunch               0.373           265          265
    5           5   migration outlook team               0.393           216          216
    6           6        master tana jones               0.361           259          259
    7           7  shall party transaction               0.557            93           93
    8           8   rewrite server address               1.000            56           56
    9           9         enron tana jones               0.425           129          129

    4.a. Document clustering (LSI + Birch clustering)
     POST http://localhost:5001/api/v0/clustering/birch/
         => model id = 533c0c76a2a14978

    4.b. Computing cluster labels
     GET http://localhost:5001/api/v0/clustering/birch/533c0c76a2a14978
        .. computed in 2.8s
                                        children  cluster_depth  cluster_id                       cluster_label  cluster_similarity  cluster_size  n_documents
    0         [1, 3, 10, 13, 17, 28, 32, 52, 59]              0           0                        test ect oct               0.294          2465         2465
    1                                        [2]              1           1              rewrite server address               0.904            64           64
    2                                         []              2           2              rewrite server address               0.904            64           64
    3                         [4, 5, 6, 7, 8, 9]              1           3                       ect hou enron               0.365           286          286
    4                                         []              2           4                  shackleton ena rmt               0.438            58           58
    5                                         []              2           5            nicolay ingersoll presto               0.650            22           22
    6                                         []              2           6                dupre doc catalytica               0.492            27           27
    7                                         []              2           7      test recipients administrative               0.546            46           46
    8                                         []              2           8                       tiger ect lon               0.466            61           61
    9                                         []              2           9                       ect hou clair               0.572            72           72
    10                                  [11, 12]              1          10                    shall party kean               0.453           149          149
    11                                        []              2          11             party shall transaction               0.512           100          100
    12                                        []              2          12                shall kean agreement               0.622            49           49
    13                              [14, 15, 16]              1          13                        load fri oct               0.480            85           85
    14                                        []              2          14                       load thu conf               0.512            34           34
    15                                        []              2          15                         oct fri thu               0.596            14           14
    16                                        []              2          16                        load fri nov               0.533            37           37
    17  [18, 19, 20, 21, 22, 23, 24, 25, 26, 27]              1          17             sanders dasovich energy               0.335           577          577
    18                                        []              2          18                 berkeley haas alias               0.417           100          100
    19                                        []              2          19          energy market transmission               0.561            77           77
    20                                        []              2          20               deseret etringer utah               0.581            30           30
    21                                        []              2          21             dasovich bruno gaillard               0.507            71           71
    22                                        []              2          22                      budget rcr cat               0.431            59           59
    23                                        []              2          23       transaction enrononline price               0.468            69           69
    24                                        []              2          24              sampling bret campbell               0.554            27           27
    25                                        []              2          25                   sanders nov lunch               0.579            72           72
    26                                        []              2          26            cash canadian collateral               0.704            13           13
    27                                        []              2          27                      dead hyvl bump               0.427            59           59
    28                              [29, 30, 31]              1          28                    tana jones enron               0.451           117          117
    29                                        []              2          29                   tana jones master               0.584            29           29
    ..                                       ...            ...         ...                                 ...                 ...           ...          ...
    34                                        []              2          34               calo harris brokerage               0.469            59           59
    35                                        []              2          35                marcelo tozzini afac               0.515            69           69
    36                                        []              2          36             haedicke conference tue               0.486            50           50
    37                                        []              2          37                 ruppert nemec exxon               0.553            47           47
    38                                        []              2          38  haedicke recipients administrative               0.430            47           47
    39                                        []              2          39         message milbank midamerican               0.439            47           47
    40                                        []              2          40                advice update mexico               0.468            60           60
    41                                        []              2          41        nemec agreement interconnect               0.556            56           56
    42                                        []              2          42              ellis library attorney               0.512            21           21
    43                                        []              2          43                     wed eb3325 meet               0.499            27           27
    44                                        []              2          44       catalytica confirmation ortiz               0.560            28           28
    45                                        []              2          45                       mtg tue tenet               0.472            48           48
    46                                        []              2          46                       thu nov tenet               0.471            39           39
    47                                        []              2          47             kincannon lunch meeting               0.572            26           26
    48                                        []              2          48         teneo shackleton_sara class               0.437            58           58
    49                                        []              2          49     ricafrente_david ricafrente wed               0.417            56           56
    50                                        []              2          50                      gtc master eta               0.677            17           17
    51                                        []              2          51              migration outlook team               0.711            38           38
    52                  [53, 54, 55, 56, 57, 58]              1          52                   tenet mon meeting               0.382           228          228
    53                                        []              2          53                meeting tenet budget               0.512            53           53
    54                                        []              2          54                       wed tenet oct               0.510            28           28
    55                                        []              2          55                   meeting mon tenet               0.584            17           17
    56                                        []              2          56                tue tenet conference               0.472            34           34
    57                                        []              2          57                    mon tenet eb3325               0.487            67           67
    58                                        []              2          58                       fri tenet tue               0.492            29           29
    59                          [60, 61, 62, 63]              1          59                      thu oct neuner               0.391           112          112
    60                                        []              2          60                     pier usvi gpier               0.517            46           46
    61                                        []              2          61               neuner wed catalytica               0.511            23           23
    62                                        []              2          62                       thu oct tenet               0.528            32           32
    63                                        []              2          63                     party rice kean               0.571            11           11

    [64 rows x 7 columns]

    4.a. Optimal sampling (LSI + Birch clustering)
     GET http://localhost:5001/api/v0/clustering/birch/533c0c76a2a14978
        .. computed in 0.6s
        cluster_id  cluster_similarity  cluster_size                                          documents
    0            0               0.512           100  [{'document_id': 599076, 'similarity': 0.51164...
    1            1               0.417           100  [{'document_id': 403225, 'similarity': 0.41707...
    2            2               0.561            77  [{'document_id': 207025, 'similarity': 0.56145...
    3            3               0.572            72  [{'document_id': 4892944, 'similarity': 0.5721...
    4            4               0.579            72  [{'document_id': 3814209, 'similarity': 0.5789...
    5            5               0.507            71  [{'document_id': 583696, 'similarity': 0.50658...
    6            6               0.468            69  [{'document_id': 116281, 'similarity': 0.46823...
    7            7               0.515            69  [{'document_id': 99856, 'similarity': 0.514707...
    8            8               0.487            67  [{'document_id': 3407716, 'similarity': 0.4869...
    9            9               0.904            64  [{'document_id': 5041, 'similarity': 0.9040810...
    10          10               0.466            61  [{'document_id': 1207801, 'similarity': 0.4660...
    11          11               0.468            60  [{'document_id': 220900, 'similarity': 0.46829...
    12          12               0.431            59  [{'document_id': 532900, 'similarity': 0.43134...
    13          13               0.427            59  [{'document_id': 6066369, 'similarity': 0.4265...
    14          14               0.490            59  [{'document_id': 265225, 'similarity': 0.48999...
    15          15               0.469            59  [{'document_id': 27889, 'similarity': 0.469021...
    16          16               0.438            58  [{'document_id': 13689, 'similarity': 0.437742...
    17          17               0.437            58  [{'document_id': 4853209, 'similarity': 0.4365...
    18          18               0.556            56  [{'document_id': 753424, 'similarity': 0.55569...
    19          19               0.417            56  [{'document_id': 5480281, 'similarity': 0.4170...
    20          20               0.571            54  [{'document_id': 625, 'similarity': 0.57067358...
    21          21               0.512            53  [{'document_id': 3052009, 'similarity': 0.5117...
    22          22               0.486            50  [{'document_id': 2518569, 'similarity': 0.4864...
    23          23               0.622            49  [{'document_id': 608400, 'similarity': 0.62155...
    24          24               0.472            48  [{'document_id': 2996361, 'similarity': 0.4720...
    25          25               0.553            47  [{'document_id': 717409, 'similarity': 0.55338...
    26          26               0.430            47  [{'document_id': 1729225, 'similarity': 0.4295...
    27          27               0.439            47  [{'document_id': 4088484, 'similarity': 0.4392...
    28          28               0.546            46  [{'document_id': 855625, 'similarity': 0.54583...
    29          29               0.517            46  [{'document_id': 3496900, 'similarity': 0.5171...
    30          30               0.471            39  [{'document_id': 3587236, 'similarity': 0.4712...
    31          31               0.711            38  [{'document_id': 5322249, 'similarity': 0.7114...
    32          32               0.533            37  [{'document_id': 370881, 'similarity': 0.53270...
    33          33               0.512            34  [{'document_id': 820836, 'similarity': 0.51154...
    34          34               0.472            34  [{'document_id': 1893376, 'similarity': 0.4716...
    35          35               0.528            32  [{'document_id': 2232036, 'similarity': 0.5283...
    36          36               0.581            30  [{'document_id': 72900, 'similarity': 0.580694...
    37          37               0.584            29  [{'document_id': 1976836, 'similarity': 0.5841...
    38          38               0.581            29  [{'document_id': 1946025, 'similarity': 0.5810...
    39          39               0.492            29  [{'document_id': 5607424, 'similarity': 0.4917...
    40          40               0.560            28  [{'document_id': 6724, 'similarity': 0.5602832...
    41          41               0.510            28  [{'document_id': 2304324, 'similarity': 0.5102...

    5. Delete the extracted features
     DELETE http://localhost:5001/api/v0/feature-extraction/00df424e16144355




|


.. code-block:: python


    import os.path
    import numpy as np
    import pandas as pd
    from time import time
    import requests

    pd.options.display.float_format = '{:,.3f}'.format


    dataset_name = "treclegal09_2k_subset"     # see list of available datasets

    BASE_URL = "http://localhost:5001/api/v0"  # FreeDiscovery server URL

    print(" 0. Load the example dataset")
    url = BASE_URL + '/example-dataset/{}'.format(dataset_name)
    print(" GET", url)
    input_ds = requests.get(url).json()

    # To use a custom dataset, simply specify the following variables
    data_dir = input_ds['metadata']['data_dir']
    dataset_definition = [{'document_id': row['document_id'],
                           'file_path': os.path.join(data_dir, row['file_path'])} \
                                   for row in input_ds['dataset']]

    # # 1. Feature extraction (non hashed)

    print("\n1.a Load dataset and initalize feature extraction")
    url = BASE_URL + '/feature-extraction'
    print(" POST", url)
    fe_opts = {'dataset_definition': dataset_definition,
               'use_idf': 1, 'n_features': 30001,
               'min_df': 4, 'max_df': 0.75 # filter out unfrequent / too frequent words
               }
    res = requests.post(url, json=fe_opts).json()

    dsid = res['id']
    print("   => received {}".format(list(res.keys())))
    print("   => dsid = {}".format(dsid))


    print("\n1.b Run feature extraction")
    # progress status is available for the hashed version only
    url = BASE_URL+'/feature-extraction/{}'.format(dsid)
    print(" POST", url)
    res = requests.post(url)

    print("\n1.d. check the parameters of the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(' GET', url)
    res = requests.get(url).json()

    print('\n'.join(['     - {}: {}'.format(key, val) for key, val in res.items() \
                                                      if "filenames" not in key]))

    print("\n2. Calculate LSI")

    url = BASE_URL + '/lsi/'
    print("POST", url)

    n_components = 100
    res = requests.post(url,
                        json={'n_components': n_components,
                              'parent_id': dsid
                              }).json()

    lsi_id = res['id']
    print('  => LSI model id = {}'.format(lsi_id))
    print('  => SVD decomposition with {} dimensions explaining {:.2f} % variabilty of the data'.format(
                            n_components, res['explained_variance']*100))

    # # 3. Document Clustering (LSI + K-Means)

    print("\n3.a. Document clustering (LSI + K-means)")

    url = BASE_URL + '/clustering/k-mean/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': 10,
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n3.b. Computing cluster labels")
    url = BASE_URL + '/clustering/k-mean/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()


    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    print(pd.DataFrame(data))


    # # 4. Document Clustering (LSI + Birch Clustering)

    print("\n4.a. Document clustering (LSI + Birch clustering)")

    url = BASE_URL + '/clustering/birch/'
    print(" POST", url)
    t0 = time()
    res = requests.post(url,
                        json={'parent_id': lsi_id,
                              'n_clusters': -1,
                              #'min_similarity': 0.95,
                              'branching_factor': 20 
                              }).json()

    mid = res['id']
    print("     => model id = {}".format(mid))

    print("\n4.b. Computing cluster labels")
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'n_top_words': 3
                             }).json()
    t1 = time()

    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']
    for row in data:
        row['n_documents'] = len(row.pop('documents'))

    print(pd.DataFrame(data))

    # # 4. Optimal sampling (LSI + Birch Clustering)

    print("\n4.a. Optimal sampling (LSI + Birch clustering)")

    t0 = time()
    url = BASE_URL + '/clustering/birch/{}'.format(mid)
    print(" GET", url)
    res = requests.get(url,
                       json={'return_optimal_sampling': True,
                             'sampling_min_coverage': 0.9
                             }).json()
    t1 = time()
    print('    .. computed in {:.1f}s'.format(t1 - t0))
    data = res['data']

    print(pd.DataFrame(data))

    # 4. Cleaning
    print("\n5. Delete the extracted features")
    url = BASE_URL + '/feature-extraction/{}'.format(dsid)
    print(" DELETE", url)
    requests.delete(url)

**Total running time of the script:** ( 0 minutes  9.886 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: REST_clustering.py <REST_clustering.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: REST_clustering.ipynb <REST_clustering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
